<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE QDOCINDEX>
<INDEX url="" title="Extending Qt Creator Manual" version="" project="qtcreator-dev" indexTitle="Extending Qt Creator Manual">
    <namespace name="" status="active" access="public" module="qtcreator-dev">
        <namespace name="Aggregation" href="aggregation.html" status="active" access="public" location="aggregate.h" filepath="C:/Users/qt/work/build/qt-creator/src/libs/aggregation/aggregate.h" lineno="36" documented="true" module="QtCreator" brief="Contains support for bundling related components, so that each component exposes the properties and behavior of the other components to the outside">
            <class threadsafety="thread safe" name="Aggregate" fullname="Aggregation::Aggregate" href="aggregation-aggregate.html" status="active" access="public" location="aggregate.h" filepath="C:/Users/qt/work/build/qt-creator/src/libs/aggregation/aggregate.h" lineno="38" documented="true" groups="mainclasses" bases="QObject" module="QtCreator" brief="Defines a collection of related components that can be viewed as a unit">
                <function name="Aggregate" fullname="Aggregation::Aggregate::Aggregate" href="aggregation-aggregate.html#Aggregate" status="active" access="public" location="aggregate.h" filepath="C:/Users/qt/work/build/qt-creator/src/libs/aggregation/aggregate.h" lineno="43" documented="true" meta="constructor" virtual="non" const="false" static="false" final="false" override="false" type="" signature="Aggregate(QObject *parent)">
                    <parameter type="QObject *" name="parent" default="nullptr"/>
                </function>
                <function name="add" fullname="Aggregation::Aggregate::add" href="aggregation-aggregate.html#add" status="active" access="public" location="aggregate.h" filepath="C:/Users/qt/work/build/qt-creator/src/libs/aggregation/aggregate.h" lineno="46" documented="true" meta="plain" virtual="non" const="false" static="false" final="false" override="false" type="void" signature="void add(QObject *component)">
                    <parameter type="QObject *" name="component" default=""/>
                </function>
                <function name="changed" fullname="Aggregation::Aggregate::changed" href="aggregation-aggregate.html#changed" status="active" access="public" location="aggregate.h" filepath="C:/Users/qt/work/build/qt-creator/src/libs/aggregation/aggregate.h" lineno="73" documented="true" meta="signal" virtual="non" const="false" static="false" final="false" override="false" type="void" signature="void changed()"/>
                <function name="component" fullname="Aggregation::Aggregate::component" href="aggregation-aggregate.html#component" status="active" access="public" location="aggregate.h" filepath="C:/Users/qt/work/build/qt-creator/src/libs/aggregation/aggregate.h" lineno="49" documented="true" meta="plain" virtual="non" const="false" static="false" final="false" override="false" type="T *" signature="T * component()"/>
                <function name="components" fullname="Aggregation::Aggregate::components" href="aggregation-aggregate.html#components" status="active" access="public" location="aggregate.h" filepath="C:/Users/qt/work/build/qt-creator/src/libs/aggregation/aggregate.h" lineno="58" documented="true" meta="plain" virtual="non" const="false" static="false" final="false" override="false" type="QList&lt;T *&gt;" signature="QList&lt;T *&gt; components()"/>
                <function name="parentAggregate" fullname="Aggregation::Aggregate::parentAggregate" href="aggregation-aggregate.html#parentAggregate" status="active" access="public" location="aggregate.h" filepath="C:/Users/qt/work/build/qt-creator/src/libs/aggregation/aggregate.h" lineno="69" documented="true" meta="plain" virtual="non" const="false" static="true" final="false" override="false" type="Aggregation::Aggregate *" signature="Aggregation::Aggregate * parentAggregate(QObject *obj)">
                    <parameter type="QObject *" name="obj" default=""/>
                </function>
                <function name="query" href="aggregation-aggregate.html#query" status="active" access="public" location="aggregate.h" filepath="C:/Users/qt/work/build/qt-creator/src/libs/aggregation/aggregate.h" lineno="91" documented="true" related="0" meta="plain" virtual="non" const="false" static="false" final="false" override="false" type="T *" signature="T * query(QObject *obj)">
                    <parameter type="QObject *" name="obj" default=""/>
                </function>
                <function name="query_all" href="aggregation-aggregate.html#query_all" status="active" access="public" location="aggregate.h" filepath="C:/Users/qt/work/build/qt-creator/src/libs/aggregation/aggregate.h" lineno="112" documented="true" related="1" meta="plain" virtual="non" const="false" static="false" final="false" override="false" type="QList&lt;T *&gt;" signature="QList&lt;T *&gt; query_all(QObject *obj)">
                    <parameter type="QObject *" name="obj" default=""/>
                </function>
                <function name="remove" fullname="Aggregation::Aggregate::remove" href="aggregation-aggregate.html#remove" status="active" access="public" location="aggregate.h" filepath="C:/Users/qt/work/build/qt-creator/src/libs/aggregation/aggregate.h" lineno="47" documented="true" meta="plain" virtual="non" const="false" static="false" final="false" override="false" type="void" signature="void remove(QObject *component)">
                    <parameter type="QObject *" name="component" default=""/>
                </function>
                <function name="~Aggregate" fullname="Aggregation::Aggregate::~Aggregate" href="aggregation-aggregate.html#dtor.Aggregate" status="active" access="public" location="aggregate.h" filepath="C:/Users/qt/work/build/qt-creator/src/libs/aggregation/aggregate.h" lineno="44" documented="true" meta="destructor" virtual="virtual" const="false" static="false" final="false" override="true" type="" signature="~Aggregate() override"/>
            </class>
        </namespace>
        <page name="common_extension_tasks.html" href="common-extension-tasks.html" status="active" location="common-extension-tasks.qdoc" filepath="C:/Users/qt/work/build/qt-creator/doc/qtcreatordev/src/common-extension-tasks.qdoc" lineno="26" documented="true" subtype="page" title="Common Extension Tasks" fulltitle="Common Extension Tasks" subtitle=""/>
        <namespace name="Core" href="core.html" status="active" access="public" location="documentmanager.h" filepath="C:/Users/qt/work/build/qt-creator/src/plugins/coreplugin/documentmanager.h" lineno="38" documented="true" module="QtCreator" brief="Contains all classes that make up the Core plugin which constitute the basic functionality of Qt Creator">
            <class name="ActionContainer" fullname="Core::ActionContainer" href="core-actioncontainer.html" status="active" access="public" location="actioncontainer.h" filepath="C:/Users/qt/work/build/qt-creator/src/plugins/coreplugin/actionmanager/actioncontainer.h" lineno="45" documented="true" groups="mainclasses" bases="QObject" module="QtCreator" brief="Represents a menu or menu bar in Qt Creator">
                <function name="addAction" fullname="Core::ActionContainer::addAction" href="core-actioncontainer.html#addAction" status="active" access="public" location="actioncontainer.h" filepath="C:/Users/qt/work/build/qt-creator/src/plugins/coreplugin/actionmanager/actioncontainer.h" lineno="68" documented="true" meta="plain" virtual="pure" const="false" static="false" final="false" override="false" type="void" signature="void addAction(Core::Command *action, Utils::Id group) = 0">
                    <parameter type="Core::Command *" name="action" default=""/>
                    <parameter type="Utils::Id" name="group" default="Id()"/>
                </function>
                <function name="addMenu" fullname="Core::ActionContainer::addMenu" href="core-actioncontainer.html#addMenu" status="active" access="public" location="actioncontainer.h" filepath="C:/Users/qt/work/build/qt-creator/src/plugins/coreplugin/actionmanager/actioncontainer.h" lineno="69" documented="true" meta="plain" virtual="pure" const="false" static="false" final="false" override="false" type="void" signature="void addMenu(Core::ActionContainer *menu, Utils::Id group) = 0">
                    <parameter type="Core::ActionContainer *" name="menu" default=""/>
                    <parameter type="Utils::Id" name="group" default="Utils::Id()"/>
                </function>
                <function name="addMenu" fullname="Core::ActionContainer::addMenu" href="core-actioncontainer.html#addMenu-1" status="active" access="public" location="actioncontainer.h" filepath="C:/Users/qt/work/build/qt-creator/src/plugins/coreplugin/actionmanager/actioncontainer.h" lineno="70" documented="true" meta="plain" virtual="pure" const="false" static="false" final="false" override="false" overload="true" overload-number="1" type="void" signature="void addMenu(Core::ActionContainer *before, Core::ActionContainer *menu) = 0">
                    <parameter type="Core::ActionContainer *" name="before" default=""/>
                    <parameter type="Core::ActionContainer *" name="menu" default=""/>
                </function>
                <function name="addSeparator" fullname="Core::ActionContainer::addSeparator" href="core-actioncontainer.html#addSeparator" status="active" access="public" location="actioncontainer.h" filepath="C:/Users/qt/work/build/qt-creator/src/plugins/coreplugin/actionmanager/actioncontainer.h" lineno="71" documented="true" meta="plain" virtual="non" const="false" static="false" final="false" override="false" type="Core::Command *" signature="Core::Command * addSeparator(Utils::Id group)">
                    <parameter type="Utils::Id" name="group" default="{}"/>
                </function>
                <function name="addSeparator" fullname="Core::ActionContainer::addSeparator" href="core-actioncontainer.html#addSeparator-1" status="active" access="public" location="actioncontainer.h" filepath="C:/Users/qt/work/build/qt-creator/src/plugins/coreplugin/actionmanager/actioncontainer.h" lineno="72" documented="true" meta="plain" virtual="pure" const="false" static="false" final="false" override="false" overload="true" overload-number="1" type="Core::Command *" signature="Core::Command * addSeparator(const Core::Context &amp;context, Utils::Id group, QAction **outSeparator) = 0">
                    <parameter type="const Core::Context &amp;" name="context" default=""/>
                    <parameter type="Utils::Id" name="group" default="{}"/>
                    <parameter type="QAction **" name="outSeparator" default="nullptr"/>
                </function>
                <function name="appendGroup" fullname="Core::ActionContainer::appendGroup" href="core-actioncontainer.html#appendGroup" status="active" access="public" location="actioncontainer.h" filepath="C:/Users/qt/work/build/qt-creator/src/plugins/coreplugin/actionmanager/actioncontainer.h" lineno="66" documented="true" meta="plain" virtual="pure" const="false" static="false" final="false" override="false" type="void" signature="void appendGroup(Utils::Id group) = 0">
                    <parameter type="Utils::Id" name="group" default=""/>
                </function>
                <function name="clear" fullname="Core::ActionContainer::clear" href="core-actioncontainer.html#clear" status="active" access="public" location="actioncontainer.h" filepath="C:/Users/qt/work/build/qt-creator/src/plugins/coreplugin/actionmanager/actioncontainer.h" lineno="76" documented="true" meta="plain" virtual="pure" const="false" static="false" final="false" override="false" type="void" signature="void clear() = 0"/>
                <function name="insertGroup" fullname="Core::ActionContainer::insertGroup" href="core-actioncontainer.html#insertGroup" status="active" access="public" location="actioncontainer.h" filepath="C:/Users/qt/work/build/qt-creator/src/plugins/coreplugin/actionmanager/actioncontainer.h" lineno="67" documented="true" meta="plain" virtual="pure" const="false" static="false" final="false" override="false" type="void" signature="void insertGroup(Utils::Id before, Utils::Id group) = 0">
                    <parameter type="Utils::Id" name="before" default=""/>
                    <parameter type="Utils::Id" name="group" default=""/>
                </function>
                <function name="insertLocation" fullname="Core::ActionContainer::insertLocation" href="core-actioncontainer.html#insertLocation" status="active" access="public" location="actioncontainer.h" filepath="C:/Users/qt/work/build/qt-creator/src/plugins/coreplugin/actionmanager/actioncontainer.h" lineno="65" documented="true" meta="plain" virtual="pure" const="true" static="false" final="false" override="false" type="QAction *" signature="QAction * insertLocation(Utils::Id group) const = 0">
                    <parameter type="Utils::Id" name="group" default=""/>
                </function>
                <function name="menu" fullname="Core::ActionContainer::menu" href="core-actioncontainer.html#menu" status="active" access="public" location="actioncontainer.h" filepath="C:/Users/qt/work/build/qt-creator/src/plugins/coreplugin/actionmanager/actioncontainer.h" lineno="61" documented="true" meta="plain" virtual="pure" const="true" static="false" final="false" override="false" type="QMenu *" signature="QMenu * menu() const = 0"/>
                <function name="menuBar" fullname="Core::ActionContainer::menuBar" href="core-actioncontainer.html#menuBar" status="active" access="public" location="actioncontainer.h" filepath="C:/Users/qt/work/build/qt-creator/src/plugins/coreplugin/actionmanager/actioncontainer.h" lineno="62" documented="true" meta="plain" virtual="pure" const="true" static="false" final="false" override="false" type="QMenuBar *" signature="QMenuBar * menuBar() const = 0"/>
                <function name="onAllDisabledBehavior" fullname="Core::ActionContainer::onAllDisabledBehavior" href="core-actioncontainer.html#onAllDisabledBehavior" status="active" access="public" location="actioncontainer.h" filepath="C:/Users/qt/work/build/qt-creator/src/plugins/coreplugin/actionmanager/actioncontainer.h" lineno="57" documented="true" meta="plain" virtual="pure" const="true" static="false" final="false" override="false" type="ActionContainer::OnAllDisabledBehavior" signature="ActionContainer::OnAllDisabledBehavior onAllDisabledBehavior() const = 0"/>
                <function name="setOnAllDisabledBehavior" fullname="Core::ActionContainer::setOnAllDisabledBehavior" href="core-actioncontainer.html#setOnAllDisabledBehavior" status="active" access="public" location="actioncontainer.h" filepath="C:/Users/qt/work/build/qt-creator/src/plugins/coreplugin/actionmanager/actioncontainer.h" lineno="56" documented="true" meta="plain" virtual="pure" const="false" static="false" final="false" override="false" type="void" signature="void setOnAllDisabledBehavior(Core::ActionContainer::OnAllDisabledBehavior behavior) = 0">
                    <parameter type="Core::ActionContainer::OnAllDisabledBehavior" name="behavior" default=""/>
                </function>
                <function name="touchBar" fullname="Core::ActionContainer::touchBar" href="core-actioncontainer.html#touchBar" status="active" access="public" location="actioncontainer.h" filepath="C:/Users/qt/work/build/qt-creator/src/plugins/coreplugin/actionmanager/actioncontainer.h" lineno="63" documented="true" meta="plain" virtual="pure" const="true" static="false" final="false" override="false" type="Utils::TouchBar *" signature="Utils::TouchBar * touchBar() const = 0"/>
                <enum name="OnAllDisabledBehavior" fullname="Core::ActionContainer::OnAllDisabledBehavior" href="core-actioncontainer.html#OnAllDisabledBehavior-enum" status="active" access="public" location="actioncontainer.h" filepath="C:/Users/qt/work/build/qt-creator/src/plugins/coreplugin/actionmanager/actioncontainer.h" lineno="50" documented="true">
                    <value name="Disable" value="0"/>
                    <value name="Hide" value="1"/>
                    <value name="Show" value="2"/>
                </enum>
            </class>
            <class name="ActionManager" fullname="Core::ActionManager" href="core-actionmanager.html" status="active" access="public" location="actionmanager.h" filepath="C:/Users/qt/work/build/qt-creator/src/plugins/coreplugin/actionmanager/actionmanager.h" lineno="52" documented="true" groups="mainclasses" bases="QObject" module="QtCreator" brief="Responsible for registration of menus and menu items and keyboard shortcuts">
                <function name="actionContainer" fullname="Core::ActionManager::actionContainer" href="core-actionmanager.html#actionContainer" status="active" access="public" location="actionmanager.h" filepath="C:/Users/qt/work/build/qt-creator/src/plugins/coreplugin/actionmanager/actionmanager.h" lineno="69" documented="true" meta="plain" virtual="non" const="false" static="true" final="false" override="false" type="Core::ActionContainer *" signature="Core::ActionContainer * actionContainer(Utils::Id id)">
                    <parameter type="Utils::Id" name="id" default=""/>
                </function>
                <function name="command" fullname="Core::ActionManager::command" href="core-actionmanager.html#command" status="active" access="public" location="actionmanager.h" filepath="C:/Users/qt/work/build/qt-creator/src/plugins/coreplugin/actionmanager/actionmanager.h" lineno="68" documented="true" meta="plain" virtual="non" const="false" static="true" final="false" override="false" type="Core::Command *" signature="Core::Command * command(Utils::Id id)">
                    <parameter type="Utils::Id" name="id" default=""/>
                </function>
                <function name="commandAdded" fullname="Core::ActionManager::commandAdded" href="core-actionmanager.html#commandAdded" status="active" access="public" location="actionmanager.h" filepath="C:/Users/qt/work/build/qt-creator/src/plugins/coreplugin/actionmanager/actionmanager.h" lineno="82" documented="true" meta="signal" virtual="non" const="false" static="false" final="false" override="false" type="void" signature="void commandAdded(Utils::Id id)">
                    <parameter type="Utils::Id" name="id" default=""/>
                </function>
                <function name="commandListChanged" fullname="Core::ActionManager::commandListChanged" href="core-actionmanager.html#commandListChanged" status="active" access="public" location="actionmanager.h" filepath="C:/Users/qt/work/build/qt-creator/src/plugins/coreplugin/actionmanager/actionmanager.h" lineno="81" documented="true" meta="signal" virtual="non" const="false" static="false" final="false" override="false" type="void" signature="void commandListChanged()"/>
                <function name="commands" fullname="Core::ActionManager::commands" href="core-actionmanager.html#commands" status="active" access="public" location="actionmanager.h" filepath="C:/Users/qt/work/build/qt-creator/src/plugins/coreplugin/actionmanager/actionmanager.h" lineno="71" documented="true" meta="plain" virtual="non" const="false" static="true" final="false" override="false" type="QList&lt;Core::Command *&gt;" signature="QList&lt;Core::Command *&gt; commands()"/>
                <function name="createMenu" fullname="Core::ActionManager::createMenu" href="core-actionmanager.html#createMenu" status="active" access="public" location="actionmanager.h" filepath="C:/Users/qt/work/build/qt-creator/src/plugins/coreplugin/actionmanager/actionmanager.h" lineno="58" documented="true" meta="plain" virtual="non" const="false" static="true" final="false" override="false" type="Core::ActionContainer *" signature="Core::ActionContainer * createMenu(Utils::Id id)">
                    <parameter type="Utils::Id" name="id" default=""/>
                </function>
                <function name="createMenuBar" fullname="Core::ActionManager::createMenuBar" href="core-actionmanager.html#createMenuBar" status="active" access="public" location="actionmanager.h" filepath="C:/Users/qt/work/build/qt-creator/src/plugins/coreplugin/actionmanager/actionmanager.h" lineno="59" documented="true" meta="plain" virtual="non" const="false" static="true" final="false" override="false" type="Core::ActionContainer *" signature="Core::ActionContainer * createMenuBar(Utils::Id id)">
                    <parameter type="Utils::Id" name="id" default=""/>
                </function>
                <function name="createTouchBar" fullname="Core::ActionManager::createTouchBar" href="core-actionmanager.html#createTouchBar" status="active" access="public" location="actionmanager.h" filepath="C:/Users/qt/work/build/qt-creator/src/plugins/coreplugin/actionmanager/actionmanager.h" lineno="60" documented="true" meta="plain" virtual="non" const="false" static="true" final="false" override="false" type="Core::ActionContainer *" signature="Core::ActionContainer * createTouchBar(Utils::Id id, const QIcon &amp;icon, const QString &amp;text)">
                    <parameter type="Utils::Id" name="id" default=""/>
                    <parameter type="const QIcon &amp;" name="icon" default=""/>
                    <parameter type="const QString &amp;" name="text" default="QString()"/>
                </function>
                <function name="instance" fullname="Core::ActionManager::instance" href="core-actionmanager.html#instance" status="active" access="public" location="actionmanager.h" filepath="C:/Users/qt/work/build/qt-creator/src/plugins/coreplugin/actionmanager/actionmanager.h" lineno="56" documented="true" meta="plain" virtual="non" const="false" static="true" final="false" override="false" type="Core::ActionManager *" signature="Core::ActionManager * instance()"/>
                <function name="isPresentationModeEnabled" fullname="Core::ActionManager::isPresentationModeEnabled" href="core-actionmanager.html#isPresentationModeEnabled" status="active" access="public" location="actionmanager.h" filepath="C:/Users/qt/work/build/qt-creator/src/plugins/coreplugin/actionmanager/actionmanager.h" lineno="76" documented="true" meta="plain" virtual="non" const="false" static="true" final="false" override="false" type="bool" signature="bool isPresentationModeEnabled()"/>
                <function name="registerAction" fullname="Core::ActionManager::registerAction" href="core-actionmanager.html#registerAction" status="active" access="public" location="actionmanager.h" filepath="C:/Users/qt/work/build/qt-creator/src/plugins/coreplugin/actionmanager/actionmanager.h" lineno="64" documented="true" meta="plain" virtual="non" const="false" static="true" final="false" override="false" type="Core::Command *" signature="Core::Command * registerAction(QAction *action, Utils::Id id, const Core::Context &amp;context, bool scriptable)">
                    <parameter type="QAction *" name="action" default=""/>
                    <parameter type="Utils::Id" name="id" default=""/>
                    <parameter type="const Core::Context &amp;" name="context" default="Context(Constants::C_GLOBAL)"/>
                    <parameter type="bool" name="scriptable" default="false"/>
                </function>
                <function name="unregisterAction" fullname="Core::ActionManager::unregisterAction" href="core-actionmanager.html#unregisterAction" status="active" access="public" location="actionmanager.h" filepath="C:/Users/qt/work/build/qt-creator/src/plugins/coreplugin/actionmanager/actionmanager.h" lineno="73" documented="true" meta="plain" virtual="non" const="false" static="true" final="false" override="false" type="void" signature="void unregisterAction(QAction *action, Utils::Id id)">
                    <parameter type="QAction *" name="action" default=""/>
                    <parameter type="Utils::Id" name="id" default=""/>
                </function>
                <function name="withNumberAccelerator" fullname="Core::ActionManager::withNumberAccelerator" href="core-actionmanager.html#withNumberAccelerator" status="active" access="public" location="actionmanager.h" filepath="C:/Users/qt/work/build/qt-creator/src/plugins/coreplugin/actionmanager/actionmanager.h" lineno="78" documented="true" meta="plain" virtual="non" const="false" static="true" final="false" override="false" type="QString" signature="QString withNumberAccelerator(const QString &amp;text, const int number)">
                    <parameter type="const QString &amp;" name="text" default=""/>
                    <parameter type="const int" name="number" default=""/>
                </function>
            </class>
            <class name="BaseFileFilter" fullname="Core::BaseFileFilter" href="core-basefilefilter.html" status="active" access="public" location="basefilefilter.h" filepath="C:/Users/qt/work/build/qt-creator/src/plugins/coreplugin/locator/basefilefilter.h" lineno="38" documented="true" bases="Core::ILocatorFilter" module="QtCreator" brief="Base class for locator filter classes">
                <function name="accept" fullname="Core::BaseFileFilter::accept" href="core-basefilefilter.html#accept" status="active" access="public" location="basefilefilter.h" filepath="C:/Users/qt/work/build/qt-creator/src/plugins/coreplugin/locator/basefilefilter.h" lineno="71" documented="true" meta="plain" virtual="virtual" const="true" static="false" final="false" override="true" type="void" signature="void accept(Core::LocatorFilterEntry selection, QString *newText, int *selectionStart, int *selectionLength) const override">
                    <parameter type="Core::LocatorFilterEntry" name="selection" default=""/>
                    <parameter type="QString *" name="newText" default=""/>
                    <parameter type="int *" name="selectionStart" default=""/>
                    <parameter type="int *" name="selectionLength" default=""/>
                </function>
                <function name="fileIterator" fullname="Core::BaseFileFilter::fileIterator" href="core-basefilefilter.html#fileIterator" status="active" access="protected" location="basefilefilter.h" filepath="C:/Users/qt/work/build/qt-creator/src/plugins/coreplugin/locator/basefilefilter.h" lineno="77" documented="true" meta="plain" virtual="non" const="false" static="false" final="false" override="false" type="QSharedPointer&lt;Core::BaseFileFilter::Iterator&gt;" signature="QSharedPointer&lt;Core::BaseFileFilter::Iterator&gt; fileIterator()"/>
                <function name="matchesFor" fullname="Core::BaseFileFilter::matchesFor" href="core-basefilefilter.html#matchesFor" status="active" access="public" location="basefilefilter.h" filepath="C:/Users/qt/work/build/qt-creator/src/plugins/coreplugin/locator/basefilefilter.h" lineno="69" documented="true" meta="plain" virtual="virtual" const="false" static="false" final="false" override="true" type="QList&lt;Core::LocatorFilterEntry&gt;" signature="QList&lt;Core::LocatorFilterEntry&gt; matchesFor(QFutureInterface&lt;Core::LocatorFilterEntry&gt; &amp;future, const QString &amp;origEntry) override">
                    <parameter type="QFutureInterface&lt;Core::LocatorFilterEntry&gt; &amp;" name="future" default=""/>
                    <parameter type="const QString &amp;" name="origEntry" default=""/>
                </function>
                <function name="prepareSearch" fullname="Core::BaseFileFilter::prepareSearch" href="core-basefilefilter.html#prepareSearch" status="active" access="public" location="basefilefilter.h" filepath="C:/Users/qt/work/build/qt-creator/src/plugins/coreplugin/locator/basefilefilter.h" lineno="68" documented="true" meta="plain" virtual="virtual" const="false" static="false" final="false" override="true" type="void" signature="void prepareSearch(const QString &amp;entry) override">
                    <parameter type="const QString &amp;" name="entry" default=""/>
                </function>
                <function name="setFileIterator" fullname="Core::BaseFileFilter::setFileIterator" href="core-basefilefilter.html#setFileIterator" status="active" access="protected" location="basefilefilter.h" filepath="C:/Users/qt/work/build/qt-creator/src/plugins/coreplugin/locator/basefilefilter.h" lineno="76" documented="true" meta="plain" virtual="non" const="false" static="false" final="false" override="false" type="void" signature="void setFileIterator(Core::BaseFileFilter::Iterator *iterator)">
                    <parameter type="Core::BaseFileFilter::Iterator *" name="iterator" default=""/>
                </function>
            </class>
            <class name="BaseFileWizard" fullname="Core::BaseFileWizard" href="core-basefilewizard.html" status="active" access="public" location="basefilewizard.h" filepath="C:/Users/qt/work/build/qt-creator/src/plugins/coreplugin/basefilewizard.h" lineno="40" documented="true" bases="Utils::Wizard" module="QtCreator" brief="Implements a is a convenience class for creating files"/>
            <class name="BaseFileWizardFactory" fullname="Core::BaseFileWizardFactory" href="core-basefilewizardfactory.html" status="active" access="public" location="basefilewizardfactory.h" filepath="C:/Users/qt/work/build/qt-creator/src/plugins/coreplugin/basefilewizardfactory.h" lineno="83" documented="true" bases="Core::IWizardFactory" module="QtCreator" brief="Implements a generic wizard for creating files">
                <function name="buildFileName" fullname="Core::BaseFileWizardFactory::buildFileName" href="core-basefilewizardfactory.html#buildFileName" status="active" access="public" location="basefilewizardfactory.h" filepath="C:/Users/qt/work/build/qt-creator/src/plugins/coreplugin/basefilewizardfactory.h" lineno="90" documented="true" meta="plain" virtual="non" const="false" static="true" final="false" override="false" type="Utils::FilePath" signature="Utils::FilePath buildFileName(const Utils::FilePath &amp;path, const QString &amp;baseName, const QString &amp;extension)">
                    <parameter type="const Utils::FilePath &amp;" name="path" default=""/>
                    <parameter type="const QString &amp;" name="baseName" default=""/>
                    <parameter type="const QString &amp;" name="extension" default=""/>
                </function>
                <function name="create" fullname="Core::BaseFileWizardFactory::create" href="core-basefilewizardfactory.html#create" status="active" access="protected" location="basefilewizardfactory.h" filepath="C:/Users/qt/work/build/qt-creator/src/plugins/coreplugin/basefilewizardfactory.h" lineno="93" documented="true" meta="plain" virtual="pure" const="true" static="false" final="false" override="false" type="Core::BaseFileWizard *" signature="Core::BaseFileWizard * create(QWidget *parent, const Core::WizardDialogParameters &amp;parameters) const = 0">
                    <parameter type="QWidget *" name="parent" default=""/>
                    <parameter type="const Core::WizardDialogParameters &amp;" name="parameters" default=""/>
                </function>
                <function name="generateFiles" fullname="Core::BaseFileWizardFactory::generateFiles" href="core-basefilewizardfactory.html#generateFiles" status="active" access="protected" location="basefilewizardfactory.h" filepath="C:/Users/qt/work/build/qt-creator/src/plugins/coreplugin/basefilewizardfactory.h" lineno="95" documented="true" meta="plain" virtual="pure" const="true" static="false" final="false" override="false" type="Core::GeneratedFiles" signature="Core::GeneratedFiles generateFiles(const QWizard *w, QString *errorMessage) const = 0">
                    <parameter type="const QWizard *" name="w" default=""/>
                    <parameter type="QString *" name="errorMessage" default=""/>
                </function>
                <function name="postGenerateFiles" fullname="Core::BaseFileWizardFactory::postGenerateFiles" href="core-basefilewizardfactory.html#postGenerateFiles" status="active" access="protected" location="basefilewizardfactory.h" filepath="C:/Users/qt/work/build/qt-creator/src/plugins/coreplugin/basefilewizardfactory.h" lineno="100" documented="true" meta="plain" virtual="virtual" const="true" static="false" final="false" override="false" type="bool" signature="bool postGenerateFiles(const QWizard *w, const Core::GeneratedFiles &amp;l, QString *errorMessage) const">
                    <parameter type="const QWizard *" name="w" default=""/>
                    <parameter type="const Core::GeneratedFiles &amp;" name="l" default=""/>
                    <parameter type="QString *" name="errorMessage" default=""/>
                </function>
                <function name="postGenerateOpenEditors" fullname="Core::BaseFileWizardFactory::postGenerateOpenEditors" href="core-basefilewizardfactory.html#postGenerateOpenEditors" status="active" access="protected" location="basefilewizardfactory.h" filepath="C:/Users/qt/work/build/qt-creator/src/plugins/coreplugin/basefilewizardfactory.h" lineno="107" documented="true" meta="plain" virtual="non" const="false" static="true" final="false" override="false" type="bool" signature="bool postGenerateOpenEditors(const Core::GeneratedFiles &amp;l, QString *errorMessage)">
                    <parameter type="const Core::GeneratedFiles &amp;" name="l" default=""/>
                    <parameter type="QString *" name="errorMessage" default="nullptr"/>
                </function>
                <function name="preferredSuffix" fullname="Core::BaseFileWizardFactory::preferredSuffix" href="core-basefilewizardfactory.html#preferredSuffix" status="active" access="protected" location="basefilewizardfactory.h" filepath="C:/Users/qt/work/build/qt-creator/src/plugins/coreplugin/basefilewizardfactory.h" lineno="102" documented="true" meta="plain" virtual="non" const="false" static="true" final="false" override="false" type="QString" signature="QString preferredSuffix(const QString &amp;mimeType)">
                    <parameter type="const QString &amp;" name="mimeType" default=""/>
                </function>
                <function name="promptOverwrite" fullname="Core::BaseFileWizardFactory::promptOverwrite" href="core-basefilewizardfactory.html#promptOverwrite" status="active" access="protected" location="basefilewizardfactory.h" filepath="C:/Users/qt/work/build/qt-creator/src/plugins/coreplugin/basefilewizardfactory.h" lineno="105" documented="true" meta="plain" virtual="non" const="false" static="true" final="false" override="false" type="Core::BaseFileWizardFactory::OverwriteResult" signature="Core::BaseFileWizardFactory::OverwriteResult promptOverwrite(Core::GeneratedFiles *files, QString *errorMessage)">
                    <parameter type="Core::GeneratedFiles *" name="files" default=""/>
                    <parameter type="QString *" name="errorMessage" default=""/>
                </function>
                <function name="writeFiles" fullname="Core::BaseFileWizardFactory::writeFiles" href="core-basefilewizardfactory.html#writeFiles" status="active" access="protected" location="basefilewizardfactory.h" filepath="C:/Users/qt/work/build/qt-creator/src/plugins/coreplugin/basefilewizardfactory.h" lineno="98" documented="true" meta="plain" virtual="virtual" const="true" static="false" final="false" override="false" type="bool" signature="bool writeFiles(const Core::GeneratedFiles &amp;files, QString *errorMessage) const">
                    <parameter type="const Core::GeneratedFiles &amp;" name="files" default=""/>
                    <parameter type="QString *" name="errorMessage" default=""/>
                </function>
            </class>
            <class name="BaseTextDocument" fullname="Core::BaseTextDocument" href="core-basetextdocument.html" status="active" access="public" location="textdocument.h" filepath="C:/Users/qt/work/build/qt-creator/src/plugins/coreplugin/textdocument.h" lineno="36" documented="true" bases="Core::IDocument" module="QtCreator" brief="Very general base class for documents that work with text">
                <function name="format" fullname="Core::BaseTextDocument::format" href="core-basetextdocument.html#format" status="active" access="public" location="textdocument.h" filepath="C:/Users/qt/work/build/qt-creator/src/plugins/coreplugin/textdocument.h" lineno="46" documented="true" meta="plain" virtual="non" const="true" static="false" final="false" override="false" type="Utils::TextFileFormat" signature="Utils::TextFileFormat format() const"/>
                <function name="read" fullname="Core::BaseTextDocument::read" href="core-basetextdocument.html#read" status="active" access="public" location="textdocument.h" filepath="C:/Users/qt/work/build/qt-creator/src/plugins/coreplugin/textdocument.h" lineno="54" documented="true" meta="plain" virtual="non" const="false" static="false" final="false" override="false" type="Core::BaseTextDocument::ReadResult" signature="Core::BaseTextDocument::ReadResult read(const Utils::FilePath &amp;filePath, QStringList *plainTextList, QString *errorString)">
                    <parameter type="const Utils::FilePath &amp;" name="filePath" default=""/>
                    <parameter type="QStringList *" name="plainTextList" default=""/>
                    <parameter type="QString *" name="errorString" default=""/>
                </function>
                <function name="read" fullname="Core::BaseTextDocument::read" href="core-basetextdocument.html#read-1" status="active" access="public" location="textdocument.h" filepath="C:/Users/qt/work/build/qt-creator/src/plugins/coreplugin/textdocument.h" lineno="55" documented="true" meta="plain" virtual="non" const="false" static="false" final="false" override="false" overload="true" overload-number="1" type="Core::BaseTextDocument::ReadResult" signature="Core::BaseTextDocument::ReadResult read(const Utils::FilePath &amp;filePath, QString *plainText, QString *errorString)">
                    <parameter type="const Utils::FilePath &amp;" name="filePath" default=""/>
                    <parameter type="QString *" name="plainText" default=""/>
                    <parameter type="QString *" name="errorString" default=""/>
                </function>
                <function name="write" fullname="Core::BaseTextDocument::write" href="core-basetextdocument.html#write" status="active" access="public" location="textdocument.h" filepath="C:/Users/qt/work/build/qt-creator/src/plugins/coreplugin/textdocument.h" lineno="60" documented="true" meta="plain" virtual="non" const="true" static="false" final="false" override="false" type="bool" signature="bool write(const Utils::FilePath &amp;filePath, const QString &amp;data, QString *errorMessage) const">
                    <parameter type="const Utils::FilePath &amp;" name="filePath" default=""/>
                    <parameter type="const QString &amp;" name="data" default=""/>
                    <parameter type="QString *" name="errorMessage" default=""/>
                </function>
                <function name="write" fullname="Core::BaseTextDocument::write" href="core-basetextdocument.html#write-1" status="active" access="public" location="textdocument.h" filepath="C:/Users/qt/work/build/qt-creator/src/plugins/coreplugin/textdocument.h" lineno="61" documented="true" meta="plain" virtual="non" const="true" static="false" final="false" override="false" overload="true" overload-number="1" type="bool" signature="bool write(const Utils::FilePath &amp;filePath, const Utils::TextFileFormat &amp;format, const QString &amp;data, QString *errorMessage) const">
                    <parameter type="const Utils::FilePath &amp;" name="filePath" default=""/>
                    <parameter type="const Utils::TextFileFormat &amp;" name="format" default=""/>
                    <parameter type="const QString &amp;" name="data" default=""/>
                    <parameter type="QString *" name="errorMessage" default=""/>
                </function>
            </class>
            <class name="BaseTextFind" fullname="Core::BaseTextFind" href="core-basetextfind.html" status="active" access="public" location="basetextfind.h" filepath="C:/Users/qt/work/build/qt-creator/src/plugins/coreplugin/find/basetextfind.h" lineno="43" documented="true" bases="Core::IFindSupport" module="QtCreator" brief="Implements a find filter for QPlainTextEdit and QTextEdit based widgets">
                <function name="clearFindScope" fullname="Core::BaseTextFind::clearFindScope" href="core-basetextfind.html#clearFindScope" status="active" access="public" location="basetextfind.h" filepath="C:/Users/qt/work/build/qt-creator/src/plugins/coreplugin/find/basetextfind.h" lineno="66" documented="true" meta="plain" virtual="virtual" const="false" static="false" final="false" override="true" type="void" signature="void clearFindScope() override"/>
                <function name="clearHighlights" fullname="Core::BaseTextFind::clearHighlights" href="core-basetextfind.html#clearHighlights" status="active" access="public" location="basetextfind.h" filepath="C:/Users/qt/work/build/qt-creator/src/plugins/coreplugin/find/basetextfind.h" lineno="55" documented="true" meta="plain" virtual="virtual" const="false" static="false" final="false" override="true" type="void" signature="void clearHighlights() override"/>
                <function name="completedFindString" fullname="Core::BaseTextFind::completedFindString" href="core-basetextfind.html#completedFindString" status="active" access="public" location="basetextfind.h" filepath="C:/Users/qt/work/build/qt-creator/src/plugins/coreplugin/find/basetextfind.h" lineno="57" documented="true" meta="plain" virtual="virtual" const="true" static="false" final="false" override="true" type="QString" signature="QString completedFindString() const override"/>
                <function name="currentFindString" fullname="Core::BaseTextFind::currentFindString" href="core-basetextfind.html#currentFindString" status="active" access="public" location="basetextfind.h" filepath="C:/Users/qt/work/build/qt-creator/src/plugins/coreplugin/find/basetextfind.h" lineno="56" documented="true" meta="plain" virtual="virtual" const="true" static="false" final="false" override="true" type="QString" signature="QString currentFindString() const override"/>
                <function name="defineFindScope" fullname="Core::BaseTextFind::defineFindScope" href="core-basetextfind.html#defineFindScope" status="active" access="public" location="basetextfind.h" filepath="C:/Users/qt/work/build/qt-creator/src/plugins/coreplugin/find/basetextfind.h" lineno="65" documented="true" meta="plain" virtual="virtual" const="false" static="false" final="false" override="true" type="void" signature="void defineFindScope() override"/>
                <function name="findIncremental" fullname="Core::BaseTextFind::findIncremental" href="core-basetextfind.html#findIncremental" status="active" access="public" location="basetextfind.h" filepath="C:/Users/qt/work/build/qt-creator/src/plugins/coreplugin/find/basetextfind.h" lineno="59" documented="true" meta="plain" virtual="virtual" const="false" static="false" final="false" override="true" type="Core::IFindSupport::Result" signature="Core::IFindSupport::Result findIncremental(const QString &amp;txt, Core::FindFlags findFlags) override">
                    <parameter type="const QString &amp;" name="txt" default=""/>
                    <parameter type="Core::FindFlags" name="findFlags" default=""/>
                </function>
                <function name="findScopeChanged" fullname="Core::BaseTextFind::findScopeChanged" href="core-basetextfind.html#findScopeChanged" status="active" access="public" location="basetextfind.h" filepath="C:/Users/qt/work/build/qt-creator/src/plugins/coreplugin/find/basetextfind.h" lineno="78" documented="true" meta="signal" virtual="non" const="false" static="false" final="false" override="false" type="void" signature="void findScopeChanged(const Utils::MultiTextCursor &amp;cursor)">
                    <parameter type="const Utils::MultiTextCursor &amp;" name="cursor" default=""/>
                </function>
                <function name="findStep" fullname="Core::BaseTextFind::findStep" href="core-basetextfind.html#findStep" status="active" access="public" location="basetextfind.h" filepath="C:/Users/qt/work/build/qt-creator/src/plugins/coreplugin/find/basetextfind.h" lineno="60" documented="true" meta="plain" virtual="virtual" const="false" static="false" final="false" override="true" type="Core::IFindSupport::Result" signature="Core::IFindSupport::Result findStep(const QString &amp;txt, Core::FindFlags findFlags) override">
                    <parameter type="const QString &amp;" name="txt" default=""/>
                    <parameter type="Core::FindFlags" name="findFlags" default=""/>
                </function>
                <function name="highlightAll" fullname="Core::BaseTextFind::highlightAll" href="core-basetextfind.html#highlightAll" status="active" access="public" location="basetextfind.h" filepath="C:/Users/qt/work/build/qt-creator/src/plugins/coreplugin/find/basetextfind.h" lineno="68" documented="true" meta="plain" virtual="virtual" const="false" static="false" final="false" override="true" type="void" signature="void highlightAll(const QString &amp;txt, Core::FindFlags findFlags) override">
                    <parameter type="const QString &amp;" name="txt" default=""/>
                    <parameter type="Core::FindFlags" name="findFlags" default=""/>
                </function>
                <function name="highlightAllRequested" fullname="Core::BaseTextFind::highlightAllRequested" href="core-basetextfind.html#highlightAllRequested" status="active" access="public" location="basetextfind.h" filepath="C:/Users/qt/work/build/qt-creator/src/plugins/coreplugin/find/basetextfind.h" lineno="77" documented="true" meta="signal" virtual="non" const="false" static="false" final="false" override="false" type="void" signature="void highlightAllRequested(const QString &amp;txt, Core::FindFlags findFlags)">
                    <parameter type="const QString &amp;" name="txt" default=""/>
                    <parameter type="Core::FindFlags" name="findFlags" default=""/>
                </function>
                <function name="replace" fullname="Core::BaseTextFind::replace" href="core-basetextfind.html#replace" status="active" access="public" location="basetextfind.h" filepath="C:/Users/qt/work/build/qt-creator/src/plugins/coreplugin/find/basetextfind.h" lineno="61" documented="true" meta="plain" virtual="virtual" const="false" static="false" final="false" override="true" type="void" signature="void replace(const QString &amp;before, const QString &amp;after, Core::FindFlags findFlags) override">
                    <parameter type="const QString &amp;" name="before" default=""/>
                    <parameter type="const QString &amp;" name="after" default=""/>
                    <parameter type="Core::FindFlags" name="findFlags" default=""/>
                </function>
                <function name="replaceAll" fullname="Core::BaseTextFind::replaceAll" href="core-basetextfind.html#replaceAll" status="active" access="public" location="basetextfind.h" filepath="C:/Users/qt/work/build/qt-creator/src/plugins/coreplugin/find/basetextfind.h" lineno="63" documented="true" meta="plain" virtual="virtual" const="false" static="false" final="false" override="true" type="int" signature="int replaceAll(const QString &amp;before, const QString &amp;after, Core::FindFlags findFlags) override">
                    <parameter type="const QString &amp;" name="before" default=""/>
                    <parameter type="const QString &amp;" name="after" default=""/>
                    <parameter type="Core::FindFlags" name="findFlags" default=""/>
                </function>
                <function name="replaceStep" fullname="Core::BaseTextFind::replaceStep" href="core-basetextfind.html#replaceStep" status="active" access="public" location="basetextfind.h" filepath="C:/Users/qt/work/build/qt-creator/src/plugins/coreplugin/find/basetextfind.h" lineno="62" documented="true" meta="plain" virtual="virtual" const="false" static="false" final="false" override="true" type="bool" signature="bool replaceStep(const QString &amp;before, const QString &amp;after, Core::FindFlags findFlags) override">
                    <parameter type="const QString &amp;" name="before" default=""/>
                    <parameter type="const QString &amp;" name="after" default=""/>
                    <parameter type="Core::FindFlags" name="findFlags" default=""/>
                </function>
                <function name="resetIncrementalSearch" fullname="Core::BaseTextFind::resetIncrementalSearch" href="core-basetextfind.html#resetIncrementalSearch" status="active" access="public" location="basetextfind.h" filepath="C:/Users/qt/work/build/qt-creator/src/plugins/coreplugin/find/basetextfind.h" lineno="54" documented="true" meta="plain" virtual="virtual" const="false" static="false" final="false" override="true" type="void" signature="void resetIncrementalSearch() override"/>
                <function name="supportedFindFlags" fullname="Core::BaseTextFind::supportedFindFlags" href="core-basetextfind.html#supportedFindFlags" status="active" access="public" location="basetextfind.h" filepath="C:/Users/qt/work/build/qt-creator/src/plugins/coreplugin/find/basetextfind.h" lineno="53" documented="true" meta="plain" virtual="virtual" const="true" static="false" final="false" override="true" type="Core::FindFlags" signature="Core::FindFlags supportedFindFlags() const override"/>
                <function name="supportsReplace" fullname="Core::BaseTextFind::supportsReplace" href="core-basetextfind.html#supportsReplace" status="active" access="public" location="basetextfind.h" filepath="C:/Users/qt/work/build/qt-creator/src/plugins/coreplugin/find/basetextfind.h" lineno="52" documented="true" meta="plain" virtual="virtual" const="true" static="false" final="false" override="true" type="bool" signature="bool supportsReplace() const override"/>
            </class>
            <class name="Command" fullname="Core::Command" href="core-command.html" status="active" access="public" location="command.h" filepath="C:/Users/qt/work/build/qt-creator/src/plugins\coreplugin/actionmanager/command.h" lineno="48" documented="true" groups="mainclasses" bases="QObject" module="QtCreator" brief="Represents an action, such as a menu item, tool button, or shortcut">
                <function name="action" fullname="Core::Command::action" href="core-command.html#action" status="active" access="public" location="command.h" filepath="C:/Users/qt/work/build/qt-creator/src/plugins\coreplugin/actionmanager/command.h" lineno="74" documented="true" meta="plain" virtual="pure" const="true" static="false" final="false" override="false" type="QAction *" signature="QAction * action() const = 0"/>
                <function name="activeStateChanged" fullname="Core::Command::activeStateChanged" href="core-command.html#activeStateChanged" status="active" access="public" location="command.h" filepath="C:/Users/qt/work/build/qt-creator/src/plugins\coreplugin/actionmanager/command.h" lineno="99" documented="true" meta="signal" virtual="non" const="false" static="false" final="false" override="false" type="void" signature="void activeStateChanged()"/>
                <function name="augmentActionWithShortcutToolTip" fullname="Core::Command::augmentActionWithShortcutToolTip" href="core-command.html#augmentActionWithShortcutToolTip" status="active" access="public" location="command.h" filepath="C:/Users/qt/work/build/qt-creator/src/plugins\coreplugin/actionmanager/command.h" lineno="85" documented="true" meta="plain" virtual="non" const="true" static="false" final="false" override="false" type="void" signature="void augmentActionWithShortcutToolTip(QAction *a) const">
                    <parameter type="QAction *" name="a" default=""/>
                </function>
                <function name="context" fullname="Core::Command::context" href="core-command.html#context" status="active" access="public" location="command.h" filepath="C:/Users/qt/work/build/qt-creator/src/plugins\coreplugin/actionmanager/command.h" lineno="75" documented="true" meta="plain" virtual="pure" const="true" static="false" final="false" override="false" type="Core::Context" signature="Core::Context context() const = 0"/>
                <function name="defaultKeySequences" fullname="Core::Command::defaultKeySequences" href="core-command.html#defaultKeySequences" status="active" access="public" location="command.h" filepath="C:/Users/qt/work/build/qt-creator/src/plugins\coreplugin/actionmanager/command.h" lineno="62" documented="true" meta="plain" virtual="pure" const="true" static="false" final="false" override="false" type="QList&lt;QKeySequence&gt;" signature="QList&lt;QKeySequence&gt; defaultKeySequences() const = 0"/>
                <function name="description" fullname="Core::Command::description" href="core-command.html#description" status="active" access="public" location="command.h" filepath="C:/Users/qt/work/build/qt-creator/src/plugins\coreplugin/actionmanager/command.h" lineno="70" documented="true" meta="plain" virtual="pure" const="true" static="false" final="false" override="false" type="QString" signature="QString description() const = 0"/>
                <function name="hasAttribute" fullname="Core::Command::hasAttribute" href="core-command.html#hasAttribute" status="active" access="public" location="command.h" filepath="C:/Users/qt/work/build/qt-creator/src/plugins\coreplugin/actionmanager/command.h" lineno="79" documented="true" meta="plain" virtual="pure" const="true" static="false" final="false" override="false" type="bool" signature="bool hasAttribute(Core::Command::CommandAttribute attribute) const = 0">
                    <parameter type="Core::Command::CommandAttribute" name="attribute" default=""/>
                </function>
                <function name="isActive" fullname="Core::Command::isActive" href="core-command.html#isActive" status="active" access="public" location="command.h" filepath="C:/Users/qt/work/build/qt-creator/src/plugins\coreplugin/actionmanager/command.h" lineno="81" documented="true" meta="plain" virtual="pure" const="true" static="false" final="false" override="false" type="bool" signature="bool isActive() const = 0"/>
                <function name="isScriptable" fullname="Core::Command::isScriptable" href="core-command.html#isScriptable" status="active" access="public" location="command.h" filepath="C:/Users/qt/work/build/qt-creator/src/plugins\coreplugin/actionmanager/command.h" lineno="88" documented="true" meta="plain" virtual="pure" const="true" static="false" final="false" override="false" type="bool" signature="bool isScriptable() const = 0"/>
                <function name="keySequence" fullname="Core::Command::keySequence" href="core-command.html#keySequence" status="active" access="public" location="command.h" filepath="C:/Users/qt/work/build/qt-creator/src/plugins\coreplugin/actionmanager/command.h" lineno="64" documented="true" meta="plain" virtual="pure" const="true" static="false" final="false" override="false" type="QKeySequence" signature="QKeySequence keySequence() const = 0"/>
                <function name="keySequenceChanged" fullname="Core::Command::keySequenceChanged" href="core-command.html#keySequenceChanged" status="active" access="public" location="command.h" filepath="C:/Users/qt/work/build/qt-creator/src/plugins\coreplugin/actionmanager/command.h" lineno="98" documented="true" meta="signal" virtual="non" const="false" static="false" final="false" override="false" type="void" signature="void keySequenceChanged()"/>
                <function name="keySequences" fullname="Core::Command::keySequences" href="core-command.html#keySequences" status="active" access="public" location="command.h" filepath="C:/Users/qt/work/build/qt-creator/src/plugins\coreplugin/actionmanager/command.h" lineno="63" documented="true" meta="plain" virtual="pure" const="true" static="false" final="false" override="false" type="QList&lt;QKeySequence&gt;" signature="QList&lt;QKeySequence&gt; keySequences() const = 0"/>
                <function name="removeAttribute" fullname="Core::Command::removeAttribute" href="core-command.html#removeAttribute" status="active" access="public" location="command.h" filepath="C:/Users/qt/work/build/qt-creator/src/plugins\coreplugin/actionmanager/command.h" lineno="78" documented="true" meta="plain" virtual="pure" const="false" static="false" final="false" override="false" type="void" signature="void removeAttribute(Core::Command::CommandAttribute attribute) = 0">
                    <parameter type="Core::Command::CommandAttribute" name="attribute" default=""/>
                </function>
                <function name="setAttribute" fullname="Core::Command::setAttribute" href="core-command.html#setAttribute" status="active" access="public" location="command.h" filepath="C:/Users/qt/work/build/qt-creator/src/plugins\coreplugin/actionmanager/command.h" lineno="77" documented="true" meta="plain" virtual="pure" const="false" static="false" final="false" override="false" type="void" signature="void setAttribute(Core::Command::CommandAttribute attribute) = 0">
                    <parameter type="Core::Command::CommandAttribute" name="attribute" default=""/>
                </function>
                <function name="setDefaultKeySequence" fullname="Core::Command::setDefaultKeySequence" href="core-command.html#setDefaultKeySequence" status="active" access="public" location="command.h" filepath="C:/Users/qt/work/build/qt-creator/src/plugins\coreplugin/actionmanager/command.h" lineno="60" documented="true" meta="plain" virtual="pure" const="false" static="false" final="false" override="false" type="void" signature="void setDefaultKeySequence(const QKeySequence &amp;key) = 0">
                    <parameter type="const QKeySequence &amp;" name="key" default=""/>
                </function>
                <function name="setDefaultKeySequences" fullname="Core::Command::setDefaultKeySequences" href="core-command.html#setDefaultKeySequences" status="active" access="public" location="command.h" filepath="C:/Users/qt/work/build/qt-creator/src/plugins\coreplugin/actionmanager/command.h" lineno="61" documented="true" meta="plain" virtual="pure" const="false" static="false" final="false" override="false" type="void" signature="void setDefaultKeySequences(const QList&lt;QKeySequence&gt; &amp;keys) = 0">
                    <parameter type="const QList&lt;QKeySequence&gt; &amp;" name="keys" default=""/>
                </function>
                <function name="setDescription" fullname="Core::Command::setDescription" href="core-command.html#setDescription" status="active" access="public" location="command.h" filepath="C:/Users/qt/work/build/qt-creator/src/plugins\coreplugin/actionmanager/command.h" lineno="69" documented="true" meta="plain" virtual="pure" const="false" static="false" final="false" override="false" type="void" signature="void setDescription(const QString &amp;text) = 0">
                    <parameter type="const QString &amp;" name="text" default=""/>
                </function>
                <function name="setTouchBarIcon" fullname="Core::Command::setTouchBarIcon" href="core-command.html#setTouchBarIcon" status="active" access="public" location="command.h" filepath="C:/Users/qt/work/build/qt-creator/src/plugins\coreplugin/actionmanager/command.h" lineno="93" documented="true" meta="plain" virtual="pure" const="false" static="false" final="false" override="false" type="void" signature="void setTouchBarIcon(const QIcon &amp;icon) = 0">
                    <parameter type="const QIcon &amp;" name="icon" default=""/>
                </function>
                <function name="setTouchBarText" fullname="Core::Command::setTouchBarText" href="core-command.html#setTouchBarText" status="active" access="public" location="command.h" filepath="C:/Users/qt/work/build/qt-creator/src/plugins\coreplugin/actionmanager/command.h" lineno="91" documented="true" meta="plain" virtual="pure" const="false" static="false" final="false" override="false" type="void" signature="void setTouchBarText(const QString &amp;text) = 0">
                    <parameter type="const QString &amp;" name="text" default=""/>
                </function>
                <function name="stringWithAppendedShortcut" fullname="Core::Command::stringWithAppendedShortcut" href="core-command.html#stringWithAppendedShortcut" status="active" access="public" location="command.h" filepath="C:/Users/qt/work/build/qt-creator/src/plugins\coreplugin/actionmanager/command.h" lineno="84" documented="true" meta="plain" virtual="pure" const="true" static="false" final="false" override="false" type="QString" signature="QString stringWithAppendedShortcut(const QString &amp;string) const = 0">
                    <parameter type="const QString &amp;" name="string" default=""/>
                </function>
                <function name="toolButtonWithAppendedShortcut" fullname="Core::Command::toolButtonWithAppendedShortcut" href="core-command.html#toolButtonWithAppendedShortcut" status="active" access="public" location="command.h" filepath="C:/Users/qt/work/build/qt-creator/src/plugins\coreplugin/actionmanager/command.h" lineno="86" documented="true" meta="plain" virtual="non" const="false" static="true" final="false" override="false" type="QToolButton *" signature="QToolButton * toolButtonWithAppendedShortcut(QAction *action, Core::Command *cmd)">
                    <parameter type="QAction *" name="action" default=""/>
                    <parameter type="Core::Command *" name="cmd" default=""/>
                </function>
                <function name="touchBarIcon" fullname="Core::Command::touchBarIcon" href="core-command.html#touchBarIcon" status="active" access="public" location="command.h" filepath="C:/Users/qt/work/build/qt-creator/src/plugins\coreplugin/actionmanager/command.h" lineno="94" documented="true" meta="plain" virtual="pure" const="true" static="false" final="false" override="false" type="QIcon" signature="QIcon touchBarIcon() const = 0"/>
                <function name="touchBarText" fullname="Core::Command::touchBarText" href="core-command.html#touchBarText" status="active" access="public" location="command.h" filepath="C:/Users/qt/work/build/qt-creator/src/plugins\coreplugin/actionmanager/command.h" lineno="92" documented="true" meta="plain" virtual="pure" const="true" static="false" final="false" override="false" type="QString" signature="QString touchBarText() const = 0"/>
                <enum name="CommandAttribute" fullname="Core::Command::CommandAttribute" href="core-command.html#CommandAttribute-enum" status="active" access="public" location="command.h" filepath="C:/Users/qt/work/build/qt-creator/src/plugins\coreplugin/actionmanager/command.h" lineno="52" documented="true" typedef="Core::Command::CommandAttributes">
                    <value name="CA_Hide" value="1"/>
                    <value name="CA_UpdateText" value="2"/>
                    <value name="CA_UpdateIcon" value="4"/>
                    <value name="CA_NonConfigurable" value="8"/>
                </enum>
                <typedef name="CommandAttributes" fullname="Core::Command::CommandAttributes" href="core-command.html#CommandAttribute-enum" status="active" access="public" location="command.h" filepath="C:/Users/qt/work/build/qt-creator/src/plugins\coreplugin/actionmanager/command.h" lineno="58" enum="Core::Command::CommandAttribute"/>
            </class>
            <class name="CommandButton" fullname="Core::CommandButton" href="core-commandbutton.html" status="active" access="public" location="commandbutton.h" filepath="C:/Users/qt/work/build/qt-creator/src/plugins/coreplugin/actionmanager/commandbutton.h" lineno="40" documented="true" bases="QToolButton" module="QtCreator" brief="Tool button associated with one of the registered Command objects">
                <function name="setCommandId" fullname="Core::CommandButton::setCommandId" href="core-commandbutton.html#setCommandId" status="active" access="public" location="commandbutton.h" filepath="C:/Users/qt/work/build/qt-creator/src/plugins/coreplugin/actionmanager/commandbutton.h" lineno="47" documented="true" meta="plain" virtual="non" const="false" static="false" final="false" override="false" type="void" signature="void setCommandId(Utils::Id id)">
                    <parameter type="Utils::Id" name="id" default=""/>
                </function>
                <function name="setToolTipBase" fullname="Core::CommandButton::setToolTipBase" href="core-commandbutton.html#toolTipBase-prop" status="active" access="public" location="commandbutton.h" filepath="C:/Users/qt/work/build/qt-creator/src/plugins/coreplugin/actionmanager/commandbutton.h" lineno="49" meta="plain" virtual="non" const="false" static="false" final="false" override="false" associated-property="toolTipBase" type="void" signature="void setToolTipBase(const QString &amp;toolTipBase)">
                    <parameter type="const QString &amp;" name="toolTipBase" default=""/>
                </function>
                <function name="toolTipBase" fullname="Core::CommandButton::toolTipBase" href="core-commandbutton.html#toolTipBase-prop" status="active" access="public" location="commandbutton.h" filepath="C:/Users/qt/work/build/qt-creator/src/plugins/coreplugin/actionmanager/commandbutton.h" lineno="48" meta="plain" virtual="non" const="true" static="false" final="false" override="false" associated-property="toolTipBase" type="QString" signature="QString toolTipBase() const"/>
                <property name="toolTipBase" fullname="Core::CommandButton::toolTipBase" href="core-commandbutton.html#toolTipBase-prop" status="active" access="public" location="commandbutton.h" filepath="C:/Users/qt/work/build/qt-creator/src/plugins/coreplugin/actionmanager/commandbutton.h" lineno="43" documented="true" brief="This property holds the tool tip base for the command button">
                    <getter name="toolTipBase"/>
                    <setter name="setToolTipBase"/>
                </property>
            </class>
            <class name="Context" fullname="Core::Context" href="core-context.html" status="active" access="public" location="icontext.h" filepath="C:/Users/qt/work/build/qt-creator/src/plugins\coreplugin/icontext.h" lineno="42" documented="true" groups="mainclasses" module="QtCreator" brief="Implements a list of context IDs">
                <function name="Context" fullname="Core::Context::Context" href="core-context.html#Context" status="active" access="public" location="icontext.h" filepath="C:/Users/qt/work/build/qt-creator/src/plugins\coreplugin/icontext.h" lineno="45" documented="true" meta="constructor" virtual="non" const="false" static="false" final="false" override="false" type="" signature="Context()"/>
                <function name="Context" fullname="Core::Context::Context" href="core-context.html#Context-1" status="active" access="public" location="icontext.h" filepath="C:/Users/qt/work/build/qt-creator/src/plugins\coreplugin/icontext.h" lineno="47" documented="true" meta="constructor" virtual="non" const="false" static="false" final="false" override="false" overload="true" overload-number="1" type="" signature="Context(Utils::Id c1)">
                    <parameter type="Utils::Id" name="c1" default=""/>
                </function>
                <function name="Context" fullname="Core::Context::Context" href="core-context.html#Context-2" status="active" access="public" location="icontext.h" filepath="C:/Users/qt/work/build/qt-creator/src/plugins\coreplugin/icontext.h" lineno="48" documented="true" meta="constructor" virtual="non" const="false" static="false" final="false" override="false" overload="true" overload-number="2" type="" signature="Context(Utils::Id c1, Utils::Id c2)">
                    <parameter type="Utils::Id" name="c1" default=""/>
                    <parameter type="Utils::Id" name="c2" default=""/>
                </function>
                <function name="Context" fullname="Core::Context::Context" href="core-context.html#Context-3" status="active" access="public" location="icontext.h" filepath="C:/Users/qt/work/build/qt-creator/src/plugins\coreplugin/icontext.h" lineno="49" documented="true" meta="constructor" virtual="non" const="false" static="false" final="false" override="false" overload="true" overload-number="3" type="" signature="Context(Utils::Id c1, Utils::Id c2, Utils::Id c3)">
                    <parameter type="Utils::Id" name="c1" default=""/>
                    <parameter type="Utils::Id" name="c2" default=""/>
                    <parameter type="Utils::Id" name="c3" default=""/>
                </function>
                <function name="add" fullname="Core::Context::add" href="core-context.html#add" status="active" access="public" location="icontext.h" filepath="C:/Users/qt/work/build/qt-creator/src/plugins\coreplugin/icontext.h" lineno="62" documented="true" meta="plain" virtual="non" const="false" static="false" final="false" override="false" type="void" signature="void add(const Core::Context &amp;c)">
                    <parameter type="const Core::Context &amp;" name="c" default=""/>
                </function>
                <function name="add" fullname="Core::Context::add" href="core-context.html#add-1" status="active" access="public" location="icontext.h" filepath="C:/Users/qt/work/build/qt-creator/src/plugins\coreplugin/icontext.h" lineno="63" documented="true" meta="plain" virtual="non" const="false" static="false" final="false" override="false" overload="true" overload-number="1" type="void" signature="void add(Utils::Id c)">
                    <parameter type="Utils::Id" name="c" default=""/>
                </function>
                <function name="at" fullname="Core::Context::at" href="core-context.html#at" status="active" access="public" location="icontext.h" filepath="C:/Users/qt/work/build/qt-creator/src/plugins\coreplugin/icontext.h" lineno="53" documented="true" meta="plain" virtual="non" const="true" static="false" final="false" override="false" type="Utils::Id" signature="Utils::Id at(int i) const">
                    <parameter type="int" name="i" default=""/>
                </function>
                <function name="begin" fullname="Core::Context::begin" href="core-context.html#begin" status="active" access="public" location="icontext.h" filepath="C:/Users/qt/work/build/qt-creator/src/plugins\coreplugin/icontext.h" lineno="57" documented="true" meta="plain" virtual="non" const="true" static="false" final="false" override="false" type="Core::Context::const_iterator" signature="Core::Context::const_iterator begin() const"/>
                <function name="contains" fullname="Core::Context::contains" href="core-context.html#contains" status="active" access="public" location="icontext.h" filepath="C:/Users/qt/work/build/qt-creator/src/plugins\coreplugin/icontext.h" lineno="50" documented="true" meta="plain" virtual="non" const="true" static="false" final="false" override="false" type="bool" signature="bool contains(Utils::Id c) const">
                    <parameter type="Utils::Id" name="c" default=""/>
                </function>
                <function name="end" fullname="Core::Context::end" href="core-context.html#end" status="active" access="public" location="icontext.h" filepath="C:/Users/qt/work/build/qt-creator/src/plugins\coreplugin/icontext.h" lineno="58" documented="true" meta="plain" virtual="non" const="true" static="false" final="false" override="false" type="Core::Context::const_iterator" signature="Core::Context::const_iterator end() const"/>
                <function name="indexOf" fullname="Core::Context::indexOf" href="core-context.html#indexOf" status="active" access="public" location="icontext.h" filepath="C:/Users/qt/work/build/qt-creator/src/plugins\coreplugin/icontext.h" lineno="59" documented="true" meta="plain" virtual="non" const="true" static="false" final="false" override="false" type="int" signature="int indexOf(Utils::Id c) const">
                    <parameter type="Utils::Id" name="c" default=""/>
                </function>
                <function name="isEmpty" fullname="Core::Context::isEmpty" href="core-context.html#isEmpty" status="active" access="public" location="icontext.h" filepath="C:/Users/qt/work/build/qt-creator/src/plugins\coreplugin/icontext.h" lineno="52" documented="true" meta="plain" virtual="non" const="true" static="false" final="false" override="false" type="bool" signature="bool isEmpty() const"/>
                <function name="prepend" fullname="Core::Context::prepend" href="core-context.html#prepend" status="active" access="public" location="icontext.h" filepath="C:/Users/qt/work/build/qt-creator/src/plugins\coreplugin/icontext.h" lineno="61" documented="true" meta="plain" virtual="non" const="false" static="false" final="false" override="false" type="void" signature="void prepend(Utils::Id c)">
                    <parameter type="Utils::Id" name="c" default=""/>
                </function>
                <function name="removeAt" fullname="Core::Context::removeAt" href="core-context.html#removeAt" status="active" access="public" location="icontext.h" filepath="C:/Users/qt/work/build/qt-creator/src/plugins\coreplugin/icontext.h" lineno="60" documented="true" meta="plain" virtual="non" const="false" static="false" final="false" override="false" type="void" signature="void removeAt(int i)">
                    <parameter type="int" name="i" default=""/>
                </function>
                <function name="size" fullname="Core::Context::size" href="core-context.html#size" status="active" access="public" location="icontext.h" filepath="C:/Users/qt/work/build/qt-creator/src/plugins\coreplugin/icontext.h" lineno="51" documented="true" meta="plain" virtual="non" const="true" static="false" final="false" override="false" type="int" signature="int size() const"/>
                <typedef name="const_iterator" fullname="Core::Context::const_iterator" href="core-context.html#const_iterator-typedef" status="active" access="public" location="icontext.h" filepath="C:/Users/qt/work/build/qt-creator/src/plugins\coreplugin/icontext.h" lineno="56" documented="true" aliasedtype="QList&lt;Utils::Id&gt;::const_iterator"/>
            </class>
            <class name="DocumentManager" fullname="Core::DocumentManager" href="core-documentmanager.html" status="active" access="public" location="documentmanager.h" filepath="C:/Users/qt/work/build/qt-creator/src/plugins/coreplugin/documentmanager.h" lineno="47" documented="true" groups="mainclasses" bases="QObject" module="QtCreator" brief="Manages a set of documents">
                <function name="addDocument" fullname="Core::DocumentManager::addDocument" href="core-documentmanager.html#addDocument" status="active" access="public" location="documentmanager.h" filepath="C:/Users/qt/work/build/qt-creator/src/plugins/coreplugin/documentmanager.h" lineno="62" documented="true" meta="plain" virtual="non" const="false" static="true" final="false" override="false" type="void" signature="void addDocument(Core::IDocument *document, bool addWatcher)">
                    <parameter type="Core::IDocument *" name="document" default=""/>
                    <parameter type="bool" name="addWatcher" default="true"/>
                </function>
                <function name="addDocuments" fullname="Core::DocumentManager::addDocuments" href="core-documentmanager.html#addDocuments" status="active" access="public" location="documentmanager.h" filepath="C:/Users/qt/work/build/qt-creator/src/plugins/coreplugin/documentmanager.h" lineno="61" documented="true" meta="plain" virtual="non" const="false" static="true" final="false" override="false" type="void" signature="void addDocuments(const QList&lt;Core::IDocument *&gt; &amp;documents, bool addWatcher)">
                    <parameter type="const QList&lt;Core::IDocument *&gt; &amp;" name="documents" default=""/>
                    <parameter type="bool" name="addWatcher" default="true"/>
                </function>
                <function name="addToRecentFiles" fullname="Core::DocumentManager::addToRecentFiles" href="core-documentmanager.html#addToRecentFiles" status="active" access="public" location="documentmanager.h" filepath="C:/Users/qt/work/build/qt-creator/src/plugins/coreplugin/documentmanager.h" lineno="72" documented="true" meta="plain" virtual="non" const="false" static="true" final="false" override="false" type="void" signature="void addToRecentFiles(const Utils::FilePath &amp;filePath, Utils::Id editorId)">
                    <parameter type="const Utils::FilePath &amp;" name="filePath" default=""/>
                    <parameter type="Utils::Id" name="editorId" default="{}"/>
                </function>
                <function name="clearRecentFiles" fullname="Core::DocumentManager::clearRecentFiles" href="core-documentmanager.html#clearRecentFiles" status="active" access="public" location="documentmanager.h" filepath="C:/Users/qt/work/build/qt-creator/src/plugins/coreplugin/documentmanager.h" lineno="73" documented="true" meta="slot" virtual="non" const="false" static="false" final="false" override="false" type="void" signature="void clearRecentFiles()"/>
                <function name="defaultLocationForNewFiles" fullname="Core::DocumentManager::defaultLocationForNewFiles" href="core-documentmanager.html#defaultLocationForNewFiles" status="active" access="public" location="documentmanager.h" filepath="C:/Users/qt/work/build/qt-creator/src/plugins/coreplugin/documentmanager.h" lineno="132" documented="true" meta="plain" virtual="non" const="false" static="true" final="false" override="false" type="Utils::FilePath" signature="Utils::FilePath defaultLocationForNewFiles()"/>
                <function name="expectFileChange" fullname="Core::DocumentManager::expectFileChange" href="core-documentmanager.html#expectFileChange" status="active" access="public" location="documentmanager.h" filepath="C:/Users/qt/work/build/qt-creator/src/plugins/coreplugin/documentmanager.h" lineno="68" documented="true" meta="plain" virtual="non" const="false" static="true" final="false" override="false" type="void" signature="void expectFileChange(const Utils::FilePath &amp;filePath)">
                    <parameter type="const Utils::FilePath &amp;" name="filePath" default=""/>
                </function>
                <function name="fileDialogInitialDirectory" fullname="Core::DocumentManager::fileDialogInitialDirectory" href="core-documentmanager.html#fileDialogInitialDirectory" status="active" access="public" location="documentmanager.h" filepath="C:/Users/qt/work/build/qt-creator/src/plugins/coreplugin/documentmanager.h" lineno="130" documented="true" meta="plain" virtual="non" const="false" static="true" final="false" override="false" type="Utils::FilePath" signature="Utils::FilePath fileDialogInitialDirectory()"/>
                <function name="fileDialogLastVisitedDirectory" fullname="Core::DocumentManager::fileDialogLastVisitedDirectory" href="core-documentmanager.html#fileDialogLastVisitedDirectory" status="active" access="public" location="documentmanager.h" filepath="C:/Users/qt/work/build/qt-creator/src/plugins/coreplugin/documentmanager.h" lineno="127" documented="true" meta="plain" virtual="non" const="false" static="true" final="false" override="false" type="Utils::FilePath" signature="Utils::FilePath fileDialogLastVisitedDirectory()"/>
                <function name="filePathKey" fullname="Core::DocumentManager::filePathKey" href="core-documentmanager.html#filePathKey" status="active" access="public" location="documentmanager.h" filepath="C:/Users/qt/work/build/qt-creator/src/plugins/coreplugin/documentmanager.h" lineno="79" documented="true" meta="plain" virtual="non" const="false" static="true" final="false" override="false" type="Utils::FilePath" signature="Utils::FilePath filePathKey(const Utils::FilePath &amp;filePath, Core::DocumentManager::ResolveMode resolveMode)">
                    <parameter type="const Utils::FilePath &amp;" name="filePath" default=""/>
                    <parameter type="Core::DocumentManager::ResolveMode" name="resolveMode" default=""/>
                </function>
                <function name="getOpenFileNames" fullname="Core::DocumentManager::getOpenFileNames" href="core-documentmanager.html#getOpenFileNames" status="active" access="public" location="documentmanager.h" filepath="C:/Users/qt/work/build/qt-creator/src/plugins/coreplugin/documentmanager.h" lineno="87" documented="true" meta="plain" virtual="non" const="false" static="true" final="false" override="false" type="Utils::FilePaths" signature="Utils::FilePaths getOpenFileNames(const QString &amp;filters, const Utils::FilePath &amp;pathIn, QString *selectedFilter)">
                    <parameter type="const QString &amp;" name="filters" default=""/>
                    <parameter type="const Utils::FilePath &amp;" name="pathIn" default="{}"/>
                    <parameter type="QString *" name="selectedFilter" default="nullptr"/>
                </function>
                <function name="getSaveAsFileName" fullname="Core::DocumentManager::getSaveAsFileName" href="core-documentmanager.html#getSaveAsFileName" status="active" access="public" location="documentmanager.h" filepath="C:/Users/qt/work/build/qt-creator/src/plugins/coreplugin/documentmanager.h" lineno="97" documented="true" meta="plain" virtual="non" const="false" static="true" final="false" override="false" type="Utils::FilePath" signature="Utils::FilePath getSaveAsFileName(const Core::IDocument *document)">
                    <parameter type="const Core::IDocument *" name="document" default=""/>
                </function>
                <function name="modifiedDocuments" fullname="Core::DocumentManager::modifiedDocuments" href="core-documentmanager.html#modifiedDocuments" status="active" access="public" location="documentmanager.h" filepath="C:/Users/qt/work/build/qt-creator/src/plugins/coreplugin/documentmanager.h" lineno="64" documented="true" meta="plain" virtual="non" const="false" static="true" final="false" override="false" type="QList&lt;Core::IDocument *&gt;" signature="QList&lt;Core::IDocument *&gt; modifiedDocuments()"/>
                <function name="projectsDirectory" fullname="Core::DocumentManager::projectsDirectory" href="core-documentmanager.html#projectsDirectory" status="active" access="public" location="documentmanager.h" filepath="C:/Users/qt/work/build/qt-creator/src/plugins/coreplugin/documentmanager.h" lineno="138" documented="true" meta="plain" virtual="non" const="false" static="true" final="false" override="false" type="Utils::FilePath" signature="Utils::FilePath projectsDirectory()"/>
                <function name="recentFiles" fullname="Core::DocumentManager::recentFiles" href="core-documentmanager.html#recentFiles" status="active" access="public" location="documentmanager.h" filepath="C:/Users/qt/work/build/qt-creator/src/plugins/coreplugin/documentmanager.h" lineno="74" documented="true" meta="plain" virtual="non" const="false" static="true" final="false" override="false" type="QList&lt;Core::DocumentManager::RecentFile&gt;" signature="QList&lt;Core::DocumentManager::RecentFile&gt; recentFiles()"/>
                <function name="removeDocument" fullname="Core::DocumentManager::removeDocument" href="core-documentmanager.html#removeDocument" status="active" access="public" location="documentmanager.h" filepath="C:/Users/qt/work/build/qt-creator/src/plugins/coreplugin/documentmanager.h" lineno="63" documented="true" meta="plain" virtual="non" const="false" static="true" final="false" override="false" type="bool" signature="bool removeDocument(Core::IDocument *document)">
                    <parameter type="Core::IDocument *" name="document" default=""/>
                </function>
                <function name="renamedFile" fullname="Core::DocumentManager::renamedFile" href="core-documentmanager.html#renamedFile" status="active" access="public" location="documentmanager.h" filepath="C:/Users/qt/work/build/qt-creator/src/plugins/coreplugin/documentmanager.h" lineno="66" documented="true" meta="plain" virtual="non" const="false" static="true" final="false" override="false" type="void" signature="void renamedFile(const Utils::FilePath &amp;from, const Utils::FilePath &amp;to)">
                    <parameter type="const Utils::FilePath &amp;" name="from" default=""/>
                    <parameter type="const Utils::FilePath &amp;" name="to" default=""/>
                </function>
                <function name="saveAllModifiedDocuments" fullname="Core::DocumentManager::saveAllModifiedDocuments" href="core-documentmanager.html#saveAllModifiedDocuments" status="active" access="public" location="documentmanager.h" filepath="C:/Users/qt/work/build/qt-creator/src/plugins/coreplugin/documentmanager.h" lineno="108" documented="true" meta="plain" virtual="non" const="false" static="true" final="false" override="false" type="bool" signature="bool saveAllModifiedDocuments(const QString &amp;message, bool *canceled, const QString &amp;alwaysSaveMessage, bool *alwaysSave, QList&lt;Core::IDocument *&gt; *failedToClose)">
                    <parameter type="const QString &amp;" name="message" default="QString()"/>
                    <parameter type="bool *" name="canceled" default="nullptr"/>
                    <parameter type="const QString &amp;" name="alwaysSaveMessage" default="QString()"/>
                    <parameter type="bool *" name="alwaysSave" default="nullptr"/>
                    <parameter type="QList&lt;Core::IDocument *&gt; *" name="failedToClose" default="nullptr"/>
                </function>
                <function name="saveAllModifiedDocumentsSilently" fullname="Core::DocumentManager::saveAllModifiedDocumentsSilently" href="core-documentmanager.html#saveAllModifiedDocumentsSilently" status="active" access="public" location="documentmanager.h" filepath="C:/Users/qt/work/build/qt-creator/src/plugins/coreplugin/documentmanager.h" lineno="99" documented="true" meta="plain" virtual="non" const="false" static="true" final="false" override="false" type="bool" signature="bool saveAllModifiedDocumentsSilently(bool *canceled, QList&lt;Core::IDocument *&gt; *failedToClose)">
                    <parameter type="bool *" name="canceled" default="nullptr"/>
                    <parameter type="QList&lt;Core::IDocument *&gt; *" name="failedToClose" default="nullptr"/>
                </function>
                <function name="saveModifiedDocument" fullname="Core::DocumentManager::saveModifiedDocument" href="core-documentmanager.html#saveModifiedDocument" status="active" access="public" location="documentmanager.h" filepath="C:/Users/qt/work/build/qt-creator/src/plugins/coreplugin/documentmanager.h" lineno="119" documented="true" meta="plain" virtual="non" const="false" static="true" final="false" override="false" type="bool" signature="bool saveModifiedDocument(Core::IDocument *document, const QString &amp;message, bool *canceled, const QString &amp;alwaysSaveMessage, bool *alwaysSave, QList&lt;Core::IDocument *&gt; *failedToClose)">
                    <parameter type="Core::IDocument *" name="document" default=""/>
                    <parameter type="const QString &amp;" name="message" default="QString()"/>
                    <parameter type="bool *" name="canceled" default="nullptr"/>
                    <parameter type="const QString &amp;" name="alwaysSaveMessage" default="QString()"/>
                    <parameter type="bool *" name="alwaysSave" default="nullptr"/>
                    <parameter type="QList&lt;Core::IDocument *&gt; *" name="failedToClose" default="nullptr"/>
                </function>
                <function name="saveModifiedDocumentSilently" fullname="Core::DocumentManager::saveModifiedDocumentSilently" href="core-documentmanager.html#saveModifiedDocumentSilently" status="active" access="public" location="documentmanager.h" filepath="C:/Users/qt/work/build/qt-creator/src/plugins/coreplugin/documentmanager.h" lineno="104" documented="true" meta="plain" virtual="non" const="false" static="true" final="false" override="false" type="bool" signature="bool saveModifiedDocumentSilently(Core::IDocument *document, bool *canceled, QList&lt;Core::IDocument *&gt; *failedToClose)">
                    <parameter type="Core::IDocument *" name="document" default=""/>
                    <parameter type="bool *" name="canceled" default="nullptr"/>
                    <parameter type="QList&lt;Core::IDocument *&gt; *" name="failedToClose" default="nullptr"/>
                </function>
                <function name="saveModifiedDocuments" fullname="Core::DocumentManager::saveModifiedDocuments" href="core-documentmanager.html#saveModifiedDocuments" status="active" access="public" location="documentmanager.h" filepath="C:/Users/qt/work/build/qt-creator/src/plugins/coreplugin/documentmanager.h" lineno="113" documented="true" meta="plain" virtual="non" const="false" static="true" final="false" override="false" type="bool" signature="bool saveModifiedDocuments(const QList&lt;Core::IDocument *&gt; &amp;documents, const QString &amp;message, bool *canceled, const QString &amp;alwaysSaveMessage, bool *alwaysSave, QList&lt;Core::IDocument *&gt; *failedToClose)">
                    <parameter type="const QList&lt;Core::IDocument *&gt; &amp;" name="documents" default=""/>
                    <parameter type="const QString &amp;" name="message" default="QString()"/>
                    <parameter type="bool *" name="canceled" default="nullptr"/>
                    <parameter type="const QString &amp;" name="alwaysSaveMessage" default="QString()"/>
                    <parameter type="bool *" name="alwaysSave" default="nullptr"/>
                    <parameter type="QList&lt;Core::IDocument *&gt; *" name="failedToClose" default="nullptr"/>
                </function>
                <function name="saveModifiedDocumentsSilently" fullname="Core::DocumentManager::saveModifiedDocumentsSilently" href="core-documentmanager.html#saveModifiedDocumentsSilently" status="active" access="public" location="documentmanager.h" filepath="C:/Users/qt/work/build/qt-creator/src/plugins/coreplugin/documentmanager.h" lineno="101" documented="true" meta="plain" virtual="non" const="false" static="true" final="false" override="false" type="bool" signature="bool saveModifiedDocumentsSilently(const QList&lt;Core::IDocument *&gt; &amp;documents, bool *canceled, QList&lt;Core::IDocument *&gt; *failedToClose)">
                    <parameter type="const QList&lt;Core::IDocument *&gt; &amp;" name="documents" default=""/>
                    <parameter type="bool *" name="canceled" default="nullptr"/>
                    <parameter type="QList&lt;Core::IDocument *&gt; *" name="failedToClose" default="nullptr"/>
                </function>
                <function name="setDefaultLocationForNewFiles" fullname="Core::DocumentManager::setDefaultLocationForNewFiles" href="core-documentmanager.html#setDefaultLocationForNewFiles" status="active" access="public" location="documentmanager.h" filepath="C:/Users/qt/work/build/qt-creator/src/plugins/coreplugin/documentmanager.h" lineno="133" documented="true" meta="plain" virtual="non" const="false" static="true" final="false" override="false" type="void" signature="void setDefaultLocationForNewFiles(const Utils::FilePath &amp;location)">
                    <parameter type="const Utils::FilePath &amp;" name="location" default=""/>
                </function>
                <function name="setFileDialogLastVisitedDirectory" fullname="Core::DocumentManager::setFileDialogLastVisitedDirectory" href="core-documentmanager.html#setFileDialogLastVisitedDirectory" status="active" access="public" location="documentmanager.h" filepath="C:/Users/qt/work/build/qt-creator/src/plugins/coreplugin/documentmanager.h" lineno="128" documented="true" meta="plain" virtual="non" const="false" static="true" final="false" override="false" type="void" signature="void setFileDialogLastVisitedDirectory(const Utils::FilePath &amp;directory)">
                    <parameter type="const Utils::FilePath &amp;" name="directory" default=""/>
                </function>
                <function name="setProjectsDirectory" fullname="Core::DocumentManager::setProjectsDirectory" href="core-documentmanager.html#setProjectsDirectory" status="active" access="public" location="documentmanager.h" filepath="C:/Users/qt/work/build/qt-creator/src/plugins/coreplugin/documentmanager.h" lineno="139" documented="true" meta="plain" virtual="non" const="false" static="true" final="false" override="false" type="void" signature="void setProjectsDirectory(const Utils::FilePath &amp;directory)">
                    <parameter type="const Utils::FilePath &amp;" name="directory" default=""/>
                </function>
                <function name="setUseProjectsDirectory" fullname="Core::DocumentManager::setUseProjectsDirectory" href="core-documentmanager.html#setUseProjectsDirectory" status="active" access="public" location="documentmanager.h" filepath="C:/Users/qt/work/build/qt-creator/src/plugins/coreplugin/documentmanager.h" lineno="136" documented="true" meta="plain" virtual="non" const="false" static="true" final="false" override="false" type="void" signature="void setUseProjectsDirectory(bool useProjectsDirectory)">
                    <parameter type="bool" name="useProjectsDirectory" default=""/>
                </function>
                <function name="unexpectFileChange" fullname="Core::DocumentManager::unexpectFileChange" href="core-documentmanager.html#unexpectFileChange" status="active" access="public" location="documentmanager.h" filepath="C:/Users/qt/work/build/qt-creator/src/plugins/coreplugin/documentmanager.h" lineno="69" documented="true" meta="plain" virtual="non" const="false" static="true" final="false" override="false" type="void" signature="void unexpectFileChange(const Utils::FilePath &amp;filePath)">
                    <parameter type="const Utils::FilePath &amp;" name="filePath" default=""/>
                </function>
                <function name="useProjectsDirectory" fullname="Core::DocumentManager::useProjectsDirectory" href="core-documentmanager.html#useProjectsDirectory" status="active" access="public" location="documentmanager.h" filepath="C:/Users/qt/work/build/qt-creator/src/plugins/coreplugin/documentmanager.h" lineno="135" documented="true" meta="plain" virtual="non" const="false" static="true" final="false" override="false" type="bool" signature="bool useProjectsDirectory()"/>
            </class>
            <class name="EditorManager" fullname="Core::EditorManager" href="core-editormanager.html" status="active" access="public" location="editormanager.h" filepath="C:/Users/qt/work/build/qt-creator/src/plugins/coreplugin/editormanager/editormanager.h" lineno="69" documented="true" bases="QObject" module="QtCreator" brief="Manages the editors created for files according to their MIME type">
                <function name="aboutToSave" fullname="Core::EditorManager::aboutToSave" href="core-editormanager.html#aboutToSave" status="active" access="public" location="editormanager.h" filepath="C:/Users/qt/work/build/qt-creator/src/plugins/coreplugin/editormanager/editormanager.h" lineno="191" documented="true" meta="signal" virtual="non" const="false" static="false" final="false" override="false" type="void" signature="void aboutToSave(Core::IDocument *document)">
                    <parameter type="Core::IDocument *" name="document" default=""/>
                </function>
                <function name="activateEditor" fullname="Core::EditorManager::activateEditor" href="core-editormanager.html#activateEditor" status="active" access="public" location="editormanager.h" filepath="C:/Users/qt/work/build/qt-creator/src/plugins/coreplugin/editormanager/editormanager.h" lineno="127" documented="true" meta="plain" virtual="non" const="false" static="true" final="false" override="false" type="void" signature="void activateEditor(Core::IEditor *editor, Core::EditorManager::OpenEditorFlags flags)">
                    <parameter type="Core::IEditor *" name="editor" default=""/>
                    <parameter type="Core::EditorManager::OpenEditorFlags" name="flags" default="NoFlags"/>
                </function>
                <function name="activateEditorForDocument" fullname="Core::EditorManager::activateEditorForDocument" href="core-editormanager.html#activateEditorForDocument" status="active" access="public" location="editormanager.h" filepath="C:/Users/qt/work/build/qt-creator/src/plugins/coreplugin/editormanager/editormanager.h" lineno="129" documented="true" meta="plain" virtual="non" const="false" static="true" final="false" override="false" type="Core::IEditor *" signature="Core::IEditor * activateEditorForDocument(Core::IDocument *document, Core::EditorManager::OpenEditorFlags flags)">
                    <parameter type="Core::IDocument *" name="document" default=""/>
                    <parameter type="Core::EditorManager::OpenEditorFlags" name="flags" default="NoFlags"/>
                </function>
                <function name="activateEditorForEntry" fullname="Core::EditorManager::activateEditorForEntry" href="core-editormanager.html#activateEditorForEntry" status="active" access="public" location="editormanager.h" filepath="C:/Users/qt/work/build/qt-creator/src/plugins/coreplugin/editormanager/editormanager.h" lineno="128" documented="true" meta="plain" virtual="non" const="false" static="true" final="false" override="false" type="void" signature="void activateEditorForEntry(DocumentModel::Entry *entry, Core::EditorManager::OpenEditorFlags flags)">
                    <parameter type="DocumentModel::Entry *" name="entry" default=""/>
                    <parameter type="Core::EditorManager::OpenEditorFlags" name="flags" default="NoFlags"/>
                </function>
                <function name="addCloseEditorListener" fullname="Core::EditorManager::addCloseEditorListener" href="core-editormanager.html#addCloseEditorListener" status="active" access="public" location="editormanager.h" filepath="C:/Users/qt/work/build/qt-creator/src/plugins/coreplugin/editormanager/editormanager.h" lineno="119" documented="true" meta="plain" virtual="non" const="false" static="true" final="false" override="false" type="void" signature="void addCloseEditorListener(const std::function&lt;bool (IEditor *)&gt; &amp;listener)">
                    <parameter type="const std::function&lt;bool (IEditor *)&gt; &amp;" name="listener" default=""/>
                </function>
                <function name="addCurrentPositionToNavigationHistory" fullname="Core::EditorManager::addCurrentPositionToNavigationHistory" href="core-editormanager.html#addCurrentPositionToNavigationHistory" status="active" access="public" location="editormanager.h" filepath="C:/Users/qt/work/build/qt-creator/src/plugins/coreplugin/editormanager/editormanager.h" lineno="136" documented="true" meta="plain" virtual="non" const="false" static="true" final="false" override="false" type="void" signature="void addCurrentPositionToNavigationHistory(const QByteArray &amp;saveState)">
                    <parameter type="const QByteArray &amp;" name="saveState" default="QByteArray()"/>
                </function>
                <function name="addNativeDirAndOpenWithActions" fullname="Core::EditorManager::addNativeDirAndOpenWithActions" href="core-editormanager.html#addNativeDirAndOpenWithActions" status="active" access="public" location="editormanager.h" filepath="C:/Users/qt/work/build/qt-creator/src/plugins/coreplugin/editormanager/editormanager.h" lineno="172" documented="true" meta="plain" virtual="non" const="false" static="true" final="false" override="false" type="void" signature="void addNativeDirAndOpenWithActions(QMenu *contextMenu, DocumentModel::Entry *entry)">
                    <parameter type="QMenu *" name="contextMenu" default=""/>
                    <parameter type="DocumentModel::Entry *" name="entry" default=""/>
                </function>
                <function name="addPinEditorActions" fullname="Core::EditorManager::addPinEditorActions" href="core-editormanager.html#addPinEditorActions" status="active" access="public" location="editormanager.h" filepath="C:/Users/qt/work/build/qt-creator/src/plugins/coreplugin/editormanager/editormanager.h" lineno="171" documented="true" meta="plain" virtual="non" const="false" static="true" final="false" override="false" type="void" signature="void addPinEditorActions(QMenu *contextMenu, DocumentModel::Entry *entry)">
                    <parameter type="QMenu *" name="contextMenu" default=""/>
                    <parameter type="DocumentModel::Entry *" name="entry" default=""/>
                </function>
                <function name="addSaveAndCloseEditorActions" fullname="Core::EditorManager::addSaveAndCloseEditorActions" href="core-editormanager.html#addSaveAndCloseEditorActions" status="active" access="public" location="editormanager.h" filepath="C:/Users/qt/work/build/qt-creator/src/plugins/coreplugin/editormanager/editormanager.h" lineno="169" documented="true" meta="plain" virtual="non" const="false" static="true" final="false" override="false" type="void" signature="void addSaveAndCloseEditorActions(QMenu *contextMenu, DocumentModel::Entry *entry, Core::IEditor *editor)">
                    <parameter type="QMenu *" name="contextMenu" default=""/>
                    <parameter type="DocumentModel::Entry *" name="entry" default=""/>
                    <parameter type="Core::IEditor *" name="editor" default="nullptr"/>
                </function>
                <function name="autoSaved" fullname="Core::EditorManager::autoSaved" href="core-editormanager.html#autoSaved" status="active" access="public" location="editormanager.h" filepath="C:/Users/qt/work/build/qt-creator/src/plugins/coreplugin/editormanager/editormanager.h" lineno="193" documented="true" meta="signal" virtual="non" const="false" static="false" final="false" override="false" type="void" signature="void autoSaved()"/>
                <function name="clearUniqueId" fullname="Core::EditorManager::clearUniqueId" href="core-editormanager.html#clearUniqueId" status="active" access="public" location="editormanager.h" filepath="C:/Users/qt/work/build/qt-creator/src/plugins/coreplugin/editormanager/editormanager.h" lineno="116" documented="true" meta="plain" virtual="non" const="false" static="true" final="false" override="false" type="void" signature="void clearUniqueId(Core::IDocument *document)">
                    <parameter type="Core::IDocument *" name="document" default=""/>
                </function>
                <function name="closeAllDocuments" fullname="Core::EditorManager::closeAllDocuments" href="core-editormanager.html#closeAllDocuments" status="active" access="public" location="editormanager.h" filepath="C:/Users/qt/work/build/qt-creator/src/plugins/coreplugin/editormanager/editormanager.h" lineno="134" documented="true" meta="plain" virtual="non" const="false" static="true" final="false" override="false" type="bool" signature="bool closeAllDocuments()"/>
                <function name="closeAllEditors" fullname="Core::EditorManager::closeAllEditors" href="core-editormanager.html#closeAllEditors" status="active" access="public" location="editormanager.h" filepath="C:/Users/qt/work/build/qt-creator/src/plugins/coreplugin/editormanager/editormanager.h" lineno="204" documented="true" meta="slot" virtual="non" const="false" static="true" final="false" override="false" type="bool" signature="bool closeAllEditors(bool askAboutModifiedEditors)">
                    <parameter type="bool" name="askAboutModifiedEditors" default="true"/>
                </function>
                <function name="closeDocuments" fullname="Core::EditorManager::closeDocuments" href="core-editormanager.html#closeDocuments" status="active" access="public" location="editormanager.h" filepath="C:/Users/qt/work/build/qt-creator/src/plugins/coreplugin/editormanager/editormanager.h" lineno="131" documented="true" meta="plain" virtual="non" const="false" static="true" final="false" override="false" type="bool" signature="bool closeDocuments(const QList&lt;Core::IDocument *&gt; &amp;documents, bool askAboutModifiedEditors)">
                    <parameter type="const QList&lt;Core::IDocument *&gt; &amp;" name="documents" default=""/>
                    <parameter type="bool" name="askAboutModifiedEditors" default="true"/>
                </function>
                <function name="closeDocuments" fullname="Core::EditorManager::closeDocuments" href="core-editormanager.html#closeDocuments-1" status="active" access="public" location="editormanager.h" filepath="C:/Users/qt/work/build/qt-creator/src/plugins/coreplugin/editormanager/editormanager.h" lineno="132" documented="true" meta="plain" virtual="non" const="false" static="true" final="false" override="false" overload="true" overload-number="1" type="bool" signature="bool closeDocuments(const QList&lt;DocumentModel::Entry *&gt; &amp;entries)">
                    <parameter type="const QList&lt;DocumentModel::Entry *&gt; &amp;" name="entries" default=""/>
                </function>
                <function name="closeEditors" fullname="Core::EditorManager::closeEditors" href="core-editormanager.html#closeEditors" status="active" access="public" location="editormanager.h" filepath="C:/Users/qt/work/build/qt-creator/src/plugins/coreplugin/editormanager/editormanager.h" lineno="142" documented="true" meta="plain" virtual="non" const="false" static="true" final="false" override="false" type="bool" signature="bool closeEditors(const QList&lt;Core::IEditor *&gt; &amp;editorsToClose, bool askAboutModifiedEditors)">
                    <parameter type="const QList&lt;Core::IEditor *&gt; &amp;" name="editorsToClose" default=""/>
                    <parameter type="bool" name="askAboutModifiedEditors" default="true"/>
                </function>
                <function name="closeOtherDocuments" fullname="Core::EditorManager::closeOtherDocuments" href="core-editormanager.html#closeOtherDocuments" status="active" access="public" location="editormanager.h" filepath="C:/Users/qt/work/build/qt-creator/src/plugins/coreplugin/editormanager/editormanager.h" lineno="133" documented="true" meta="plain" virtual="non" const="false" static="true" final="false" override="false" type="void" signature="void closeOtherDocuments(Core::IDocument *document)">
                    <parameter type="Core::IDocument *" name="document" default=""/>
                </function>
                <function name="closeOtherDocuments" fullname="Core::EditorManager::closeOtherDocuments" href="core-editormanager.html#closeOtherDocuments-1" status="active" access="public" location="editormanager.h" filepath="C:/Users/qt/work/build/qt-creator/src/plugins/coreplugin/editormanager/editormanager.h" lineno="206" documented="true" meta="slot" virtual="non" const="false" static="true" final="false" override="false" overload="true" overload-number="1" type="void" signature="void closeOtherDocuments()"/>
                <function name="currentDocument" fullname="Core::EditorManager::currentDocument" href="core-editormanager.html#currentDocument" status="active" access="public" location="editormanager.h" filepath="C:/Users/qt/work/build/qt-creator/src/plugins/coreplugin/editormanager/editormanager.h" lineno="123" documented="true" meta="plain" virtual="non" const="false" static="true" final="false" override="false" type="Core::IDocument *" signature="Core::IDocument * currentDocument()"/>
                <function name="currentDocumentStateChanged" fullname="Core::EditorManager::currentDocumentStateChanged" href="core-editormanager.html#currentDocumentStateChanged" status="active" access="public" location="editormanager.h" filepath="C:/Users/qt/work/build/qt-creator/src/plugins/coreplugin/editormanager/editormanager.h" lineno="181" documented="true" meta="signal" virtual="non" const="false" static="false" final="false" override="false" type="void" signature="void currentDocumentStateChanged()"/>
                <function name="currentEditor" fullname="Core::EditorManager::currentEditor" href="core-editormanager.html#currentEditor" status="active" access="public" location="editormanager.h" filepath="C:/Users/qt/work/build/qt-creator/src/plugins/coreplugin/editormanager/editormanager.h" lineno="124" documented="true" meta="plain" virtual="non" const="false" static="true" final="false" override="false" type="Core::IEditor *" signature="Core::IEditor * currentEditor()"/>
                <function name="currentEditorAboutToChange" fullname="Core::EditorManager::currentEditorAboutToChange" href="core-editormanager.html#currentEditorAboutToChange" status="active" access="public" location="editormanager.h" filepath="C:/Users/qt/work/build/qt-creator/src/plugins/coreplugin/editormanager/editormanager.h" lineno="194" documented="true" meta="signal" virtual="non" const="false" static="false" final="false" override="false" type="void" signature="void currentEditorAboutToChange(Core::IEditor *editor)">
                    <parameter type="Core::IEditor *" name="editor" default=""/>
                </function>
                <function name="currentEditorChanged" fullname="Core::EditorManager::currentEditorChanged" href="core-editormanager.html#currentEditorChanged" status="active" access="public" location="editormanager.h" filepath="C:/Users/qt/work/build/qt-creator/src/plugins/coreplugin/editormanager/editormanager.h" lineno="180" documented="true" meta="signal" virtual="non" const="false" static="false" final="false" override="false" type="void" signature="void currentEditorChanged(Core::IEditor *editor)">
                    <parameter type="Core::IEditor *" name="editor" default=""/>
                </function>
                <function name="cutForwardNavigationHistory" fullname="Core::EditorManager::cutForwardNavigationHistory" href="core-editormanager.html#cutForwardNavigationHistory" status="active" access="public" location="editormanager.h" filepath="C:/Users/qt/work/build/qt-creator/src/plugins/coreplugin/editormanager/editormanager.h" lineno="138" documented="true" meta="plain" virtual="non" const="false" static="true" final="false" override="false" type="void" signature="void cutForwardNavigationHistory()"/>
                <function name="defaultLineEnding" fullname="Core::EditorManager::defaultLineEnding" href="core-editormanager.html#defaultLineEnding" status="active" access="public" location="editormanager.h" filepath="C:/Users/qt/work/build/qt-creator/src/plugins/coreplugin/editormanager/editormanager.h" lineno="161" documented="true" meta="plain" virtual="non" const="false" static="true" final="false" override="false" type="Utils::TextFileFormat::LineTerminationMode" signature="Utils::TextFileFormat::LineTerminationMode defaultLineEnding()"/>
                <function name="defaultTextCodec" fullname="Core::EditorManager::defaultTextCodec" href="core-editormanager.html#defaultTextCodec" status="active" access="public" location="editormanager.h" filepath="C:/Users/qt/work/build/qt-creator/src/plugins/coreplugin/editormanager/editormanager.h" lineno="159" documented="true" meta="plain" virtual="non" const="false" static="true" final="false" override="false" type="QTextCodec *" signature="QTextCodec * defaultTextCodec()"/>
                <function name="documentClosed" fullname="Core::EditorManager::documentClosed" href="core-editormanager.html#documentClosed" status="active" access="public" location="editormanager.h" filepath="C:/Users/qt/work/build/qt-creator/src/plugins/coreplugin/editormanager/editormanager.h" lineno="188" documented="true" meta="signal" virtual="non" const="false" static="false" final="false" override="false" type="void" signature="void documentClosed(Core::IDocument *document)">
                    <parameter type="Core::IDocument *" name="document" default=""/>
                </function>
                <function name="documentOpened" fullname="Core::EditorManager::documentOpened" href="core-editormanager.html#documentOpened" status="active" access="public" location="editormanager.h" filepath="C:/Users/qt/work/build/qt-creator/src/plugins/coreplugin/editormanager/editormanager.h" lineno="185" documented="true" meta="signal" virtual="non" const="false" static="false" final="false" override="false" type="void" signature="void documentOpened(Core::IDocument *document)">
                    <parameter type="Core::IDocument *" name="document" default=""/>
                </function>
                <function name="documentStateChanged" fullname="Core::EditorManager::documentStateChanged" href="core-editormanager.html#documentStateChanged" status="active" access="public" location="editormanager.h" filepath="C:/Users/qt/work/build/qt-creator/src/plugins/coreplugin/editormanager/editormanager.h" lineno="182" documented="true" meta="signal" virtual="non" const="false" static="false" final="false" override="false" type="void" signature="void documentStateChanged(Core::IDocument *document)">
                    <parameter type="Core::IDocument *" name="document" default=""/>
                </function>
                <function name="editorAboutToClose" fullname="Core::EditorManager::editorAboutToClose" href="core-editormanager.html#editorAboutToClose" status="active" access="public" location="editormanager.h" filepath="C:/Users/qt/work/build/qt-creator/src/plugins/coreplugin/editormanager/editormanager.h" lineno="186" documented="true" meta="signal" virtual="non" const="false" static="false" final="false" override="false" type="void" signature="void editorAboutToClose(Core::IEditor *editor)">
                    <parameter type="Core::IEditor *" name="editor" default=""/>
                </function>
                <function name="editorCreated" fullname="Core::EditorManager::editorCreated" href="core-editormanager.html#editorCreated" status="active" access="public" location="editormanager.h" filepath="C:/Users/qt/work/build/qt-creator/src/plugins/coreplugin/editormanager/editormanager.h" lineno="183" documented="true" meta="signal" virtual="non" const="false" static="false" final="false" override="false" type="void" signature="void editorCreated(Core::IEditor *editor, const QString &amp;fileName)">
                    <parameter type="Core::IEditor *" name="editor" default=""/>
                    <parameter type="const QString &amp;" name="fileName" default=""/>
                </function>
                <function name="editorOpened" fullname="Core::EditorManager::editorOpened" href="core-editormanager.html#editorOpened" status="active" access="public" location="editormanager.h" filepath="C:/Users/qt/work/build/qt-creator/src/plugins/coreplugin/editormanager/editormanager.h" lineno="184" documented="true" meta="signal" virtual="non" const="false" static="false" final="false" override="false" type="void" signature="void editorOpened(Core::IEditor *editor)">
                    <parameter type="Core::IEditor *" name="editor" default=""/>
                </function>
                <function name="editorsClosed" fullname="Core::EditorManager::editorsClosed" href="core-editormanager.html#editorsClosed" status="active" access="public" location="editormanager.h" filepath="C:/Users/qt/work/build/qt-creator/src/plugins/coreplugin/editormanager/editormanager.h" lineno="187" documented="true" meta="signal" virtual="non" const="false" static="false" final="false" override="false" type="void" signature="void editorsClosed(QList&lt;Core::IEditor *&gt; editors)">
                    <parameter type="QList&lt;Core::IEditor *&gt;" name="editors" default=""/>
                </function>
                <function name="getOpenFilePaths" fullname="Core::EditorManager::getOpenFilePaths" href="core-editormanager.html#getOpenFilePaths" status="active" access="public" location="editormanager.h" filepath="C:/Users/qt/work/build/qt-creator/src/plugins/coreplugin/editormanager/editormanager.h" lineno="121" documented="true" meta="plain" virtual="non" const="false" static="true" final="false" override="false" type="Utils::FilePaths" signature="Utils::FilePaths getOpenFilePaths()"/>
                <function name="goBackInNavigationHistory" fullname="Core::EditorManager::goBackInNavigationHistory" href="core-editormanager.html#goBackInNavigationHistory" status="active" access="public" location="editormanager.h" filepath="C:/Users/qt/work/build/qt-creator/src/plugins/coreplugin/editormanager/editormanager.h" lineno="209" documented="true" meta="slot" virtual="non" const="false" static="true" final="false" override="false" type="void" signature="void goBackInNavigationHistory()"/>
                <function name="goForwardInNavigationHistory" fullname="Core::EditorManager::goForwardInNavigationHistory" href="core-editormanager.html#goForwardInNavigationHistory" status="active" access="public" location="editormanager.h" filepath="C:/Users/qt/work/build/qt-creator/src/plugins/coreplugin/editormanager/editormanager.h" lineno="210" documented="true" meta="slot" virtual="non" const="false" static="true" final="false" override="false" type="void" signature="void goForwardInNavigationHistory()"/>
                <function name="gotoOtherSplit" fullname="Core::EditorManager::gotoOtherSplit" href="core-editormanager.html#gotoOtherSplit" status="active" access="public" location="editormanager.h" filepath="C:/Users/qt/work/build/qt-creator/src/plugins/coreplugin/editormanager/editormanager.h" lineno="208" documented="true" meta="slot" virtual="non" const="false" static="true" final="false" override="false" type="void" signature="void gotoOtherSplit()"/>
                <function name="instance" fullname="Core::EditorManager::instance" href="core-editormanager.html#instance" status="active" access="public" location="editormanager.h" filepath="C:/Users/qt/work/build/qt-creator/src/plugins/coreplugin/editormanager/editormanager.h" lineno="76" documented="true" meta="plain" virtual="non" const="false" static="true" final="false" override="false" type="Core::EditorManager *" signature="Core::EditorManager * instance()"/>
                <function name="isAutoSaveFile" fullname="Core::EditorManager::isAutoSaveFile" href="core-editormanager.html#isAutoSaveFile" status="active" access="public" location="editormanager.h" filepath="C:/Users/qt/work/build/qt-creator/src/plugins/coreplugin/editormanager/editormanager.h" lineno="155" documented="true" meta="plain" virtual="non" const="false" static="true" final="false" override="false" type="bool" signature="bool isAutoSaveFile(const QString &amp;filePath)">
                    <parameter type="const QString &amp;" name="filePath" default=""/>
                </function>
                <function name="maxTextFileSize" fullname="Core::EditorManager::maxTextFileSize" href="core-editormanager.html#maxTextFileSize" status="active" access="public" location="editormanager.h" filepath="C:/Users/qt/work/build/qt-creator/src/plugins/coreplugin/editormanager/editormanager.h" lineno="163" documented="true" meta="plain" virtual="non" const="false" static="true" final="false" override="false" type="qint64" signature="qint64 maxTextFileSize()"/>
                <function name="openEditor" fullname="Core::EditorManager::openEditor" href="core-editormanager.html#openEditor" status="active" access="public" location="editormanager.h" filepath="C:/Users/qt/work/build/qt-creator/src/plugins/coreplugin/editormanager/editormanager.h" lineno="91" documented="true" meta="plain" virtual="non" const="false" static="true" final="false" override="false" type="Core::IEditor *" signature="Core::IEditor * openEditor(const Utils::FilePath &amp;filePath, Utils::Id editorId, Core::EditorManager::OpenEditorFlags flags, bool *newEditor)">
                    <parameter type="const Utils::FilePath &amp;" name="filePath" default=""/>
                    <parameter type="Utils::Id" name="editorId" default="{}"/>
                    <parameter type="Core::EditorManager::OpenEditorFlags" name="flags" default="NoFlags"/>
                    <parameter type="bool *" name="newEditor" default="nullptr"/>
                </function>
                <function name="openEditorAt" fullname="Core::EditorManager::openEditorAt" href="core-editormanager.html#openEditorAt" status="active" access="public" location="editormanager.h" filepath="C:/Users/qt/work/build/qt-creator/src/plugins/coreplugin/editormanager/editormanager.h" lineno="95" documented="true" meta="plain" virtual="non" const="false" static="true" final="false" override="false" type="Core::IEditor *" signature="Core::IEditor * openEditorAt(const Utils::Link &amp;link, Utils::Id editorId, Core::EditorManager::OpenEditorFlags flags, bool *newEditor)">
                    <parameter type="const Utils::Link &amp;" name="link" default=""/>
                    <parameter type="Utils::Id" name="editorId" default="{}"/>
                    <parameter type="Core::EditorManager::OpenEditorFlags" name="flags" default="NoFlags"/>
                    <parameter type="bool *" name="newEditor" default="nullptr"/>
                </function>
                <function name="openEditorAtSearchResult" fullname="Core::EditorManager::openEditorAtSearchResult" href="core-editormanager.html#openEditorAtSearchResult" status="active" access="public" location="editormanager.h" filepath="C:/Users/qt/work/build/qt-creator/src/plugins/coreplugin/editormanager/editormanager.h" lineno="107" documented="true" meta="plain" virtual="non" const="false" static="true" final="false" override="false" type="void" signature="void openEditorAtSearchResult(const Core::SearchResultItem &amp;item, Utils::Id editorId, Core::EditorManager::OpenEditorFlags flags, bool *newEditor)">
                    <parameter type="const Core::SearchResultItem &amp;" name="item" default=""/>
                    <parameter type="Utils::Id" name="editorId" default="{}"/>
                    <parameter type="Core::EditorManager::OpenEditorFlags" name="flags" default="NoFlags"/>
                    <parameter type="bool *" name="newEditor" default="nullptr"/>
                </function>
                <function name="openEditorWithContents" fullname="Core::EditorManager::openEditorWithContents" href="core-editormanager.html#openEditorWithContents" status="active" access="public" location="editormanager.h" filepath="C:/Users/qt/work/build/qt-creator/src/plugins/coreplugin/editormanager/editormanager.h" lineno="111" documented="true" meta="plain" virtual="non" const="false" static="true" final="false" override="false" type="Core::IEditor *" signature="Core::IEditor * openEditorWithContents(Utils::Id editorId, QString *titlePattern, const QByteArray &amp;contents, const QString &amp;uniqueId, Core::EditorManager::OpenEditorFlags flags)">
                    <parameter type="Utils::Id" name="editorId" default=""/>
                    <parameter type="QString *" name="titlePattern" default="nullptr"/>
                    <parameter type="const QByteArray &amp;" name="contents" default="QByteArray()"/>
                    <parameter type="const QString &amp;" name="uniqueId" default="QString()"/>
                    <parameter type="Core::EditorManager::OpenEditorFlags" name="flags" default="NoFlags"/>
                </function>
                <function name="openExternalEditor" fullname="Core::EditorManager::openExternalEditor" href="core-editormanager.html#openExternalEditor" status="active" access="public" location="editormanager.h" filepath="C:/Users/qt/work/build/qt-creator/src/plugins/coreplugin/editormanager/editormanager.h" lineno="118" documented="true" meta="plain" virtual="non" const="false" static="true" final="false" override="false" type="bool" signature="bool openExternalEditor(const Utils::FilePath &amp;filePath, Utils::Id editorId)">
                    <parameter type="const Utils::FilePath &amp;" name="filePath" default=""/>
                    <parameter type="Utils::Id" name="editorId" default=""/>
                </function>
                <function name="populateOpenWithMenu" fullname="Core::EditorManager::populateOpenWithMenu" href="core-editormanager.html#populateOpenWithMenu" status="active" access="public" location="editormanager.h" filepath="C:/Users/qt/work/build/qt-creator/src/plugins/coreplugin/editormanager/editormanager.h" lineno="173" documented="true" meta="plain" virtual="non" const="false" static="true" final="false" override="false" type="void" signature="void populateOpenWithMenu(QMenu *menu, const Utils::FilePath &amp;filePath)">
                    <parameter type="QMenu *" name="menu" default=""/>
                    <parameter type="const Utils::FilePath &amp;" name="filePath" default=""/>
                </function>
                <function name="reloadSetting" fullname="Core::EditorManager::reloadSetting" href="core-editormanager.html#reloadSetting" status="active" access="public" location="editormanager.h" filepath="C:/Users/qt/work/build/qt-creator/src/plugins/coreplugin/editormanager/editormanager.h" lineno="176" documented="true" meta="plain" virtual="non" const="false" static="true" final="false" override="false" type="IDocument::ReloadSetting" signature="IDocument::ReloadSetting reloadSetting()"/>
                <function name="revertToSaved" fullname="Core::EditorManager::revertToSaved" href="core-editormanager.html#revertToSaved" status="active" access="public" location="editormanager.h" filepath="C:/Users/qt/work/build/qt-creator/src/plugins/coreplugin/editormanager/editormanager.h" lineno="203" documented="true" meta="slot" virtual="non" const="false" static="true" final="false" override="false" type="void" signature="void revertToSaved()"/>
                <function name="saveDocument" fullname="Core::EditorManager::saveDocument" href="core-editormanager.html#saveDocument" status="active" access="public" location="editormanager.h" filepath="C:/Users/qt/work/build/qt-creator/src/plugins/coreplugin/editormanager/editormanager.h" lineno="140" documented="true" meta="plain" virtual="non" const="false" static="true" final="false" override="false" type="bool" signature="bool saveDocument(Core::IDocument *document)">
                    <parameter type="Core::IDocument *" name="document" default=""/>
                </function>
                <function name="saveDocument" fullname="Core::EditorManager::saveDocument" href="core-editormanager.html#saveDocument-1" status="active" access="public" location="editormanager.h" filepath="C:/Users/qt/work/build/qt-creator/src/plugins/coreplugin/editormanager/editormanager.h" lineno="201" documented="true" meta="slot" virtual="non" const="false" static="true" final="false" override="false" overload="true" overload-number="1" type="void" signature="void saveDocument()"/>
                <function name="saveDocumentAs" fullname="Core::EditorManager::saveDocumentAs" href="core-editormanager.html#saveDocumentAs" status="active" access="public" location="editormanager.h" filepath="C:/Users/qt/work/build/qt-creator/src/plugins/coreplugin/editormanager/editormanager.h" lineno="202" documented="true" meta="slot" virtual="non" const="false" static="true" final="false" override="false" type="void" signature="void saveDocumentAs()"/>
                <function name="saved" fullname="Core::EditorManager::saved" href="core-editormanager.html#saved" status="active" access="public" location="editormanager.h" filepath="C:/Users/qt/work/build/qt-creator/src/plugins/coreplugin/editormanager/editormanager.h" lineno="192" documented="true" meta="signal" virtual="non" const="false" static="false" final="false" override="false" type="void" signature="void saved(Core::IDocument *document)">
                    <parameter type="Core::IDocument *" name="document" default=""/>
                </function>
                <function name="setLastEditLocation" fullname="Core::EditorManager::setLastEditLocation" href="core-editormanager.html#setLastEditLocation" status="active" access="public" location="editormanager.h" filepath="C:/Users/qt/work/build/qt-creator/src/plugins/coreplugin/editormanager/editormanager.h" lineno="137" documented="true" meta="plain" virtual="non" const="false" static="true" final="false" override="false" type="void" signature="void setLastEditLocation(const Core::IEditor *editor)">
                    <parameter type="const Core::IEditor *" name="editor" default=""/>
                </function>
                <function name="skipOpeningBigTextFile" fullname="Core::EditorManager::skipOpeningBigTextFile" href="core-editormanager.html#skipOpeningBigTextFile" status="active" access="public" location="editormanager.h" filepath="C:/Users/qt/work/build/qt-creator/src/plugins/coreplugin/editormanager/editormanager.h" lineno="115" documented="true" meta="plain" virtual="non" const="false" static="true" final="false" override="false" type="bool" signature="bool skipOpeningBigTextFile(const Utils::FilePath &amp;filePath)">
                    <parameter type="const Utils::FilePath &amp;" name="filePath" default=""/>
                </function>
                <function name="splitSideBySide" fullname="Core::EditorManager::splitSideBySide" href="core-editormanager.html#splitSideBySide" status="active" access="public" location="editormanager.h" filepath="C:/Users/qt/work/build/qt-creator/src/plugins/coreplugin/editormanager/editormanager.h" lineno="207" documented="true" meta="slot" virtual="non" const="false" static="true" final="false" override="false" type="void" signature="void splitSideBySide()"/>
                <function name="visibleEditors" fullname="Core::EditorManager::visibleEditors" href="core-editormanager.html#visibleEditors" status="active" access="public" location="editormanager.h" filepath="C:/Users/qt/work/build/qt-creator/src/plugins/coreplugin/editormanager/editormanager.h" lineno="125" documented="true" meta="plain" virtual="non" const="false" static="true" final="false" override="false" type="QList&lt;Core::IEditor *&gt;" signature="QList&lt;Core::IEditor *&gt; visibleEditors()"/>
                <enum name="OpenEditorFlag" fullname="Core::EditorManager::OpenEditorFlag" href="core-editormanager.html#OpenEditorFlag-enum" status="active" access="public" location="editormanager.h" filepath="C:/Users/qt/work/build/qt-creator/src/plugins/coreplugin/editormanager/editormanager.h" lineno="78" documented="true" typedef="Core::EditorManager::OpenEditorFlags">
                    <value name="NoFlags" value="0"/>
                    <value name="DoNotChangeCurrentEditor" value="1"/>
                    <value name="IgnoreNavigationHistory" value="2"/>
                    <value name="DoNotMakeVisible" value="4"/>
                    <value name="OpenInOtherSplit" value="8"/>
                    <value name="DoNotSwitchToDesignMode" value="16"/>
                    <value name="DoNotSwitchToEditMode" value="32"/>
                    <value name="SwitchSplitIfAlreadyVisible" value="64"/>
                    <value name="DoNotRaise" value="128"/>
                </enum>
                <typedef name="OpenEditorFlags" fullname="Core::EditorManager::OpenEditorFlags" href="core-editormanager.html#OpenEditorFlag-enum" status="active" access="public" location="editormanager.h" filepath="C:/Users/qt/work/build/qt-creator/src/plugins/coreplugin/editormanager/editormanager.h" lineno="89" enum="Core::EditorManager::OpenEditorFlag"/>
            </class>
            <class name="EditorManagerPlaceHolder" fullname="Core::EditorManagerPlaceHolder" href="core-editormanagerplaceholder.html" status="active" access="public" location="editormanager.h" filepath="C:/Users/qt/work/build/qt-creator/src/plugins/coreplugin/editormanager/editormanager.h" lineno="58" documented="true" groups="mainclasses" bases="QWidget" module="QtCreator" brief="Used to integrate an editor area into a mode">
                <function name="EditorManagerPlaceHolder" fullname="Core::EditorManagerPlaceHolder::EditorManagerPlaceHolder" href="core-editormanagerplaceholder.html#EditorManagerPlaceHolder" status="active" access="public" location="editormanager.h" filepath="C:/Users/qt/work/build/qt-creator/src/plugins/coreplugin/editormanager/editormanager.h" lineno="62" documented="true" meta="constructor" virtual="non" const="false" static="false" final="false" override="false" type="" signature="EditorManagerPlaceHolder(QWidget *parent)">
                    <parameter type="QWidget *" name="parent" default="nullptr"/>
                </function>
            </class>
            <class name="FileChangeBlocker" fullname="Core::FileChangeBlocker" href="core-filechangeblocker.html" status="active" access="public" location="documentmanager.h" filepath="C:/Users/qt/work/build/qt-creator/src/plugins/coreplugin/documentmanager.h" lineno="175" documented="true" module="QtCreator" brief="Blocks all change notifications to all IDocument objects that match the given filename"/>
            <namespace name="FileIconProvider" fullname="Core::FileIconProvider" href="core-fileiconprovider.html" status="active" access="public" location="fileiconprovider.h" filepath="C:/Users/qt/work/build/qt-creator/src/plugins/coreplugin/fileiconprovider.h" lineno="37" documented="true" module="QtCreator" brief="Provides functions for registering custom overlay icons for system icons">
                <function name="icon" fullname="Core::FileIconProvider::icon" href="core-fileiconprovider.html#icon" status="active" access="public" location="fileiconprovider.h" filepath="C:/Users/qt/work/build/qt-creator/src/plugins/coreplugin/fileiconprovider.h" lineno="43" documented="true" meta="plain" virtual="non" const="false" static="false" final="false" override="false" type="QIcon" signature="QIcon icon(const Utils::FilePath &amp;filePath)">
                    <parameter type="const Utils::FilePath &amp;" name="filePath" default=""/>
                </function>
                <function name="icon" fullname="Core::FileIconProvider::icon" href="core-fileiconprovider.html#icon-1" status="active" access="public" location="fileiconprovider.h" filepath="C:/Users/qt/work/build/qt-creator/src/plugins/coreplugin/fileiconprovider.h" lineno="44" documented="true" meta="plain" virtual="non" const="false" static="false" final="false" override="false" overload="true" overload-number="1" type="QIcon" signature="QIcon icon(QFileIconProvider::IconType type)">
                    <parameter type="QFileIconProvider::IconType" name="type" default=""/>
                </function>
                <function name="overlayIcon" fullname="Core::FileIconProvider::overlayIcon" href="core-fileiconprovider.html#overlayIcon" status="active" access="public" location="fileiconprovider.h" filepath="C:/Users/qt/work/build/qt-creator/src/plugins/coreplugin/fileiconprovider.h" lineno="47" documented="true" meta="plain" virtual="non" const="false" static="false" final="false" override="false" type="QPixmap" signature="QPixmap overlayIcon(const QPixmap &amp;baseIcon, const QIcon &amp;overlayIcon)">
                    <parameter type="const QPixmap &amp;" name="baseIcon" default=""/>
                    <parameter type="const QIcon &amp;" name="overlayIcon" default=""/>
                </function>
                <function name="overlayIcon" fullname="Core::FileIconProvider::overlayIcon" href="core-fileiconprovider.html#overlayIcon-1" status="active" access="public" location="fileiconprovider.h" filepath="C:/Users/qt/work/build/qt-creator/src/plugins/coreplugin/fileiconprovider.h" lineno="48" documented="true" meta="plain" virtual="non" const="false" static="false" final="false" override="false" overload="true" overload-number="1" type="QPixmap" signature="QPixmap overlayIcon(QStyle::StandardPixmap baseIcon, const QIcon &amp;overlay, const QSize &amp;size)">
                    <parameter type="QStyle::StandardPixmap" name="baseIcon" default=""/>
                    <parameter type="const QIcon &amp;" name="overlay" default=""/>
                    <parameter type="const QSize &amp;" name="size" default=""/>
                </function>
                <function name="registerIconOverlayForMimeType" fullname="Core::FileIconProvider::registerIconOverlayForMimeType" href="core-fileiconprovider.html#registerIconOverlayForMimeType" status="active" access="public" location="fileiconprovider.h" filepath="C:/Users/qt/work/build/qt-creator/src/plugins/coreplugin/fileiconprovider.h" lineno="52" documented="true" meta="plain" virtual="non" const="false" static="false" final="false" override="false" type="void" signature="void registerIconOverlayForMimeType(const QIcon &amp;icon, const QString &amp;mimeType)">
                    <parameter type="const QIcon &amp;" name="icon" default=""/>
                    <parameter type="const QString &amp;" name="mimeType" default=""/>
                </function>
                <function name="registerIconOverlayForMimeType" fullname="Core::FileIconProvider::registerIconOverlayForMimeType" href="core-fileiconprovider.html#registerIconOverlayForMimeType-1" status="active" access="public" location="fileiconprovider.h" filepath="C:/Users/qt/work/build/qt-creator/src/plugins/coreplugin/fileiconprovider.h" lineno="51" documented="true" meta="plain" virtual="non" const="false" static="false" final="false" override="false" overload="true" overload-number="1" type="void" signature="void registerIconOverlayForMimeType(const QString &amp;path, const QString &amp;mimeType)">
                    <parameter type="const QString &amp;" name="path" default=""/>
                    <parameter type="const QString &amp;" name="mimeType" default=""/>
                </function>
                <function name="registerIconOverlayForSuffix" fullname="Core::FileIconProvider::registerIconOverlayForSuffix" href="core-fileiconprovider.html#registerIconOverlayForSuffix" status="active" access="public" location="fileiconprovider.h" filepath="C:/Users/qt/work/build/qt-creator/src/plugins/coreplugin/fileiconprovider.h" lineno="49" documented="true" meta="plain" virtual="non" const="false" static="false" final="false" override="false" type="void" signature="void registerIconOverlayForSuffix(const QString &amp;path, const QString &amp;suffix)">
                    <parameter type="const QString &amp;" name="path" default=""/>
                    <parameter type="const QString &amp;" name="suffix" default=""/>
                </function>
            </namespace>
            <class name="FutureProgress" fullname="Core::FutureProgress" href="core-futureprogress.html" status="active" access="public" location="futureprogress.h" filepath="C:/Users/qt/work/build/qt-creator/src/plugins/coreplugin/progressmanager/futureprogress.h" lineno="39" documented="true" groups="mainclasses" bases="QWidget" module="QtCreator" brief="Used to adapt the appearance of progress indicators that were created through the ProgressManager class">
                <function name="canceled" fullname="Core::FutureProgress::canceled" href="core-futureprogress.html#canceled" status="active" access="public" location="futureprogress.h" filepath="C:/Users/qt/work/build/qt-creator/src/plugins/coreplugin/progressmanager/futureprogress.h" lineno="87" documented="true" meta="signal" virtual="non" const="false" static="false" final="false" override="false" type="void" signature="void canceled()"/>
                <function name="clicked" fullname="Core::FutureProgress::clicked" href="core-futureprogress.html#clicked" status="active" access="public" location="futureprogress.h" filepath="C:/Users/qt/work/build/qt-creator/src/plugins/coreplugin/progressmanager/futureprogress.h" lineno="85" documented="true" meta="signal" virtual="non" const="false" static="false" final="false" override="false" type="void" signature="void clicked()"/>
                <function name="finished" fullname="Core::FutureProgress::finished" href="core-futureprogress.html#finished" status="active" access="public" location="futureprogress.h" filepath="C:/Users/qt/work/build/qt-creator/src/plugins/coreplugin/progressmanager/futureprogress.h" lineno="86" documented="true" meta="signal" virtual="non" const="false" static="false" final="false" override="false" type="void" signature="void finished()"/>
                <function name="future" fullname="Core::FutureProgress::future" href="core-futureprogress.html#future" status="active" access="public" location="futureprogress.h" filepath="C:/Users/qt/work/build/qt-creator/src/plugins/coreplugin/progressmanager/futureprogress.h" lineno="55" documented="true" meta="plain" virtual="non" const="true" static="false" final="false" override="false" type="QFuture&lt;void&gt;" signature="QFuture&lt;void&gt; future() const"/>
                <function name="hasError" fullname="Core::FutureProgress::hasError" href="core-futureprogress.html#hasError" status="active" access="public" location="futureprogress.h" filepath="C:/Users/qt/work/build/qt-creator/src/plugins/coreplugin/progressmanager/futureprogress.h" lineno="72" documented="true" meta="plain" virtual="non" const="true" static="false" final="false" override="false" type="bool" signature="bool hasError() const"/>
                <function name="setTitle" fullname="Core::FutureProgress::setTitle" href="core-futureprogress.html#setTitle" status="active" access="public" location="futureprogress.h" filepath="C:/Users/qt/work/build/qt-creator/src/plugins/coreplugin/progressmanager/futureprogress.h" lineno="57" documented="true" meta="plain" virtual="non" const="false" static="false" final="false" override="false" type="void" signature="void setTitle(const QString &amp;title)">
                    <parameter type="const QString &amp;" name="title" default=""/>
                </function>
                <function name="setWidget" fullname="Core::FutureProgress::setWidget" href="core-futureprogress.html#setWidget" status="active" access="public" location="futureprogress.h" filepath="C:/Users/qt/work/build/qt-creator/src/plugins/coreplugin/progressmanager/futureprogress.h" lineno="74" documented="true" meta="plain" virtual="non" const="false" static="false" final="false" override="false" type="void" signature="void setWidget(QWidget *widget)">
                    <parameter type="QWidget *" name="widget" default=""/>
                </function>
                <function name="title" fullname="Core::FutureProgress::title" href="core-futureprogress.html#title" status="active" access="public" location="futureprogress.h" filepath="C:/Users/qt/work/build/qt-creator/src/plugins/coreplugin/progressmanager/futureprogress.h" lineno="58" documented="true" meta="plain" virtual="non" const="true" static="false" final="false" override="false" type="QString" signature="QString title() const"/>
                <function name="widget" fullname="Core::FutureProgress::widget" href="core-futureprogress.html#widget" status="active" access="public" location="futureprogress.h" filepath="C:/Users/qt/work/build/qt-creator/src/plugins/coreplugin/progressmanager/futureprogress.h" lineno="75" documented="true" meta="plain" virtual="non" const="true" static="false" final="false" override="false" type="QWidget *" signature="QWidget * widget() const"/>
            </class>
            <class name="GeneratedFile" fullname="Core::GeneratedFile" href="core-generatedfile.html" status="active" access="public" location="generatedfile.h" filepath="C:/Users/qt/work/build/qt-creator/src/plugins/coreplugin/generatedfile.h" lineno="40" documented="true" module="QtCreator" brief="Represents a file generated by a wizard">
                <typedef name="Attributes" fullname="Core::GeneratedFile::Attributes" href="core-generatedfile.html#Attribute-enum" status="active" access="public" location="generatedfile.h" filepath="C:/Users/qt/work/build/qt-creator/src/plugins/coreplugin/generatedfile.h" lineno="57" enum="Core::GeneratedFile::Attribute"/>
            </class>
            <class name="IContext" fullname="Core::IContext" href="core-icontext.html" status="active" access="public" location="icontext.h" filepath="C:/Users/qt/work/build/qt-creator/src/plugins\coreplugin/icontext.h" lineno="70" documented="true" groups="mainclasses" bases="QObject" module="QtCreator" brief="Associates a widget with a context list and context help">
                <function name="IContext" fullname="Core::IContext::IContext" href="core-icontext.html#IContext" status="active" access="public" location="icontext.h" filepath="C:/Users/qt/work/build/qt-creator/src/plugins\coreplugin/icontext.h" lineno="74" documented="true" meta="constructor" virtual="non" const="false" static="false" final="false" override="false" type="" signature="IContext(QObject *parent)">
                    <parameter type="QObject *" name="parent" default="nullptr"/>
                </function>
                <function name="context" fullname="Core::IContext::context" href="core-icontext.html#context" status="active" access="public" location="icontext.h" filepath="C:/Users/qt/work/build/qt-creator/src/plugins\coreplugin/icontext.h" lineno="76" documented="true" meta="plain" virtual="virtual" const="true" static="false" final="false" override="false" type="Core::Context" signature="Core::Context context() const"/>
                <function name="contextHelp" fullname="Core::IContext::contextHelp" href="core-icontext.html#contextHelp" status="active" access="public" location="icontext.h" filepath="C:/Users/qt/work/build/qt-creator/src/plugins\coreplugin/icontext.h" lineno="79" documented="true" meta="plain" virtual="virtual" const="true" static="false" final="false" override="false" type="void" signature="void contextHelp(const Core::IContext::HelpCallback &amp;callback) const">
                    <parameter type="const Core::IContext::HelpCallback &amp;" name="callback" default=""/>
                </function>
                <function name="setContext" fullname="Core::IContext::setContext" href="core-icontext.html#setContext" status="active" access="public" location="icontext.h" filepath="C:/Users/qt/work/build/qt-creator/src/plugins\coreplugin/icontext.h" lineno="81" documented="true" meta="plain" virtual="virtual" const="false" static="false" final="false" override="false" type="void" signature="void setContext(const Core::Context &amp;context)">
                    <parameter type="const Core::Context &amp;" name="context" default=""/>
                </function>
                <function name="setContextHelp" fullname="Core::IContext::setContextHelp" href="core-icontext.html#setContextHelp" status="active" access="public" location="icontext.h" filepath="C:/Users/qt/work/build/qt-creator/src/plugins\coreplugin/icontext.h" lineno="83" documented="true" meta="plain" virtual="virtual" const="false" static="false" final="false" override="false" type="void" signature="void setContextHelp(const Core::HelpItem &amp;id)">
                    <parameter type="const Core::HelpItem &amp;" name="id" default=""/>
                </function>
                <function name="setWidget" fullname="Core::IContext::setWidget" href="core-icontext.html#setWidget" status="active" access="public" location="icontext.h" filepath="C:/Users/qt/work/build/qt-creator/src/plugins\coreplugin/icontext.h" lineno="82" documented="true" meta="plain" virtual="virtual" const="false" static="false" final="false" override="false" type="void" signature="void setWidget(QWidget *widget)">
                    <parameter type="QWidget *" name="widget" default=""/>
                </function>
                <function name="widget" fullname="Core::IContext::widget" href="core-icontext.html#widget" status="active" access="public" location="icontext.h" filepath="C:/Users/qt/work/build/qt-creator/src/plugins\coreplugin/icontext.h" lineno="77" documented="true" meta="plain" virtual="virtual" const="true" static="false" final="false" override="false" type="QWidget *" signature="QWidget * widget() const"/>
                <typedef name="HelpCallback" fullname="Core::IContext::HelpCallback" href="core-icontext.html#HelpCallback-typedef" status="active" access="public" location="icontext.h" filepath="C:/Users/qt/work/build/qt-creator/src/plugins\coreplugin/icontext.h" lineno="78" documented="true" aliasedtype="std::function&lt;void(const HelpItem &amp;item)&gt;"/>
            </class>
            <class name="ICore" fullname="Core::ICore" href="core-icore.html" status="active" access="public" location="icore.h" filepath="C:/Users/qt/work/build/qt-creator/src/plugins/coreplugin/icore.h" lineno="61" documented="true" groups="mainclasses" bases="QObject" module="QtCreator" brief="Allows access to the different parts that make up the basic functionality of Qt Creator">
                <function name="addAdditionalContext" fullname="Core::ICore::addAdditionalContext" href="core-icore.html#addAdditionalContext" status="active" access="public" location="icore.h" filepath="C:/Users/qt/work/build/qt-creator/src/plugins/coreplugin/icore.h" lineno="122" documented="true" meta="plain" virtual="non" const="false" static="true" final="false" override="false" type="void" signature="void addAdditionalContext(const Core::Context &amp;context, Core::ICore::ContextPriority priority)">
                    <parameter type="const Core::Context &amp;" name="context" default=""/>
                    <parameter type="Core::ICore::ContextPriority" name="priority" default="ContextPriority::Low"/>
                </function>
                <function name="addContextObject" fullname="Core::ICore::addContextObject" href="core-icore.html#addContextObject" status="active" access="public" location="icore.h" filepath="C:/Users/qt/work/build/qt-creator/src/plugins/coreplugin/icore.h" lineno="125" documented="true" meta="plain" virtual="non" const="false" static="true" final="false" override="false" type="void" signature="void addContextObject(Core::IContext *context)">
                    <parameter type="Core::IContext *" name="context" default=""/>
                </function>
                <function name="addPreCloseListener" fullname="Core::ICore::addPreCloseListener" href="core-icore.html#addPreCloseListener" status="active" access="public" location="icore.h" filepath="C:/Users/qt/work/build/qt-creator/src/plugins/coreplugin/icore.h" lineno="140" documented="true" meta="plain" virtual="non" const="false" static="true" final="false" override="false" type="void" signature="void addPreCloseListener(const std::function&lt;bool ()&gt; &amp;listener)">
                    <parameter type="const std::function&lt;bool ()&gt; &amp;" name="listener" default=""/>
                </function>
                <function name="cacheResourcePath" fullname="Core::ICore::cacheResourcePath" href="core-icore.html#cacheResourcePath" status="active" access="public" location="icore.h" filepath="C:/Users/qt/work/build/qt-creator/src/plugins/coreplugin/icore.h" lineno="102" documented="true" meta="plain" virtual="non" const="false" static="true" final="false" override="false" type="Utils::FilePath" signature="Utils::FilePath cacheResourcePath(const QString &amp;rel)">
                    <parameter type="const QString &amp;" name="rel" default="{}"/>
                </function>
                <function name="contextAboutToChange" fullname="Core::ICore::contextAboutToChange" href="core-icore.html#contextAboutToChange" status="active" access="public" location="icore.h" filepath="C:/Users/qt/work/build/qt-creator/src/plugins/coreplugin/icore.h" lineno="157" documented="true" meta="signal" virtual="non" const="false" static="false" final="false" override="false" type="void" signature="void contextAboutToChange(const QList&lt;Core::IContext *&gt; &amp;context)">
                    <parameter type="const QList&lt;Core::IContext *&gt; &amp;" name="context" default=""/>
                </function>
                <function name="contextChanged" fullname="Core::ICore::contextChanged" href="core-icore.html#contextChanged" status="active" access="public" location="icore.h" filepath="C:/Users/qt/work/build/qt-creator/src/plugins/coreplugin/icore.h" lineno="158" documented="true" meta="signal" virtual="non" const="false" static="false" final="false" override="false" type="void" signature="void contextChanged(const Core::Context &amp;context)">
                    <parameter type="const Core::Context &amp;" name="context" default=""/>
                </function>
                <function name="contextObject" fullname="Core::ICore::contextObject" href="core-icore.html#contextObject" status="active" access="public" location="icore.h" filepath="C:/Users/qt/work/build/qt-creator/src/plugins/coreplugin/icore.h" lineno="119" documented="true" meta="plain" virtual="non" const="false" static="true" final="false" override="false" type="Core::IContext *" signature="Core::IContext * contextObject(QWidget *widget)">
                    <parameter type="QWidget *" name="widget" default=""/>
                </function>
                <function name="coreAboutToClose" fullname="Core::ICore::coreAboutToClose" href="core-icore.html#coreAboutToClose" status="active" access="public" location="icore.h" filepath="C:/Users/qt/work/build/qt-creator/src/plugins/coreplugin/icore.h" lineno="156" documented="true" meta="signal" virtual="non" const="false" static="false" final="false" override="false" type="void" signature="void coreAboutToClose()"/>
                <function name="coreAboutToOpen" fullname="Core::ICore::coreAboutToOpen" href="core-icore.html#coreAboutToOpen" status="active" access="public" location="icore.h" filepath="C:/Users/qt/work/build/qt-creator/src/plugins/coreplugin/icore.h" lineno="152" documented="true" meta="signal" virtual="non" const="false" static="false" final="false" override="false" type="void" signature="void coreAboutToOpen()"/>
                <function name="coreOpened" fullname="Core::ICore::coreOpened" href="core-icore.html#coreOpened" status="active" access="public" location="icore.h" filepath="C:/Users/qt/work/build/qt-creator/src/plugins/coreplugin/icore.h" lineno="153" documented="true" meta="signal" virtual="non" const="false" static="false" final="false" override="false" type="void" signature="void coreOpened()"/>
                <function name="currentContextObject" fullname="Core::ICore::currentContextObject" href="core-icore.html#currentContextObject" status="active" access="public" location="icore.h" filepath="C:/Users/qt/work/build/qt-creator/src/plugins/coreplugin/icore.h" lineno="117" documented="true" meta="plain" virtual="non" const="false" static="true" final="false" override="false" type="Core::IContext *" signature="Core::IContext * currentContextObject()"/>
                <function name="currentContextWidget" fullname="Core::ICore::currentContextWidget" href="core-icore.html#currentContextWidget" status="active" access="public" location="icore.h" filepath="C:/Users/qt/work/build/qt-creator/src/plugins/coreplugin/icore.h" lineno="118" documented="true" meta="plain" virtual="non" const="false" static="true" final="false" override="false" type="QWidget *" signature="QWidget * currentContextWidget()"/>
                <function name="dialogParent" fullname="Core::ICore::dialogParent" href="core-icore.html#dialogParent" status="active" access="public" location="icore.h" filepath="C:/Users/qt/work/build/qt-creator/src/plugins/coreplugin/icore.h" lineno="112" documented="true" meta="plain" virtual="non" const="false" static="true" final="false" override="false" type="QWidget *" signature="QWidget * dialogParent()"/>
                <function name="infoBar" fullname="Core::ICore::infoBar" href="core-icore.html#infoBar" status="active" access="public" location="icore.h" filepath="C:/Users/qt/work/build/qt-creator/src/plugins/coreplugin/icore.h" lineno="113" documented="true" meta="plain" virtual="non" const="false" static="true" final="false" override="false" type="Utils::InfoBar *" signature="Utils::InfoBar * infoBar()"/>
                <function name="installerResourcePath" fullname="Core::ICore::installerResourcePath" href="core-icore.html#installerResourcePath" status="active" access="public" location="icore.h" filepath="C:/Users/qt/work/build/qt-creator/src/plugins/coreplugin/icore.h" lineno="103" documented="true" meta="plain" virtual="non" const="false" static="true" final="false" override="false" type="Utils::FilePath" signature="Utils::FilePath installerResourcePath(const QString &amp;rel)">
                    <parameter type="const QString &amp;" name="rel" default="{}"/>
                </function>
                <function name="instance" fullname="Core::ICore::instance" href="core-icore.html#instance" status="active" access="public" location="icore.h" filepath="C:/Users/qt/work/build/qt-creator/src/plugins/coreplugin/icore.h" lineno="77" documented="true" meta="plain" virtual="non" const="false" static="true" final="false" override="false" type="Core::ICore *" signature="Core::ICore * instance()"/>
                <function name="isNewItemDialogRunning" fullname="Core::ICore::isNewItemDialogRunning" href="core-icore.html#isNewItemDialogRunning" status="active" access="public" location="icore.h" filepath="C:/Users/qt/work/build/qt-creator/src/plugins/coreplugin/icore.h" lineno="79" documented="true" meta="plain" virtual="non" const="false" static="true" final="false" override="false" type="bool" signature="bool isNewItemDialogRunning()"/>
                <function name="libexecPath" fullname="Core::ICore::libexecPath" href="core-icore.html#libexecPath" status="active" access="public" location="icore.h" filepath="C:/Users/qt/work/build/qt-creator/src/plugins/coreplugin/icore.h" lineno="104" documented="true" meta="plain" virtual="non" const="false" static="true" final="false" override="false" type="Utils::FilePath" signature="Utils::FilePath libexecPath(const QString &amp;rel)">
                    <parameter type="const QString &amp;" name="rel" default="{}"/>
                </function>
                <function name="mainWindow" fullname="Core::ICore::mainWindow" href="core-icore.html#mainWindow" status="active" access="public" location="icore.h" filepath="C:/Users/qt/work/build/qt-creator/src/plugins/coreplugin/icore.h" lineno="111" documented="true" meta="plain" virtual="non" const="false" static="true" final="false" override="false" type="QMainWindow *" signature="QMainWindow * mainWindow()"/>
                <function name="msgShowOptionsDialog" fullname="Core::ICore::msgShowOptionsDialog" href="core-icore.html#msgShowOptionsDialog" status="active" access="public" location="icore.h" filepath="C:/Users/qt/work/build/qt-creator/src/plugins/coreplugin/icore.h" lineno="87" documented="true" meta="plain" virtual="non" const="false" static="true" final="false" override="false" type="QString" signature="QString msgShowOptionsDialog()"/>
                <function name="msgShowOptionsDialogToolTip" fullname="Core::ICore::msgShowOptionsDialogToolTip" href="core-icore.html#msgShowOptionsDialogToolTip" status="active" access="public" location="icore.h" filepath="C:/Users/qt/work/build/qt-creator/src/plugins/coreplugin/icore.h" lineno="88" documented="true" meta="plain" virtual="non" const="false" static="true" final="false" override="false" type="QString" signature="QString msgShowOptionsDialogToolTip()"/>
                <function name="newItemDialog" fullname="Core::ICore::newItemDialog" href="core-icore.html#newItemDialog" status="active" access="public" location="icore.h" filepath="C:/Users/qt/work/build/qt-creator/src/plugins/coreplugin/icore.h" lineno="80" documented="true" meta="plain" virtual="non" const="false" static="true" final="false" override="false" type="QWidget *" signature="QWidget * newItemDialog()"/>
                <function name="openFiles" fullname="Core::ICore::openFiles" href="core-icore.html#openFiles" status="active" access="public" location="icore.h" filepath="C:/Users/qt/work/build/qt-creator/src/plugins/coreplugin/icore.h" lineno="138" documented="true" meta="plain" virtual="non" const="false" static="true" final="false" override="false" type="void" signature="void openFiles(const Utils::FilePaths &amp;filePaths, Core::ICore::OpenFilesFlags flags)">
                    <parameter type="const Utils::FilePaths &amp;" name="filePaths" default=""/>
                    <parameter type="Core::ICore::OpenFilesFlags" name="flags" default="None"/>
                </function>
                <function name="printer" fullname="Core::ICore::printer" href="core-icore.html#printer" status="active" access="public" location="icore.h" filepath="C:/Users/qt/work/build/qt-creator/src/plugins/coreplugin/icore.h" lineno="97" documented="true" meta="plain" virtual="non" const="false" static="true" final="false" override="false" type="QPrinter *" signature="QPrinter * printer()"/>
                <function name="raiseWindow" fullname="Core::ICore::raiseWindow" href="core-icore.html#raiseWindow" status="active" access="public" location="icore.h" filepath="C:/Users/qt/work/build/qt-creator/src/plugins/coreplugin/icore.h" lineno="115" documented="true" meta="plain" virtual="non" const="false" static="true" final="false" override="false" type="void" signature="void raiseWindow(QWidget *widget)">
                    <parameter type="QWidget *" name="widget" default=""/>
                </function>
                <function name="registerWindow" fullname="Core::ICore::registerWindow" href="core-icore.html#registerWindow" status="active" access="public" location="icore.h" filepath="C:/Users/qt/work/build/qt-creator/src/plugins/coreplugin/icore.h" lineno="128" documented="true" meta="plain" virtual="non" const="false" static="true" final="false" override="false" type="void" signature="void registerWindow(QWidget *window, const Core::Context &amp;context)">
                    <parameter type="QWidget *" name="window" default=""/>
                    <parameter type="const Core::Context &amp;" name="context" default=""/>
                </function>
                <function name="removeAdditionalContext" fullname="Core::ICore::removeAdditionalContext" href="core-icore.html#removeAdditionalContext" status="active" access="public" location="icore.h" filepath="C:/Users/qt/work/build/qt-creator/src/plugins/coreplugin/icore.h" lineno="124" documented="true" meta="plain" virtual="non" const="false" static="true" final="false" override="false" type="void" signature="void removeAdditionalContext(const Core::Context &amp;context)">
                    <parameter type="const Core::Context &amp;" name="context" default=""/>
                </function>
                <function name="removeContextObject" fullname="Core::ICore::removeContextObject" href="core-icore.html#removeContextObject" status="active" access="public" location="icore.h" filepath="C:/Users/qt/work/build/qt-creator/src/plugins/coreplugin/icore.h" lineno="126" documented="true" meta="plain" virtual="non" const="false" static="true" final="false" override="false" type="void" signature="void removeContextObject(Core::IContext *context)">
                    <parameter type="Core::IContext *" name="context" default=""/>
                </function>
                <function name="resourcePath" fullname="Core::ICore::resourcePath" href="core-icore.html#resourcePath" status="active" access="public" location="icore.h" filepath="C:/Users/qt/work/build/qt-creator/src/plugins/coreplugin/icore.h" lineno="100" documented="true" meta="plain" virtual="non" const="false" static="true" final="false" override="false" type="Utils::FilePath" signature="Utils::FilePath resourcePath(const QString &amp;rel)">
                    <parameter type="const QString &amp;" name="rel" default="{}"/>
                </function>
                <function name="restart" fullname="Core::ICore::restart" href="core-icore.html#restart" status="active" access="public" location="icore.h" filepath="C:/Users/qt/work/build/qt-creator/src/plugins/coreplugin/icore.h" lineno="142" documented="true" meta="plain" virtual="non" const="false" static="true" final="false" override="false" type="void" signature="void restart()"/>
                <function name="saveSettingsRequested" fullname="Core::ICore::saveSettingsRequested" href="core-icore.html#saveSettingsRequested" status="active" access="public" location="icore.h" filepath="C:/Users/qt/work/build/qt-creator/src/plugins/coreplugin/icore.h" lineno="155" documented="true" meta="signal" virtual="non" const="false" static="false" final="false" override="false" type="void" signature="void saveSettingsRequested(Core::ICore::SaveSettingsReason reason)">
                    <parameter type="Core::ICore::SaveSettingsReason" name="reason" default=""/>
                </function>
                <function name="settings" fullname="Core::ICore::settings" href="core-icore.html#settings" status="active" access="public" location="icore.h" filepath="C:/Users/qt/work/build/qt-creator/src/plugins/coreplugin/icore.h" lineno="95" documented="true" meta="plain" virtual="non" const="false" static="true" final="false" override="false" type="Utils::QtcSettings *" signature="Utils::QtcSettings * settings(QSettings::Scope scope)">
                    <parameter type="QSettings::Scope" name="scope" default="QSettings::UserScope"/>
                </function>
                <function name="settingsDatabase" fullname="Core::ICore::settingsDatabase" href="core-icore.html#settingsDatabase" status="active" access="public" location="icore.h" filepath="C:/Users/qt/work/build/qt-creator/src/plugins/coreplugin/icore.h" lineno="96" documented="true" meta="plain" virtual="non" const="false" static="true" final="false" override="false" type="Core::SettingsDatabase *" signature="Core::SettingsDatabase * settingsDatabase()"/>
                <function name="showNewItemDialog" fullname="Core::ICore::showNewItemDialog" href="core-icore.html#showNewItemDialog" status="active" access="public" location="icore.h" filepath="C:/Users/qt/work/build/qt-creator/src/plugins/coreplugin/icore.h" lineno="81" documented="true" meta="plain" virtual="non" const="false" static="true" final="false" override="false" type="void" signature="void showNewItemDialog(const QString &amp;title, const QList&lt;Core::IWizardFactory *&gt; &amp;factories, const Utils::FilePath &amp;defaultLocation, const QVariantMap &amp;extraVariables)">
                    <parameter type="const QString &amp;" name="title" default=""/>
                    <parameter type="const QList&lt;Core::IWizardFactory *&gt; &amp;" name="factories" default=""/>
                    <parameter type="const Utils::FilePath &amp;" name="defaultLocation" default="{}"/>
                    <parameter type="const QVariantMap &amp;" name="extraVariables" default="{}"/>
                </function>
                <function name="showOptionsDialog" fullname="Core::ICore::showOptionsDialog" href="core-icore.html#showOptionsDialog" status="active" access="public" location="icore.h" filepath="C:/Users/qt/work/build/qt-creator/src/plugins/coreplugin/icore.h" lineno="86" documented="true" meta="plain" virtual="non" const="false" static="true" final="false" override="false" type="bool" signature="bool showOptionsDialog(const Utils::Id page, QWidget *parent)">
                    <parameter type="const Utils::Id" name="page" default=""/>
                    <parameter type="QWidget *" name="parent" default="nullptr"/>
                </function>
                <function name="showWarningWithOptions" fullname="Core::ICore::showWarningWithOptions" href="core-icore.html#showWarningWithOptions" status="active" access="public" location="icore.h" filepath="C:/Users/qt/work/build/qt-creator/src/plugins/coreplugin/icore.h" lineno="90" documented="true" meta="plain" virtual="non" const="false" static="true" final="false" override="false" type="bool" signature="bool showWarningWithOptions(const QString &amp;title, const QString &amp;text, const QString &amp;details, Utils::Id settingsId, QWidget *parent)">
                    <parameter type="const QString &amp;" name="title" default=""/>
                    <parameter type="const QString &amp;" name="text" default=""/>
                    <parameter type="const QString &amp;" name="details" default="QString()"/>
                    <parameter type="Utils::Id" name="settingsId" default="{}"/>
                    <parameter type="QWidget *" name="parent" default="nullptr"/>
                </function>
                <function name="updateAdditionalContexts" fullname="Core::ICore::updateAdditionalContexts" href="core-icore.html#updateAdditionalContexts" status="active" access="public" location="icore.h" filepath="C:/Users/qt/work/build/qt-creator/src/plugins/coreplugin/icore.h" lineno="120" documented="true" meta="plain" virtual="non" const="false" static="true" final="false" override="false" type="void" signature="void updateAdditionalContexts(const Core::Context &amp;remove, const Core::Context &amp;add, Core::ICore::ContextPriority priority)">
                    <parameter type="const Core::Context &amp;" name="remove" default=""/>
                    <parameter type="const Core::Context &amp;" name="add" default=""/>
                    <parameter type="Core::ICore::ContextPriority" name="priority" default="ContextPriority::Low"/>
                </function>
                <function name="userInterfaceLanguage" fullname="Core::ICore::userInterfaceLanguage" href="core-icore.html#userInterfaceLanguage" status="active" access="public" location="icore.h" filepath="C:/Users/qt/work/build/qt-creator/src/plugins/coreplugin/icore.h" lineno="98" documented="true" meta="plain" virtual="non" const="false" static="true" final="false" override="false" type="QString" signature="QString userInterfaceLanguage()"/>
                <function name="userResourcePath" fullname="Core::ICore::userResourcePath" href="core-icore.html#userResourcePath" status="active" access="public" location="icore.h" filepath="C:/Users/qt/work/build/qt-creator/src/plugins/coreplugin/icore.h" lineno="101" documented="true" meta="plain" virtual="non" const="false" static="true" final="false" override="false" type="Utils::FilePath" signature="Utils::FilePath userResourcePath(const QString &amp;rel)">
                    <parameter type="const QString &amp;" name="rel" default="{}"/>
                </function>
                <function name="versionString" fullname="Core::ICore::versionString" href="core-icore.html#versionString" status="active" access="public" location="icore.h" filepath="C:/Users/qt/work/build/qt-creator/src/plugins/coreplugin/icore.h" lineno="109" documented="true" meta="plain" virtual="non" const="false" static="true" final="false" override="false" type="QString" signature="QString versionString()"/>
                <enum name="ContextPriority" fullname="Core::ICore::ContextPriority" href="core-icore.html#ContextPriority-enum" status="active" access="public" location="icore.h" filepath="C:/Users/qt/work/build/qt-creator/src/plugins/coreplugin/icore.h" lineno="72" documented="true" scoped="true">
                    <value name="High" value="0"/>
                    <value name="Low" value="1"/>
                </enum>
            </class>
            <class name="IDocument" fullname="Core::IDocument" href="core-idocument.html" status="active" access="public" location="idocument.h" filepath="C:/Users/qt/work/build/qt-creator/src/plugins/coreplugin/editormanager/../idocument.h" lineno="46" documented="true" groups="mainclasses" bases="QObject" module="QtCreator" brief="Describes a document that can be saved and reloaded">
                <contents name="handling-external-modifications" title="Handling External Modifications" level="1"/>
                <contents name="editor-document" title="Editor Document" level="1"/>
                <function name="IDocument" fullname="Core::IDocument::IDocument" href="core-idocument.html#IDocument" status="active" access="public" location="idocument.h" filepath="C:/Users/qt/work/build/qt-creator/src/plugins/coreplugin/editormanager/../idocument.h" lineno="85" documented="true" meta="constructor" virtual="non" const="false" static="false" final="false" override="false" type="" signature="IDocument(QObject *parent)">
                    <parameter type="QObject *" name="parent" default="nullptr"/>
                </function>
                <function name="aboutToReload" fullname="Core::IDocument::aboutToReload" href="core-idocument.html#aboutToReload" status="active" access="public" location="idocument.h" filepath="C:/Users/qt/work/build/qt-creator/src/plugins/coreplugin/editormanager/../idocument.h" lineno="146" documented="true" meta="signal" virtual="non" const="false" static="false" final="false" override="false" type="void" signature="void aboutToReload()"/>
                <function name="changed" fullname="Core::IDocument::changed" href="core-idocument.html#changed" status="active" access="public" location="idocument.h" filepath="C:/Users/qt/work/build/qt-creator/src/plugins/coreplugin/editormanager/../idocument.h" lineno="139" documented="true" meta="signal" virtual="non" const="false" static="false" final="false" override="false" type="void" signature="void changed()"/>
                <function name="checkPermissions" fullname="Core::IDocument::checkPermissions" href="core-idocument.html#checkPermissions" status="active" access="public" location="idocument.h" filepath="C:/Users/qt/work/build/qt-creator/src/plugins/coreplugin/editormanager/../idocument.h" lineno="126" documented="true" meta="plain" virtual="non" const="false" static="false" final="false" override="false" type="void" signature="void checkPermissions()"/>
                <function name="contents" fullname="Core::IDocument::contents" href="core-idocument.html#contents" status="active" access="public" location="idocument.h" filepath="C:/Users/qt/work/build/qt-creator/src/plugins/coreplugin/editormanager/../idocument.h" lineno="95" documented="true" meta="plain" virtual="virtual" const="true" static="false" final="false" override="false" type="QByteArray" signature="QByteArray contents() const"/>
                <function name="contentsChanged" fullname="Core::IDocument::contentsChanged" href="core-idocument.html#contentsChanged" status="active" access="public" location="idocument.h" filepath="C:/Users/qt/work/build/qt-creator/src/plugins/coreplugin/editormanager/../idocument.h" lineno="142" documented="true" meta="signal" virtual="non" const="false" static="false" final="false" override="false" type="void" signature="void contentsChanged()"/>
                <function name="displayName" fullname="Core::IDocument::displayName" href="core-idocument.html#displayName" status="active" access="public" location="idocument.h" filepath="C:/Users/qt/work/build/qt-creator/src/plugins/coreplugin/editormanager/../idocument.h" lineno="100" documented="true" meta="plain" virtual="non" const="true" static="false" final="false" override="false" type="QString" signature="QString displayName() const"/>
                <function name="fallbackSaveAsFileName" fullname="Core::IDocument::fallbackSaveAsFileName" href="core-idocument.html#fallbackSaveAsFileName" status="active" access="public" location="idocument.h" filepath="C:/Users/qt/work/build/qt-creator/src/plugins/coreplugin/editormanager/../idocument.h" lineno="112" documented="true" meta="plain" virtual="virtual" const="true" static="false" final="false" override="false" type="QString" signature="QString fallbackSaveAsFileName() const"/>
                <function name="fallbackSaveAsPath" fullname="Core::IDocument::fallbackSaveAsPath" href="core-idocument.html#fallbackSaveAsPath" status="active" access="public" location="idocument.h" filepath="C:/Users/qt/work/build/qt-creator/src/plugins/coreplugin/editormanager/../idocument.h" lineno="111" documented="true" meta="plain" virtual="virtual" const="true" static="false" final="false" override="false" type="Utils::FilePath" signature="Utils::FilePath fallbackSaveAsPath() const"/>
                <function name="filePath" fullname="Core::IDocument::filePath" href="core-idocument.html#filePath" status="active" access="public" location="idocument.h" filepath="C:/Users/qt/work/build/qt-creator/src/plugins/coreplugin/editormanager/../idocument.h" lineno="98" documented="true" meta="plain" virtual="non" const="true" static="false" final="false" override="false" type="const Utils::FilePath &amp;" signature="const Utils::FilePath &amp; filePath() const"/>
                <function name="filePathChanged" fullname="Core::IDocument::filePathChanged" href="core-idocument.html#filePathChanged" status="active" access="public" location="idocument.h" filepath="C:/Users/qt/work/build/qt-creator/src/plugins/coreplugin/editormanager/../idocument.h" lineno="149" documented="true" meta="signal" virtual="non" const="false" static="false" final="false" override="false" type="void" signature="void filePathChanged(const Utils::FilePath &amp;oldName, const Utils::FilePath &amp;newName)">
                    <parameter type="const Utils::FilePath &amp;" name="oldName" default=""/>
                    <parameter type="const Utils::FilePath &amp;" name="newName" default=""/>
                </function>
                <function name="id" fullname="Core::IDocument::id" href="core-idocument.html#id" status="active" access="public" location="idocument.h" filepath="C:/Users/qt/work/build/qt-creator/src/plugins/coreplugin/editormanager/../idocument.h" lineno="89" documented="true" meta="plain" virtual="non" const="true" static="false" final="false" override="false" type="Utils::Id" signature="Utils::Id id() const"/>
                <function name="infoBar" fullname="Core::IDocument::infoBar" href="core-idocument.html#infoBar" status="active" access="public" location="idocument.h" filepath="C:/Users/qt/work/build/qt-creator/src/plugins/coreplugin/editormanager/../idocument.h" lineno="135" documented="true" meta="plain" virtual="non" const="false" static="false" final="false" override="false" type="Utils::InfoBar *" signature="Utils::InfoBar * infoBar()"/>
                <function name="isFileReadOnly" fullname="Core::IDocument::isFileReadOnly" href="core-idocument.html#isFileReadOnly" status="active" access="public" location="idocument.h" filepath="C:/Users/qt/work/build/qt-creator/src/plugins/coreplugin/editormanager/../idocument.h" lineno="107" documented="true" meta="plain" virtual="non" const="true" static="false" final="false" override="false" type="bool" signature="bool isFileReadOnly() const"/>
                <function name="isModified" fullname="Core::IDocument::isModified" href="core-idocument.html#isModified" status="active" access="public" location="idocument.h" filepath="C:/Users/qt/work/build/qt-creator/src/plugins/coreplugin/editormanager/../idocument.h" lineno="118" documented="true" meta="plain" virtual="virtual" const="true" static="false" final="false" override="false" type="bool" signature="bool isModified() const"/>
                <function name="isSaveAsAllowed" fullname="Core::IDocument::isSaveAsAllowed" href="core-idocument.html#isSaveAsAllowed" status="active" access="public" location="idocument.h" filepath="C:/Users/qt/work/build/qt-creator/src/plugins/coreplugin/editormanager/../idocument.h" lineno="119" documented="true" meta="plain" virtual="virtual" const="true" static="false" final="false" override="false" type="bool" signature="bool isSaveAsAllowed() const"/>
                <function name="isSuspendAllowed" fullname="Core::IDocument::isSuspendAllowed" href="core-idocument.html#isSuspendAllowed" status="active" access="public" location="idocument.h" filepath="C:/Users/qt/work/build/qt-creator/src/plugins/coreplugin/editormanager/../idocument.h" lineno="120" documented="true" meta="plain" virtual="non" const="true" static="false" final="false" override="false" type="bool" signature="bool isSuspendAllowed() const"/>
                <function name="isTemporary" fullname="Core::IDocument::isTemporary" href="core-idocument.html#isTemporary" status="active" access="public" location="idocument.h" filepath="C:/Users/qt/work/build/qt-creator/src/plugins/coreplugin/editormanager/../idocument.h" lineno="108" documented="true" meta="plain" virtual="non" const="true" static="false" final="false" override="false" type="bool" signature="bool isTemporary() const"/>
                <function name="mimeType" fullname="Core::IDocument::mimeType" href="core-idocument.html#mimeType" status="active" access="public" location="idocument.h" filepath="C:/Users/qt/work/build/qt-creator/src/plugins/coreplugin/editormanager/../idocument.h" lineno="114" documented="true" meta="plain" virtual="non" const="true" static="false" final="false" override="false" type="QString" signature="QString mimeType() const"/>
                <function name="mimeTypeChanged" fullname="Core::IDocument::mimeTypeChanged" href="core-idocument.html#mimeTypeChanged" status="active" access="public" location="idocument.h" filepath="C:/Users/qt/work/build/qt-creator/src/plugins/coreplugin/editormanager/../idocument.h" lineno="144" documented="true" meta="signal" virtual="non" const="false" static="false" final="false" override="false" type="void" signature="void mimeTypeChanged()"/>
                <function name="open" fullname="Core::IDocument::open" href="core-idocument.html#open" status="active" access="public" location="idocument.h" filepath="C:/Users/qt/work/build/qt-creator/src/plugins/coreplugin/editormanager/../idocument.h" lineno="91" documented="true" meta="plain" virtual="virtual" const="false" static="false" final="false" override="false" type="Core::IDocument::OpenResult" signature="Core::IDocument::OpenResult open(QString *errorString, const Utils::FilePath &amp;filePath, const Utils::FilePath &amp;realFilePath)">
                    <parameter type="QString *" name="errorString" default=""/>
                    <parameter type="const Utils::FilePath &amp;" name="filePath" default=""/>
                    <parameter type="const Utils::FilePath &amp;" name="realFilePath" default=""/>
                </function>
                <function name="preferredDisplayName" fullname="Core::IDocument::preferredDisplayName" href="core-idocument.html#preferredDisplayName" status="active" access="public" location="idocument.h" filepath="C:/Users/qt/work/build/qt-creator/src/plugins/coreplugin/editormanager/../idocument.h" lineno="102" documented="true" meta="plain" virtual="non" const="true" static="false" final="false" override="false" type="QString" signature="QString preferredDisplayName() const"/>
                <function name="reload" fullname="Core::IDocument::reload" href="core-idocument.html#reload" status="active" access="public" location="idocument.h" filepath="C:/Users/qt/work/build/qt-creator/src/plugins/coreplugin/editormanager/../idocument.h" lineno="124" documented="true" meta="plain" virtual="virtual" const="false" static="false" final="false" override="false" type="bool" signature="bool reload(QString *errorString, Core::IDocument::ReloadFlag flag, Core::IDocument::ChangeType type)">
                    <parameter type="QString *" name="errorString" default=""/>
                    <parameter type="Core::IDocument::ReloadFlag" name="flag" default=""/>
                    <parameter type="Core::IDocument::ChangeType" name="type" default=""/>
                </function>
                <function name="reloadBehavior" fullname="Core::IDocument::reloadBehavior" href="core-idocument.html#reloadBehavior" status="active" access="public" location="idocument.h" filepath="C:/Users/qt/work/build/qt-creator/src/plugins/coreplugin/editormanager/../idocument.h" lineno="123" documented="true" meta="plain" virtual="virtual" const="true" static="false" final="false" override="false" type="Core::IDocument::ReloadBehavior" signature="Core::IDocument::ReloadBehavior reloadBehavior(Core::IDocument::ChangeTrigger trigger, Core::IDocument::ChangeType type) const">
                    <parameter type="Core::IDocument::ChangeTrigger" name="trigger" default=""/>
                    <parameter type="Core::IDocument::ChangeType" name="type" default=""/>
                </function>
                <function name="reloadFinished" fullname="Core::IDocument::reloadFinished" href="core-idocument.html#reloadFinished" status="active" access="public" location="idocument.h" filepath="C:/Users/qt/work/build/qt-creator/src/plugins/coreplugin/editormanager/../idocument.h" lineno="147" documented="true" meta="signal" virtual="non" const="false" static="false" final="false" override="false" type="void" signature="void reloadFinished(bool success)">
                    <parameter type="bool" name="success" default=""/>
                </function>
                <function name="save" fullname="Core::IDocument::save" href="core-idocument.html#save" status="active" access="public" location="idocument.h" filepath="C:/Users/qt/work/build/qt-creator/src/plugins/coreplugin/editormanager/../idocument.h" lineno="93" documented="true" meta="plain" virtual="virtual" const="false" static="false" final="false" override="false" type="bool" signature="bool save(QString *errorString, const Utils::FilePath &amp;filePath, bool autoSave)">
                    <parameter type="QString *" name="errorString" default=""/>
                    <parameter type="const Utils::FilePath &amp;" name="filePath" default="Utils::FilePath()"/>
                    <parameter type="bool" name="autoSave" default="false"/>
                </function>
                <function name="setContents" fullname="Core::IDocument::setContents" href="core-idocument.html#setContents" status="active" access="public" location="idocument.h" filepath="C:/Users/qt/work/build/qt-creator/src/plugins/coreplugin/editormanager/../idocument.h" lineno="96" documented="true" meta="plain" virtual="virtual" const="false" static="false" final="false" override="false" type="bool" signature="bool setContents(const QByteArray &amp;contents)">
                    <parameter type="const QByteArray &amp;" name="contents" default=""/>
                </function>
                <function name="setFilePath" fullname="Core::IDocument::setFilePath" href="core-idocument.html#setFilePath" status="active" access="public" location="idocument.h" filepath="C:/Users/qt/work/build/qt-creator/src/plugins/coreplugin/editormanager/../idocument.h" lineno="99" documented="true" meta="plain" virtual="virtual" const="false" static="false" final="false" override="false" type="void" signature="void setFilePath(const Utils::FilePath &amp;filePath)">
                    <parameter type="const Utils::FilePath &amp;" name="filePath" default=""/>
                </function>
                <function name="setId" fullname="Core::IDocument::setId" href="core-idocument.html#setId" status="active" access="public" location="idocument.h" filepath="C:/Users/qt/work/build/qt-creator/src/plugins/coreplugin/editormanager/../idocument.h" lineno="88" documented="true" meta="plain" virtual="non" const="false" static="false" final="false" override="false" type="void" signature="void setId(Utils::Id id)">
                    <parameter type="Utils::Id" name="id" default=""/>
                </function>
                <function name="setMimeType" fullname="Core::IDocument::setMimeType" href="core-idocument.html#setMimeType" status="active" access="public" location="idocument.h" filepath="C:/Users/qt/work/build/qt-creator/src/plugins/coreplugin/editormanager/../idocument.h" lineno="115" documented="true" meta="plain" virtual="non" const="false" static="false" final="false" override="false" type="void" signature="void setMimeType(const QString &amp;mimeType)">
                    <parameter type="const QString &amp;" name="mimeType" default=""/>
                </function>
                <function name="setPreferredDisplayName" fullname="Core::IDocument::setPreferredDisplayName" href="core-idocument.html#setPreferredDisplayName" status="active" access="public" location="idocument.h" filepath="C:/Users/qt/work/build/qt-creator/src/plugins/coreplugin/editormanager/../idocument.h" lineno="101" documented="true" meta="plain" virtual="non" const="false" static="false" final="false" override="false" type="void" signature="void setPreferredDisplayName(const QString &amp;name)">
                    <parameter type="const QString &amp;" name="name" default=""/>
                </function>
                <function name="setSuspendAllowed" fullname="Core::IDocument::setSuspendAllowed" href="core-idocument.html#setSuspendAllowed" status="active" access="public" location="idocument.h" filepath="C:/Users/qt/work/build/qt-creator/src/plugins/coreplugin/editormanager/../idocument.h" lineno="121" documented="true" meta="plain" virtual="non" const="false" static="false" final="false" override="false" type="void" signature="void setSuspendAllowed(bool value)">
                    <parameter type="bool" name="value" default=""/>
                </function>
                <function name="setTemporary" fullname="Core::IDocument::setTemporary" href="core-idocument.html#setTemporary" status="active" access="public" location="idocument.h" filepath="C:/Users/qt/work/build/qt-creator/src/plugins/coreplugin/editormanager/../idocument.h" lineno="109" documented="true" meta="plain" virtual="non" const="false" static="false" final="false" override="false" type="void" signature="void setTemporary(bool temporary)">
                    <parameter type="bool" name="temporary" default=""/>
                </function>
                <function name="shouldAutoSave" fullname="Core::IDocument::shouldAutoSave" href="core-idocument.html#shouldAutoSave" status="active" access="public" location="idocument.h" filepath="C:/Users/qt/work/build/qt-creator/src/plugins/coreplugin/editormanager/../idocument.h" lineno="117" documented="true" meta="plain" virtual="virtual" const="true" static="false" final="false" override="false" type="bool" signature="bool shouldAutoSave() const"/>
                <function name="~IDocument" fullname="Core::IDocument::~IDocument" href="core-idocument.html#dtor.IDocument" status="active" access="public" location="idocument.h" filepath="C:/Users/qt/work/build/qt-creator/src/plugins/coreplugin/editormanager/../idocument.h" lineno="86" documented="true" meta="destructor" virtual="virtual" const="false" static="false" final="false" override="true" type="" signature="~IDocument() override"/>
                <enum name="ChangeTrigger" fullname="Core::IDocument::ChangeTrigger" href="core-idocument.html#ChangeTrigger-enum" status="active" access="public" location="idocument.h" filepath="C:/Users/qt/work/build/qt-creator/src/plugins/coreplugin/editormanager/../idocument.h" lineno="65" documented="true">
                    <value name="TriggerInternal" value="0"/>
                    <value name="TriggerExternal" value="1"/>
                </enum>
                <enum name="ChangeType" fullname="Core::IDocument::ChangeType" href="core-idocument.html#ChangeType-enum" status="active" access="public" location="idocument.h" filepath="C:/Users/qt/work/build/qt-creator/src/plugins/coreplugin/editormanager/../idocument.h" lineno="70" documented="true">
                    <value name="TypeContents" value="0"/>
                    <value name="TypeRemoved" value="1"/>
                </enum>
                <enum name="OpenResult" fullname="Core::IDocument::OpenResult" href="core-idocument.html#OpenResult-enum" status="active" access="public" location="idocument.h" filepath="C:/Users/qt/work/build/qt-creator/src/plugins/coreplugin/editormanager/../idocument.h" lineno="51" documented="true" scoped="true">
                    <value name="Success" value="0"/>
                    <value name="ReadError" value="1"/>
                    <value name="CannotHandle" value="2"/>
                </enum>
                <enum name="ReloadFlag" fullname="Core::IDocument::ReloadFlag" href="core-idocument.html#ReloadFlag-enum" status="active" access="public" location="idocument.h" filepath="C:/Users/qt/work/build/qt-creator/src/plugins/coreplugin/editormanager/../idocument.h" lineno="80" documented="true">
                    <value name="FlagReload" value="0"/>
                    <value name="FlagIgnore" value="1"/>
                </enum>
            </class>
            <class name="IEditor" fullname="Core::IEditor" href="core-ieditor.html" status="active" access="public" location="ieditor.h" filepath="C:/Users/qt/work/build/qt-creator/src/plugins/coreplugin/editormanager/ieditor.h" lineno="37" documented="true" bases="Core::IContext" module="QtCreator" brief="Interface for editing an open document in Qt Creator">
                <function name="IEditor" fullname="Core::IEditor::IEditor" href="core-ieditor.html#IEditor" status="active" access="public" location="ieditor.h" filepath="C:/Users/qt/work/build/qt-creator/src/plugins/coreplugin/editormanager/ieditor.h" lineno="42" documented="true" meta="constructor" virtual="non" const="false" static="false" final="false" override="false" type="" signature="IEditor()"/>
                <function name="currentColumn" fullname="Core::IEditor::currentColumn" href="core-ieditor.html#currentColumn" status="active" access="public" location="ieditor.h" filepath="C:/Users/qt/work/build/qt-creator/src/plugins/coreplugin/editormanager/ieditor.h" lineno="55" documented="true" meta="plain" virtual="virtual" const="true" static="false" final="false" override="false" type="int" signature="int currentColumn() const"/>
                <function name="currentLine" fullname="Core::IEditor::currentLine" href="core-ieditor.html#currentLine" status="active" access="public" location="ieditor.h" filepath="C:/Users/qt/work/build/qt-creator/src/plugins/coreplugin/editormanager/ieditor.h" lineno="54" documented="true" meta="plain" virtual="virtual" const="true" static="false" final="false" override="false" type="int" signature="int currentLine() const"/>
                <function name="document" fullname="Core::IEditor::document" href="core-ieditor.html#document" status="active" access="public" location="ieditor.h" filepath="C:/Users/qt/work/build/qt-creator/src/plugins/coreplugin/editormanager/ieditor.h" lineno="47" documented="true" meta="plain" virtual="pure" const="true" static="false" final="false" override="false" type="Core::IDocument *" signature="Core::IDocument * document() const = 0"/>
                <function name="duplicate" fullname="Core::IEditor::duplicate" href="core-ieditor.html#duplicate" status="active" access="public" location="ieditor.h" filepath="C:/Users/qt/work/build/qt-creator/src/plugins/coreplugin/editormanager/ieditor.h" lineno="49" documented="true" meta="plain" virtual="virtual" const="false" static="false" final="false" override="false" type="Core::IEditor *" signature="Core::IEditor * duplicate()"/>
                <function name="duplicateSupported" fullname="Core::IEditor::duplicateSupported" href="core-ieditor.html#duplicateSupported" status="active" access="public" location="ieditor.h" filepath="C:/Users/qt/work/build/qt-creator/src/plugins/coreplugin/editormanager/ieditor.h" lineno="44" documented="true" meta="plain" virtual="non" const="true" static="false" final="false" override="false" type="bool" signature="bool duplicateSupported() const"/>
                <function name="gotoLine" fullname="Core::IEditor::gotoLine" href="core-ieditor.html#gotoLine" status="active" access="public" location="ieditor.h" filepath="C:/Users/qt/work/build/qt-creator/src/plugins/coreplugin/editormanager/ieditor.h" lineno="56" documented="true" meta="plain" virtual="virtual" const="false" static="false" final="false" override="false" type="void" signature="void gotoLine(int line, int column, bool centerLine)">
                    <parameter type="int" name="line" default=""/>
                    <parameter type="int" name="column" default="0"/>
                    <parameter type="bool" name="centerLine" default="true"/>
                </function>
                <function name="isDesignModePreferred" fullname="Core::IEditor::isDesignModePreferred" href="core-ieditor.html#isDesignModePreferred" status="active" access="public" location="ieditor.h" filepath="C:/Users/qt/work/build/qt-creator/src/plugins/coreplugin/editormanager/ieditor.h" lineno="60" documented="true" meta="plain" virtual="virtual" const="true" static="false" final="false" override="false" type="bool" signature="bool isDesignModePreferred() const"/>
                <function name="restoreState" fullname="Core::IEditor::restoreState" href="core-ieditor.html#restoreState" status="active" access="public" location="ieditor.h" filepath="C:/Users/qt/work/build/qt-creator/src/plugins/coreplugin/editormanager/ieditor.h" lineno="52" documented="true" meta="plain" virtual="virtual" const="false" static="false" final="false" override="false" type="void" signature="void restoreState(const QByteArray &amp;state)">
                    <parameter type="const QByteArray &amp;" name="state" default=""/>
                </function>
                <function name="saveState" fullname="Core::IEditor::saveState" href="core-ieditor.html#saveState" status="active" access="public" location="ieditor.h" filepath="C:/Users/qt/work/build/qt-creator/src/plugins/coreplugin/editormanager/ieditor.h" lineno="51" documented="true" meta="plain" virtual="virtual" const="true" static="false" final="false" override="false" type="QByteArray" signature="QByteArray saveState() const"/>
                <function name="setDuplicateSupported" fullname="Core::IEditor::setDuplicateSupported" href="core-ieditor.html#setDuplicateSupported" status="active" access="public" location="ieditor.h" filepath="C:/Users/qt/work/build/qt-creator/src/plugins/coreplugin/editormanager/ieditor.h" lineno="45" documented="true" meta="plain" virtual="non" const="false" static="false" final="false" override="false" type="void" signature="void setDuplicateSupported(bool duplicatesSupported)">
                    <parameter type="bool" name="duplicatesSupported" default=""/>
                </function>
                <function name="toolBar" fullname="Core::IEditor::toolBar" href="core-ieditor.html#toolBar" status="active" access="public" location="ieditor.h" filepath="C:/Users/qt/work/build/qt-creator/src/plugins/coreplugin/editormanager/ieditor.h" lineno="58" documented="true" meta="plain" virtual="pure" const="false" static="false" final="false" override="false" type="QWidget *" signature="QWidget * toolBar() = 0"/>
            </class>
            <class name="IEditorFactory" fullname="Core::IEditorFactory" href="core-ieditorfactory.html" status="active" access="public" location="ieditorfactory.h" filepath="C:/Users/qt/work/build/qt-creator/src/plugins/coreplugin/editormanager/ieditorfactory.h" lineno="47" documented="true" bases="QObject" module="QtCreator" brief="Creates suitable editors for documents according to their MIME type">
                <function name="IEditorFactory" fullname="Core::IEditorFactory::IEditorFactory" href="core-ieditorfactory.html#IEditorFactory" status="active" access="public" location="ieditorfactory.h" filepath="C:/Users/qt/work/build/qt-creator/src/plugins/coreplugin/editormanager/ieditorfactory.h" lineno="52" documented="true" meta="constructor" virtual="non" const="false" static="false" final="false" override="false" type="" signature="IEditorFactory()"/>
                <function name="addMimeType" fullname="Core::IEditorFactory::addMimeType" href="core-ieditorfactory.html#addMimeType" status="active" access="protected" location="ieditorfactory.h" filepath="C:/Users/qt/work/build/qt-creator/src/plugins/coreplugin/editormanager/ieditorfactory.h" lineno="69" documented="true" meta="plain" virtual="non" const="false" static="false" final="false" override="false" type="void" signature="void addMimeType(const QString &amp;mimeType)">
                    <parameter type="const QString &amp;" name="mimeType" default=""/>
                </function>
                <function name="createEditor" fullname="Core::IEditorFactory::createEditor" href="core-ieditorfactory.html#createEditor" status="active" access="public" location="ieditorfactory.h" filepath="C:/Users/qt/work/build/qt-creator/src/plugins/coreplugin/editormanager/ieditorfactory.h" lineno="63" documented="true" meta="plain" virtual="non" const="true" static="false" final="false" override="false" type="Core::IEditor *" signature="Core::IEditor * createEditor() const"/>
                <function name="defaultEditorFactories" fullname="Core::IEditorFactory::defaultEditorFactories" href="core-ieditorfactory.html#defaultEditorFactories" status="active" access="public" location="ieditorfactory.h" filepath="C:/Users/qt/work/build/qt-creator/src/plugins/coreplugin/editormanager/ieditorfactory.h" lineno="56" documented="true" meta="plain" virtual="non" const="false" static="true" final="false" override="false" type="const Core::EditorFactoryList" signature="const Core::EditorFactoryList defaultEditorFactories(const Utils::MimeType &amp;mimeType)">
                    <parameter type="const Utils::MimeType &amp;" name="mimeType" default=""/>
                </function>
                <function name="displayName" fullname="Core::IEditorFactory::displayName" href="core-ieditorfactory.html#displayName" status="active" access="public" location="ieditorfactory.h" filepath="C:/Users/qt/work/build/qt-creator/src/plugins/coreplugin/editormanager/ieditorfactory.h" lineno="60" documented="true" meta="plain" virtual="non" const="true" static="false" final="false" override="false" type="QString" signature="QString displayName() const"/>
                <function name="id" fullname="Core::IEditorFactory::id" href="core-ieditorfactory.html#id" status="active" access="public" location="ieditorfactory.h" filepath="C:/Users/qt/work/build/qt-creator/src/plugins/coreplugin/editormanager/ieditorfactory.h" lineno="59" documented="true" meta="plain" virtual="non" const="true" static="false" final="false" override="false" type="Utils::Id" signature="Utils::Id id() const"/>
                <function name="mimeTypes" fullname="Core::IEditorFactory::mimeTypes" href="core-ieditorfactory.html#mimeTypes" status="active" access="public" location="ieditorfactory.h" filepath="C:/Users/qt/work/build/qt-creator/src/plugins/coreplugin/editormanager/ieditorfactory.h" lineno="61" documented="true" meta="plain" virtual="non" const="true" static="false" final="false" override="false" type="QStringList" signature="QStringList mimeTypes() const"/>
                <function name="preferredEditorFactories" fullname="Core::IEditorFactory::preferredEditorFactories" href="core-ieditorfactory.html#preferredEditorFactories" status="active" access="public" location="ieditorfactory.h" filepath="C:/Users/qt/work/build/qt-creator/src/plugins/coreplugin/editormanager/ieditorfactory.h" lineno="57" documented="true" meta="plain" virtual="non" const="false" static="true" final="false" override="false" type="const Core::EditorFactoryList" signature="const Core::EditorFactoryList preferredEditorFactories(const Utils::FilePath &amp;filePath)">
                    <parameter type="const Utils::FilePath &amp;" name="filePath" default=""/>
                </function>
                <function name="setDisplayName" fullname="Core::IEditorFactory::setDisplayName" href="core-ieditorfactory.html#setDisplayName" status="active" access="protected" location="ieditorfactory.h" filepath="C:/Users/qt/work/build/qt-creator/src/plugins/coreplugin/editormanager/ieditorfactory.h" lineno="67" documented="true" meta="plain" virtual="non" const="false" static="false" final="false" override="false" type="void" signature="void setDisplayName(const QString &amp;displayName)">
                    <parameter type="const QString &amp;" name="displayName" default=""/>
                </function>
                <function name="setEditorCreator" fullname="Core::IEditorFactory::setEditorCreator" href="core-ieditorfactory.html#setEditorCreator" status="active" access="protected" location="ieditorfactory.h" filepath="C:/Users/qt/work/build/qt-creator/src/plugins/coreplugin/editormanager/ieditorfactory.h" lineno="70" documented="true" meta="plain" virtual="non" const="false" static="false" final="false" override="false" type="void" signature="void setEditorCreator(const std::function&lt;IEditor *()&gt; &amp;creator)">
                    <parameter type="const std::function&lt;IEditor *()&gt; &amp;" name="creator" default=""/>
                </function>
                <function name="setId" fullname="Core::IEditorFactory::setId" href="core-ieditorfactory.html#setId" status="active" access="protected" location="ieditorfactory.h" filepath="C:/Users/qt/work/build/qt-creator/src/plugins/coreplugin/editormanager/ieditorfactory.h" lineno="66" documented="true" meta="plain" virtual="non" const="false" static="false" final="false" override="false" type="void" signature="void setId(Utils::Id id)">
                    <parameter type="Utils::Id" name="id" default=""/>
                </function>
                <function name="setMimeTypes" fullname="Core::IEditorFactory::setMimeTypes" href="core-ieditorfactory.html#setMimeTypes" status="active" access="protected" location="ieditorfactory.h" filepath="C:/Users/qt/work/build/qt-creator/src/plugins/coreplugin/editormanager/ieditorfactory.h" lineno="68" documented="true" meta="plain" virtual="non" const="false" static="false" final="false" override="false" type="void" signature="void setMimeTypes(const QStringList &amp;mimeTypes)">
                    <parameter type="const QStringList &amp;" name="mimeTypes" default=""/>
                </function>
            </class>
            <class name="IExternalEditor" fullname="Core::IExternalEditor" href="core-iexternaleditor.html" status="active" access="public" location="iexternaleditor.h" filepath="C:/Users/qt/work/build/qt-creator/src/plugins/coreplugin/editormanager/iexternaleditor.h" lineno="43" documented="true" groups="mainclasses" bases="QObject" module="QtCreator" brief="Enables registering an external editor in the Open With dialog">
                <function name="allExternalEditors" fullname="Core::IExternalEditor::allExternalEditors" href="core-iexternaleditor.html#allExternalEditors" status="active" access="public" location="iexternaleditor.h" filepath="C:/Users/qt/work/build/qt-creator/src/plugins/coreplugin/editormanager/iexternaleditor.h" lineno="51" documented="true" meta="plain" virtual="non" const="false" static="true" final="false" override="false" type="const Core::ExternalEditorList" signature="const Core::ExternalEditorList allExternalEditors()"/>
                <function name="displayName" fullname="Core::IExternalEditor::displayName" href="core-iexternaleditor.html#displayName" status="active" access="public" location="iexternaleditor.h" filepath="C:/Users/qt/work/build/qt-creator/src/plugins/coreplugin/editormanager/iexternaleditor.h" lineno="56" documented="true" meta="plain" virtual="pure" const="true" static="false" final="false" override="false" type="QString" signature="QString displayName() const = 0"/>
                <function name="externalEditors" fullname="Core::IExternalEditor::externalEditors" href="core-iexternaleditor.html#externalEditors" status="active" access="public" location="iexternaleditor.h" filepath="C:/Users/qt/work/build/qt-creator/src/plugins/coreplugin/editormanager/iexternaleditor.h" lineno="52" documented="true" meta="plain" virtual="non" const="false" static="true" final="false" override="false" type="const Core::ExternalEditorList" signature="const Core::ExternalEditorList externalEditors(const Utils::MimeType &amp;mimeType)">
                    <parameter type="const Utils::MimeType &amp;" name="mimeType" default=""/>
                </function>
                <function name="id" fullname="Core::IExternalEditor::id" href="core-iexternaleditor.html#id" status="active" access="public" location="iexternaleditor.h" filepath="C:/Users/qt/work/build/qt-creator/src/plugins/coreplugin/editormanager/iexternaleditor.h" lineno="55" documented="true" meta="plain" virtual="pure" const="true" static="false" final="false" override="false" type="Utils::Id" signature="Utils::Id id() const = 0"/>
                <function name="mimeTypes" fullname="Core::IExternalEditor::mimeTypes" href="core-iexternaleditor.html#mimeTypes" status="active" access="public" location="iexternaleditor.h" filepath="C:/Users/qt/work/build/qt-creator/src/plugins/coreplugin/editormanager/iexternaleditor.h" lineno="54" documented="true" meta="plain" virtual="pure" const="true" static="false" final="false" override="false" type="QStringList" signature="QStringList mimeTypes() const = 0"/>
                <function name="startEditor" fullname="Core::IExternalEditor::startEditor" href="core-iexternaleditor.html#startEditor" status="active" access="public" location="iexternaleditor.h" filepath="C:/Users/qt/work/build/qt-creator/src/plugins/coreplugin/editormanager/iexternaleditor.h" lineno="57" documented="true" meta="plain" virtual="pure" const="false" static="false" final="false" override="false" type="bool" signature="bool startEditor(const Utils::FilePath &amp;fileName, QString *errorMessage) = 0">
                    <parameter type="const Utils::FilePath &amp;" name="fileName" default=""/>
                    <parameter type="QString *" name="errorMessage" default=""/>
                </function>
            </class>
            <class name="IFeatureProvider" fullname="Core::IFeatureProvider" href="core-ifeatureprovider.html" status="active" access="public" location="featureprovider.h" filepath="C:/Users/qt/work/build/qt-creator/src/plugins/coreplugin/featureprovider.h" lineno="39" documented="true" groups="mainclasses" module="QtCreator" brief="Defines an interface to manage features for wizards"/>
            <class name="IFindFilter" fullname="Core::IFindFilter" href="core-ifindfilter.html" status="active" access="public" location="ifindfilter.h" filepath="C:/Users/qt/work/build/qt-creator/src/plugins/coreplugin/find/ifindfilter.h" lineno="39" documented="true" bases="QObject" module="QtCreator" brief="The base class for find implementations that are invoked by selecting Edit &gt; Find/Replace &gt; Advanced Find">
                <function name="allFindFilters" fullname="Core::IFindFilter::allFindFilters" href="core-ifindfilter.html#allFindFilters" status="active" access="public" location="ifindfilter.h" filepath="C:/Users/qt/work/build/qt-creator/src/plugins/coreplugin/find/ifindfilter.h" lineno="47" documented="true" meta="plain" virtual="non" const="false" static="true" final="false" override="false" type="const QList&lt;Core::IFindFilter *&gt;" signature="const QList&lt;Core::IFindFilter *&gt; allFindFilters()"/>
                <function name="createConfigWidget" fullname="Core::IFindFilter::createConfigWidget" href="core-ifindfilter.html#createConfigWidget" status="active" access="public" location="ifindfilter.h" filepath="C:/Users/qt/work/build/qt-creator/src/plugins/coreplugin/find/ifindfilter.h" lineno="63" documented="true" meta="plain" virtual="virtual" const="false" static="false" final="false" override="false" type="QWidget *" signature="QWidget * createConfigWidget()"/>
                <function name="defaultShortcut" fullname="Core::IFindFilter::defaultShortcut" href="core-ifindfilter.html#defaultShortcut" status="active" access="public" location="ifindfilter.h" filepath="C:/Users/qt/work/build/qt-creator/src/plugins/coreplugin/find/ifindfilter.h" lineno="54" documented="true" meta="plain" virtual="virtual" const="true" static="false" final="false" override="false" type="QKeySequence" signature="QKeySequence defaultShortcut() const"/>
                <function name="descriptionForFindFlags" fullname="Core::IFindFilter::descriptionForFindFlags" href="core-ifindfilter.html#descriptionForFindFlags" status="active" access="public" location="ifindfilter.h" filepath="C:/Users/qt/work/build/qt-creator/src/plugins/coreplugin/find/ifindfilter.h" lineno="68" documented="true" meta="plain" virtual="non" const="false" static="true" final="false" override="false" type="QString" signature="QString descriptionForFindFlags(Core::FindFlags flags)">
                    <parameter type="Core::FindFlags" name="flags" default=""/>
                </function>
                <function name="displayName" fullname="Core::IFindFilter::displayName" href="core-ifindfilter.html#displayName" status="active" access="public" location="ifindfilter.h" filepath="C:/Users/qt/work/build/qt-creator/src/plugins/coreplugin/find/ifindfilter.h" lineno="50" documented="true" meta="plain" virtual="pure" const="true" static="false" final="false" override="false" type="QString" signature="QString displayName() const = 0"/>
                <function name="displayNameChanged" fullname="Core::IFindFilter::displayNameChanged" href="core-ifindfilter.html#displayNameChanged" status="active" access="public" location="ifindfilter.h" filepath="C:/Users/qt/work/build/qt-creator/src/plugins/coreplugin/find/ifindfilter.h" lineno="72" documented="true" meta="signal" virtual="non" const="false" static="false" final="false" override="false" type="void" signature="void displayNameChanged()"/>
                <function name="enabledChanged" fullname="Core::IFindFilter::enabledChanged" href="core-ifindfilter.html#enabledChanged" status="active" access="public" location="ifindfilter.h" filepath="C:/Users/qt/work/build/qt-creator/src/plugins/coreplugin/find/ifindfilter.h" lineno="70" documented="true" meta="signal" virtual="non" const="false" static="false" final="false" override="false" type="void" signature="void enabledChanged(bool enabled)">
                    <parameter type="bool" name="enabled" default=""/>
                </function>
                <function name="findAll" fullname="Core::IFindFilter::findAll" href="core-ifindfilter.html#findAll" status="active" access="public" location="ifindfilter.h" filepath="C:/Users/qt/work/build/qt-creator/src/plugins/coreplugin/find/ifindfilter.h" lineno="59" documented="true" meta="plain" virtual="pure" const="false" static="false" final="false" override="false" type="void" signature="void findAll(const QString &amp;txt, Core::FindFlags findFlags) = 0">
                    <parameter type="const QString &amp;" name="txt" default=""/>
                    <parameter type="Core::FindFlags" name="findFlags" default=""/>
                </function>
                <function name="id" fullname="Core::IFindFilter::id" href="core-ifindfilter.html#id" status="active" access="public" location="ifindfilter.h" filepath="C:/Users/qt/work/build/qt-creator/src/plugins/coreplugin/find/ifindfilter.h" lineno="49" documented="true" meta="plain" virtual="pure" const="true" static="false" final="false" override="false" type="QString" signature="QString id() const = 0"/>
                <function name="isEnabled" fullname="Core::IFindFilter::isEnabled" href="core-ifindfilter.html#isEnabled" status="active" access="public" location="ifindfilter.h" filepath="C:/Users/qt/work/build/qt-creator/src/plugins/coreplugin/find/ifindfilter.h" lineno="52" documented="true" meta="plain" virtual="pure" const="true" static="false" final="false" override="false" type="bool" signature="bool isEnabled() const = 0"/>
                <function name="isReplaceSupported" fullname="Core::IFindFilter::isReplaceSupported" href="core-ifindfilter.html#isReplaceSupported" status="active" access="public" location="ifindfilter.h" filepath="C:/Users/qt/work/build/qt-creator/src/plugins/coreplugin/find/ifindfilter.h" lineno="55" documented="true" meta="plain" virtual="virtual" const="true" static="false" final="false" override="false" type="bool" signature="bool isReplaceSupported() const"/>
                <function name="isValid" fullname="Core::IFindFilter::isValid" href="core-ifindfilter.html#isValid" status="active" access="public" location="ifindfilter.h" filepath="C:/Users/qt/work/build/qt-creator/src/plugins/coreplugin/find/ifindfilter.h" lineno="53" documented="true" meta="plain" virtual="virtual" const="true" static="false" final="false" override="false" type="bool" signature="bool isValid() const"/>
                <function name="pixmapForFindFlags" fullname="Core::IFindFilter::pixmapForFindFlags" href="core-ifindfilter.html#pixmapForFindFlags" status="active" access="public" location="ifindfilter.h" filepath="C:/Users/qt/work/build/qt-creator/src/plugins/coreplugin/find/ifindfilter.h" lineno="67" documented="true" meta="plain" virtual="non" const="false" static="true" final="false" override="false" type="QPixmap" signature="QPixmap pixmapForFindFlags(Core::FindFlags flags)">
                    <parameter type="Core::FindFlags" name="flags" default=""/>
                </function>
                <function name="readSettings" fullname="Core::IFindFilter::readSettings" href="core-ifindfilter.html#readSettings" status="active" access="public" location="ifindfilter.h" filepath="C:/Users/qt/work/build/qt-creator/src/plugins/coreplugin/find/ifindfilter.h" lineno="65" documented="true" meta="plain" virtual="virtual" const="false" static="false" final="false" override="false" type="void" signature="void readSettings(QSettings *settings)">
                    <parameter type="QSettings *" name="settings" default=""/>
                </function>
                <function name="replaceAll" fullname="Core::IFindFilter::replaceAll" href="core-ifindfilter.html#replaceAll" status="active" access="public" location="ifindfilter.h" filepath="C:/Users/qt/work/build/qt-creator/src/plugins/coreplugin/find/ifindfilter.h" lineno="60" documented="true" meta="plain" virtual="virtual" const="false" static="false" final="false" override="false" type="void" signature="void replaceAll(const QString &amp;txt, Core::FindFlags findFlags)">
                    <parameter type="const QString &amp;" name="txt" default=""/>
                    <parameter type="Core::FindFlags" name="findFlags" default=""/>
                </function>
                <function name="showSearchTermInput" fullname="Core::IFindFilter::showSearchTermInput" href="core-ifindfilter.html#showSearchTermInput" status="active" access="public" location="ifindfilter.h" filepath="C:/Users/qt/work/build/qt-creator/src/plugins/coreplugin/find/ifindfilter.h" lineno="56" documented="true" meta="plain" virtual="virtual" const="true" static="false" final="false" override="false" type="bool" signature="bool showSearchTermInput() const"/>
                <function name="supportedFindFlags" fullname="Core::IFindFilter::supportedFindFlags" href="core-ifindfilter.html#supportedFindFlags" status="active" access="public" location="ifindfilter.h" filepath="C:/Users/qt/work/build/qt-creator/src/plugins/coreplugin/find/ifindfilter.h" lineno="57" documented="true" meta="plain" virtual="virtual" const="true" static="false" final="false" override="false" type="Core::FindFlags" signature="Core::FindFlags supportedFindFlags() const"/>
                <function name="validChanged" fullname="Core::IFindFilter::validChanged" href="core-ifindfilter.html#validChanged" status="active" access="public" location="ifindfilter.h" filepath="C:/Users/qt/work/build/qt-creator/src/plugins/coreplugin/find/ifindfilter.h" lineno="71" documented="true" meta="signal" virtual="non" const="false" static="false" final="false" override="false" type="void" signature="void validChanged(bool valid)">
                    <parameter type="bool" name="valid" default=""/>
                </function>
                <function name="writeSettings" fullname="Core::IFindFilter::writeSettings" href="core-ifindfilter.html#writeSettings" status="active" access="public" location="ifindfilter.h" filepath="C:/Users/qt/work/build/qt-creator/src/plugins/coreplugin/find/ifindfilter.h" lineno="64" documented="true" meta="plain" virtual="virtual" const="false" static="false" final="false" override="false" type="void" signature="void writeSettings(QSettings *settings)">
                    <parameter type="QSettings *" name="settings" default=""/>
                </function>
            </class>
            <class name="IFindSupport" fullname="Core::IFindSupport" href="core-ifindsupport.html" status="active" access="public" location="ifindsupport.h" filepath="C:/Users/qt/work/build/qt-creator/src/plugins/coreplugin/find/ifindsupport.h" lineno="35" documented="true" bases="QObject" module="QtCreator" brief="Functions for searching in a document or widget">
                <function name="changed" fullname="Core::IFindSupport::changed" href="core-ifindsupport.html#changed" status="active" access="public" location="ifindsupport.h" filepath="C:/Users/qt/work/build/qt-creator/src/plugins/coreplugin/find/ifindsupport.h" lineno="68" documented="true" meta="signal" virtual="non" const="false" static="false" final="false" override="false" type="void" signature="void changed()"/>
                <function name="clearFindScope" fullname="Core::IFindSupport::clearFindScope" href="core-ifindsupport.html#clearFindScope" status="active" access="public" location="ifindsupport.h" filepath="C:/Users/qt/work/build/qt-creator/src/plugins/coreplugin/find/ifindsupport.h" lineno="63" documented="true" meta="plain" virtual="virtual" const="false" static="false" final="false" override="false" type="void" signature="void clearFindScope()"/>
                <function name="clearHighlights" fullname="Core::IFindSupport::clearHighlights" href="core-ifindsupport.html#clearHighlights" status="active" access="public" location="ifindsupport.h" filepath="C:/Users/qt/work/build/qt-creator/src/plugins/coreplugin/find/ifindsupport.h" lineno="48" documented="true" meta="plain" virtual="pure" const="false" static="false" final="false" override="false" type="void" signature="void clearHighlights() = 0"/>
                <function name="completedFindString" fullname="Core::IFindSupport::completedFindString" href="core-ifindsupport.html#completedFindString" status="active" access="public" location="ifindsupport.h" filepath="C:/Users/qt/work/build/qt-creator/src/plugins/coreplugin/find/ifindsupport.h" lineno="50" documented="true" meta="plain" virtual="pure" const="true" static="false" final="false" override="false" type="QString" signature="QString completedFindString() const = 0"/>
                <function name="currentFindString" fullname="Core::IFindSupport::currentFindString" href="core-ifindsupport.html#currentFindString" status="active" access="public" location="ifindsupport.h" filepath="C:/Users/qt/work/build/qt-creator/src/plugins/coreplugin/find/ifindsupport.h" lineno="49" documented="true" meta="plain" virtual="pure" const="true" static="false" final="false" override="false" type="QString" signature="QString currentFindString() const = 0"/>
                <function name="defineFindScope" fullname="Core::IFindSupport::defineFindScope" href="core-ifindsupport.html#defineFindScope" status="active" access="public" location="ifindsupport.h" filepath="C:/Users/qt/work/build/qt-creator/src/plugins/coreplugin/find/ifindsupport.h" lineno="62" documented="true" meta="plain" virtual="virtual" const="false" static="false" final="false" override="false" type="void" signature="void defineFindScope()"/>
                <function name="findIncremental" fullname="Core::IFindSupport::findIncremental" href="core-ifindsupport.html#findIncremental" status="active" access="public" location="ifindsupport.h" filepath="C:/Users/qt/work/build/qt-creator/src/plugins/coreplugin/find/ifindsupport.h" lineno="53" documented="true" meta="plain" virtual="pure" const="false" static="false" final="false" override="false" type="Core::IFindSupport::Result" signature="Core::IFindSupport::Result findIncremental(const QString &amp;txt, Core::FindFlags findFlags) = 0">
                    <parameter type="const QString &amp;" name="txt" default=""/>
                    <parameter type="Core::FindFlags" name="findFlags" default=""/>
                </function>
                <function name="findStep" fullname="Core::IFindSupport::findStep" href="core-ifindsupport.html#findStep" status="active" access="public" location="ifindsupport.h" filepath="C:/Users/qt/work/build/qt-creator/src/plugins/coreplugin/find/ifindsupport.h" lineno="54" documented="true" meta="plain" virtual="pure" const="false" static="false" final="false" override="false" type="Core::IFindSupport::Result" signature="Core::IFindSupport::Result findStep(const QString &amp;txt, Core::FindFlags findFlags) = 0">
                    <parameter type="const QString &amp;" name="txt" default=""/>
                    <parameter type="Core::FindFlags" name="findFlags" default=""/>
                </function>
                <function name="highlightAll" fullname="Core::IFindSupport::highlightAll" href="core-ifindsupport.html#highlightAll" status="active" access="public" location="ifindsupport.h" filepath="C:/Users/qt/work/build/qt-creator/src/plugins/coreplugin/find/ifindsupport.h" lineno="52" documented="true" meta="plain" virtual="virtual" const="false" static="false" final="false" override="false" type="void" signature="void highlightAll(const QString &amp;txt, Core::FindFlags findFlags)">
                    <parameter type="const QString &amp;" name="txt" default=""/>
                    <parameter type="Core::FindFlags" name="findFlags" default=""/>
                </function>
                <function name="replace" fullname="Core::IFindSupport::replace" href="core-ifindsupport.html#replace" status="active" access="public" location="ifindsupport.h" filepath="C:/Users/qt/work/build/qt-creator/src/plugins/coreplugin/find/ifindsupport.h" lineno="55" documented="true" meta="plain" virtual="virtual" const="false" static="false" final="false" override="false" type="void" signature="void replace(const QString &amp;before, const QString &amp;after, Core::FindFlags findFlags)">
                    <parameter type="const QString &amp;" name="before" default=""/>
                    <parameter type="const QString &amp;" name="after" default=""/>
                    <parameter type="Core::FindFlags" name="findFlags" default=""/>
                </function>
                <function name="replaceAll" fullname="Core::IFindSupport::replaceAll" href="core-ifindsupport.html#replaceAll" status="active" access="public" location="ifindsupport.h" filepath="C:/Users/qt/work/build/qt-creator/src/plugins/coreplugin/find/ifindsupport.h" lineno="59" documented="true" meta="plain" virtual="virtual" const="false" static="false" final="false" override="false" type="int" signature="int replaceAll(const QString &amp;before, const QString &amp;after, Core::FindFlags findFlags)">
                    <parameter type="const QString &amp;" name="before" default=""/>
                    <parameter type="const QString &amp;" name="after" default=""/>
                    <parameter type="Core::FindFlags" name="findFlags" default=""/>
                </function>
                <function name="replaceStep" fullname="Core::IFindSupport::replaceStep" href="core-ifindsupport.html#replaceStep" status="active" access="public" location="ifindsupport.h" filepath="C:/Users/qt/work/build/qt-creator/src/plugins/coreplugin/find/ifindsupport.h" lineno="57" documented="true" meta="plain" virtual="virtual" const="false" static="false" final="false" override="false" type="bool" signature="bool replaceStep(const QString &amp;before, const QString &amp;after, Core::FindFlags findFlags)">
                    <parameter type="const QString &amp;" name="before" default=""/>
                    <parameter type="const QString &amp;" name="after" default=""/>
                    <parameter type="Core::FindFlags" name="findFlags" default=""/>
                </function>
                <function name="resetIncrementalSearch" fullname="Core::IFindSupport::resetIncrementalSearch" href="core-ifindsupport.html#resetIncrementalSearch" status="active" access="public" location="ifindsupport.h" filepath="C:/Users/qt/work/build/qt-creator/src/plugins/coreplugin/find/ifindsupport.h" lineno="47" documented="true" meta="plain" virtual="pure" const="false" static="false" final="false" override="false" type="void" signature="void resetIncrementalSearch() = 0"/>
                <function name="showWrapIndicator" fullname="Core::IFindSupport::showWrapIndicator" href="core-ifindsupport.html#showWrapIndicator" status="active" access="public" location="ifindsupport.h" filepath="C:/Users/qt/work/build/qt-creator/src/plugins/coreplugin/find/ifindsupport.h" lineno="65" documented="true" meta="plain" virtual="non" const="false" static="true" final="false" override="false" type="void" signature="void showWrapIndicator(QWidget *parent)">
                    <parameter type="QWidget *" name="parent" default=""/>
                </function>
                <function name="supportedFindFlags" fullname="Core::IFindSupport::supportedFindFlags" href="core-ifindsupport.html#supportedFindFlags" status="active" access="public" location="ifindsupport.h" filepath="C:/Users/qt/work/build/qt-creator/src/plugins/coreplugin/find/ifindsupport.h" lineno="46" documented="true" meta="plain" virtual="pure" const="true" static="false" final="false" override="false" type="Core::FindFlags" signature="Core::FindFlags supportedFindFlags() const = 0"/>
                <function name="supportsReplace" fullname="Core::IFindSupport::supportsReplace" href="core-ifindsupport.html#supportsReplace" status="active" access="public" location="ifindsupport.h" filepath="C:/Users/qt/work/build/qt-creator/src/plugins/coreplugin/find/ifindsupport.h" lineno="45" documented="true" meta="plain" virtual="pure" const="true" static="false" final="false" override="false" type="bool" signature="bool supportsReplace() const = 0"/>
                <enum name="Result" fullname="Core::IFindSupport::Result" href="core-ifindsupport.html#Result-enum" status="active" access="public" location="ifindsupport.h" filepath="C:/Users/qt/work/build/qt-creator/src/plugins/coreplugin/find/ifindsupport.h" lineno="40" documented="true">
                    <value name="Found" value="0"/>
                    <value name="NotFound" value="1"/>
                    <value name="NotYetFound" value="2"/>
                </enum>
            </class>
            <class name="ILocatorFilter" fullname="Core::ILocatorFilter" href="core-ilocatorfilter.html" status="active" access="public" location="ilocatorfilter.h" filepath="C:/Users/qt/work/build/qt-creator/src/plugins\coreplugin/locator/ilocatorfilter.h" lineno="107" documented="true" bases="QObject" module="QtCreator" brief="Adds a locator filter">
                <function name="ILocatorFilter" fullname="Core::ILocatorFilter::ILocatorFilter" href="core-ilocatorfilter.html#ILocatorFilter" status="active" access="public" location="ilocatorfilter.h" filepath="C:/Users/qt/work/build/qt-creator/src/plugins\coreplugin/locator/ilocatorfilter.h" lineno="122" documented="true" meta="constructor" virtual="non" const="false" static="false" final="false" override="false" type="" signature="ILocatorFilter(QObject *parent)">
                    <parameter type="QObject *" name="parent" default="nullptr"/>
                </function>
                <function name="accept" fullname="Core::ILocatorFilter::accept" href="core-ilocatorfilter.html#accept" status="active" access="public" location="ilocatorfilter.h" filepath="C:/Users/qt/work/build/qt-creator/src/plugins\coreplugin/locator/ilocatorfilter.h" lineno="146" documented="true" meta="plain" virtual="pure" const="true" static="false" final="false" override="false" type="void" signature="void accept(Core::LocatorFilterEntry selection, QString *newText, int *selectionStart, int *selectionLength) const = 0">
                    <parameter type="Core::LocatorFilterEntry" name="selection" default=""/>
                    <parameter type="QString *" name="newText" default=""/>
                    <parameter type="int *" name="selectionStart" default=""/>
                    <parameter type="int *" name="selectionLength" default=""/>
                </function>
                <function name="actionId" fullname="Core::ILocatorFilter::actionId" href="core-ilocatorfilter.html#actionId" status="active" access="public" location="ilocatorfilter.h" filepath="C:/Users/qt/work/build/qt-creator/src/plugins\coreplugin/locator/ilocatorfilter.h" lineno="128" documented="true" meta="plain" virtual="non" const="true" static="false" final="false" override="false" type="Utils::Id" signature="Utils::Id actionId() const"/>
                <function name="allLocatorFilters" fullname="Core::ILocatorFilter::allLocatorFilters" href="core-ilocatorfilter.html#allLocatorFilters" status="active" access="public" location="ilocatorfilter.h" filepath="C:/Users/qt/work/build/qt-creator/src/plugins\coreplugin/locator/ilocatorfilter.h" lineno="125" documented="true" meta="plain" virtual="non" const="false" static="true" final="false" override="false" type="const QList&lt;Core::ILocatorFilter *&gt;" signature="const QList&lt;Core::ILocatorFilter *&gt; allLocatorFilters()"/>
                <function name="caseSensitivity" fullname="Core::ILocatorFilter::caseSensitivity" href="core-ilocatorfilter.html#caseSensitivity" status="active" access="public" location="ilocatorfilter.h" filepath="C:/Users/qt/work/build/qt-creator/src/plugins\coreplugin/locator/ilocatorfilter.h" lineno="165" documented="true" meta="plain" virtual="non" const="false" static="true" final="false" override="false" type="Qt::CaseSensitivity" signature="Qt::CaseSensitivity caseSensitivity(const QString &amp;str)">
                    <parameter type="const QString &amp;" name="str" default=""/>
                </function>
                <function name="createRegExp" fullname="Core::ILocatorFilter::createRegExp" href="core-ilocatorfilter.html#createRegExp" status="active" access="public" location="ilocatorfilter.h" filepath="C:/Users/qt/work/build/qt-creator/src/plugins\coreplugin/locator/ilocatorfilter.h" lineno="166" documented="true" meta="plain" virtual="non" const="false" static="true" final="false" override="false" type="QRegularExpression" signature="QRegularExpression createRegExp(const QString &amp;text, Qt::CaseSensitivity caseSensitivity)">
                    <parameter type="const QString &amp;" name="text" default=""/>
                    <parameter type="Qt::CaseSensitivity" name="caseSensitivity" default="Qt::CaseInsensitive"/>
                </function>
                <function name="description" fullname="Core::ILocatorFilter::description" href="core-ilocatorfilter.html#description" status="active" access="public" location="ilocatorfilter.h" filepath="C:/Users/qt/work/build/qt-creator/src/plugins\coreplugin/locator/ilocatorfilter.h" lineno="133" documented="true" meta="plain" virtual="non" const="true" static="false" final="false" override="false" type="QString" signature="QString description() const"/>
                <function name="displayName" fullname="Core::ILocatorFilter::displayName" href="core-ilocatorfilter.html#displayName" status="active" access="public" location="ilocatorfilter.h" filepath="C:/Users/qt/work/build/qt-creator/src/plugins\coreplugin/locator/ilocatorfilter.h" lineno="130" documented="true" meta="plain" virtual="non" const="true" static="false" final="false" override="false" type="QString" signature="QString displayName() const"/>
                <function name="highlightInfo" fullname="Core::ILocatorFilter::highlightInfo" href="core-ilocatorfilter.html#highlightInfo" status="active" access="public" location="ilocatorfilter.h" filepath="C:/Users/qt/work/build/qt-creator/src/plugins\coreplugin/locator/ilocatorfilter.h" lineno="168" documented="true" meta="plain" virtual="non" const="false" static="true" final="false" override="false" type="LocatorFilterEntry::HighlightInfo" signature="LocatorFilterEntry::HighlightInfo highlightInfo(const QRegularExpressionMatch &amp;match, LocatorFilterEntry::HighlightInfo::DataType dataType)">
                    <parameter type="const QRegularExpressionMatch &amp;" name="match" default=""/>
                    <parameter type="LocatorFilterEntry::HighlightInfo::DataType" name="dataType" default="LocatorFilterEntry::HighlightInfo::DisplayName"/>
                </function>
                <function name="id" fullname="Core::ILocatorFilter::id" href="core-ilocatorfilter.html#id" status="active" access="public" location="ilocatorfilter.h" filepath="C:/Users/qt/work/build/qt-creator/src/plugins\coreplugin/locator/ilocatorfilter.h" lineno="127" documented="true" meta="plain" virtual="non" const="true" static="false" final="false" override="false" type="Utils::Id" signature="Utils::Id id() const"/>
                <function name="isConfigurable" fullname="Core::ILocatorFilter::isConfigurable" href="core-ilocatorfilter.html#isConfigurable" status="active" access="public" location="ilocatorfilter.h" filepath="C:/Users/qt/work/build/qt-creator/src/plugins\coreplugin/locator/ilocatorfilter.h" lineno="155" documented="true" meta="plain" virtual="non" const="true" static="false" final="false" override="false" type="bool" signature="bool isConfigurable() const"/>
                <function name="isEnabled" fullname="Core::ILocatorFilter::isEnabled" href="core-ilocatorfilter.html#isEnabled" status="active" access="public" location="ilocatorfilter.h" filepath="C:/Users/qt/work/build/qt-creator/src/plugins\coreplugin/locator/ilocatorfilter.h" lineno="163" documented="true" meta="plain" virtual="non" const="true" static="false" final="false" override="false" type="bool" signature="bool isEnabled() const"/>
                <function name="isHidden" fullname="Core::ILocatorFilter::isHidden" href="core-ilocatorfilter.html#isHidden" status="active" access="public" location="ilocatorfilter.h" filepath="C:/Users/qt/work/build/qt-creator/src/plugins\coreplugin/locator/ilocatorfilter.h" lineno="161" documented="true" meta="plain" virtual="non" const="true" static="false" final="false" override="false" type="bool" signature="bool isHidden() const"/>
                <function name="isIncludedByDefault" fullname="Core::ILocatorFilter::isIncludedByDefault" href="core-ilocatorfilter.html#isIncludedByDefault" status="active" access="public" location="ilocatorfilter.h" filepath="C:/Users/qt/work/build/qt-creator/src/plugins\coreplugin/locator/ilocatorfilter.h" lineno="157" documented="true" meta="plain" virtual="non" const="true" static="false" final="false" override="false" type="bool" signature="bool isIncludedByDefault() const"/>
                <function name="isOldSetting" fullname="Core::ILocatorFilter::isOldSetting" href="core-ilocatorfilter.html#isOldSetting" status="active" access="protected" location="ilocatorfilter.h" filepath="C:/Users/qt/work/build/qt-creator/src/plugins\coreplugin/locator/ilocatorfilter.h" lineno="190" documented="true" meta="plain" virtual="non" const="false" static="true" final="false" override="false" type="bool" signature="bool isOldSetting(const QByteArray &amp;state)">
                    <parameter type="const QByteArray &amp;" name="state" default=""/>
                </function>
                <function name="matchesFor" fullname="Core::ILocatorFilter::matchesFor" href="core-ilocatorfilter.html#matchesFor" status="active" access="public" location="ilocatorfilter.h" filepath="C:/Users/qt/work/build/qt-creator/src/plugins\coreplugin/locator/ilocatorfilter.h" lineno="144" documented="true" meta="plain" virtual="pure" const="false" static="false" final="false" override="false" type="QList&lt;Core::LocatorFilterEntry&gt;" signature="QList&lt;Core::LocatorFilterEntry&gt; matchesFor(QFutureInterface&lt;Core::LocatorFilterEntry&gt; &amp;future, const QString &amp;entry) = 0">
                    <parameter type="QFutureInterface&lt;Core::LocatorFilterEntry&gt; &amp;" name="future" default=""/>
                    <parameter type="const QString &amp;" name="entry" default=""/>
                </function>
                <function name="msgConfigureDialogTitle" fullname="Core::ILocatorFilter::msgConfigureDialogTitle" href="core-ilocatorfilter.html#msgConfigureDialogTitle" status="active" access="public" location="ilocatorfilter.h" filepath="C:/Users/qt/work/build/qt-creator/src/plugins\coreplugin/locator/ilocatorfilter.h" lineno="171" documented="true" meta="plain" virtual="non" const="false" static="true" final="false" override="false" type="QString" signature="QString msgConfigureDialogTitle()"/>
                <function name="msgIncludeByDefault" fullname="Core::ILocatorFilter::msgIncludeByDefault" href="core-ilocatorfilter.html#msgIncludeByDefault" status="active" access="public" location="ilocatorfilter.h" filepath="C:/Users/qt/work/build/qt-creator/src/plugins\coreplugin/locator/ilocatorfilter.h" lineno="174" documented="true" meta="plain" virtual="non" const="false" static="true" final="false" override="false" type="QString" signature="QString msgIncludeByDefault()"/>
                <function name="msgIncludeByDefaultToolTip" fullname="Core::ILocatorFilter::msgIncludeByDefaultToolTip" href="core-ilocatorfilter.html#msgIncludeByDefaultToolTip" status="active" access="public" location="ilocatorfilter.h" filepath="C:/Users/qt/work/build/qt-creator/src/plugins\coreplugin/locator/ilocatorfilter.h" lineno="175" documented="true" meta="plain" virtual="non" const="false" static="true" final="false" override="false" type="QString" signature="QString msgIncludeByDefaultToolTip()"/>
                <function name="msgPrefixLabel" fullname="Core::ILocatorFilter::msgPrefixLabel" href="core-ilocatorfilter.html#msgPrefixLabel" status="active" access="public" location="ilocatorfilter.h" filepath="C:/Users/qt/work/build/qt-creator/src/plugins\coreplugin/locator/ilocatorfilter.h" lineno="172" documented="true" meta="plain" virtual="non" const="false" static="true" final="false" override="false" type="QString" signature="QString msgPrefixLabel()"/>
                <function name="msgPrefixToolTip" fullname="Core::ILocatorFilter::msgPrefixToolTip" href="core-ilocatorfilter.html#msgPrefixToolTip" status="active" access="public" location="ilocatorfilter.h" filepath="C:/Users/qt/work/build/qt-creator/src/plugins\coreplugin/locator/ilocatorfilter.h" lineno="173" documented="true" meta="plain" virtual="non" const="false" static="true" final="false" override="false" type="QString" signature="QString msgPrefixToolTip()"/>
                <function name="openConfigDialog" fullname="Core::ILocatorFilter::openConfigDialog" href="core-ilocatorfilter.html#openConfigDialog" status="active" access="public" location="ilocatorfilter.h" filepath="C:/Users/qt/work/build/qt-creator/src/plugins\coreplugin/locator/ilocatorfilter.h" lineno="154" documented="true" meta="plain" virtual="virtual" const="false" static="false" final="false" override="false" type="bool" signature="bool openConfigDialog(QWidget *parent, bool &amp;needsRefresh)">
                    <parameter type="QWidget *" name="parent" default=""/>
                    <parameter type="bool &amp;" name="needsRefresh" default=""/>
                </function>
                <function name="openConfigDialog" fullname="Core::ILocatorFilter::openConfigDialog" href="core-ilocatorfilter.html#openConfigDialog-1" status="active" access="protected" location="ilocatorfilter.h" filepath="C:/Users/qt/work/build/qt-creator/src/plugins\coreplugin/locator/ilocatorfilter.h" lineno="185" documented="true" meta="plain" virtual="non" const="false" static="false" final="false" override="false" overload="true" overload-number="1" type="bool" signature="bool openConfigDialog(QWidget *parent, QWidget *additionalWidget)">
                    <parameter type="QWidget *" name="parent" default=""/>
                    <parameter type="QWidget *" name="additionalWidget" default=""/>
                </function>
                <function name="prepareSearch" fullname="Core::ILocatorFilter::prepareSearch" href="core-ilocatorfilter.html#prepareSearch" status="active" access="public" location="ilocatorfilter.h" filepath="C:/Users/qt/work/build/qt-creator/src/plugins\coreplugin/locator/ilocatorfilter.h" lineno="142" documented="true" meta="plain" virtual="virtual" const="false" static="false" final="false" override="false" type="void" signature="void prepareSearch(const QString &amp;entry)">
                    <parameter type="const QString &amp;" name="entry" default=""/>
                </function>
                <function name="priority" fullname="Core::ILocatorFilter::priority" href="core-ilocatorfilter.html#priority" status="active" access="public" location="ilocatorfilter.h" filepath="C:/Users/qt/work/build/qt-creator/src/plugins\coreplugin/locator/ilocatorfilter.h" lineno="136" documented="true" meta="plain" virtual="non" const="true" static="false" final="false" override="false" type="Core::ILocatorFilter::Priority" signature="Core::ILocatorFilter::Priority priority() const"/>
                <function name="refresh" fullname="Core::ILocatorFilter::refresh" href="core-ilocatorfilter.html#refresh" status="active" access="public" location="ilocatorfilter.h" filepath="C:/Users/qt/work/build/qt-creator/src/plugins\coreplugin/locator/ilocatorfilter.h" lineno="149" documented="true" meta="plain" virtual="virtual" const="false" static="false" final="false" override="false" type="void" signature="void refresh(QFutureInterface&lt;void&gt; &amp;future)">
                    <parameter type="QFutureInterface&lt;void&gt; &amp;" name="future" default=""/>
                </function>
                <function name="restoreState" fullname="Core::ILocatorFilter::restoreState" href="core-ilocatorfilter.html#restoreState" status="active" access="public" location="ilocatorfilter.h" filepath="C:/Users/qt/work/build/qt-creator/src/plugins\coreplugin/locator/ilocatorfilter.h" lineno="152" documented="true" meta="plain" virtual="virtual" const="false" static="false" final="false" override="false" type="void" signature="void restoreState(const QByteArray &amp;state)">
                    <parameter type="const QByteArray &amp;" name="state" default=""/>
                </function>
                <function name="restoreState" fullname="Core::ILocatorFilter::restoreState" href="core-ilocatorfilter.html#restoreState-1" status="active" access="protected" location="ilocatorfilter.h" filepath="C:/Users/qt/work/build/qt-creator/src/plugins\coreplugin/locator/ilocatorfilter.h" lineno="188" documented="true" meta="plain" virtual="virtual" const="false" static="false" final="false" override="false" overload="true" overload-number="1" type="void" signature="void restoreState(const QJsonObject &amp;object)">
                    <parameter type="const QJsonObject &amp;" name="object" default=""/>
                </function>
                <function name="saveState" fullname="Core::ILocatorFilter::saveState" href="core-ilocatorfilter.html#saveState" status="active" access="public" location="ilocatorfilter.h" filepath="C:/Users/qt/work/build/qt-creator/src/plugins\coreplugin/locator/ilocatorfilter.h" lineno="151" documented="true" meta="plain" virtual="virtual" const="true" static="false" final="false" override="false" type="QByteArray" signature="QByteArray saveState() const"/>
                <function name="saveState" fullname="Core::ILocatorFilter::saveState" href="core-ilocatorfilter.html#saveState-1" status="active" access="protected" location="ilocatorfilter.h" filepath="C:/Users/qt/work/build/qt-creator/src/plugins\coreplugin/locator/ilocatorfilter.h" lineno="187" documented="true" meta="plain" virtual="virtual" const="true" static="false" final="false" override="false" overload="true" overload-number="1" type="void" signature="void saveState(QJsonObject &amp;object) const">
                    <parameter type="QJsonObject &amp;" name="object" default=""/>
                </function>
                <function name="setConfigurable" fullname="Core::ILocatorFilter::setConfigurable" href="core-ilocatorfilter.html#setConfigurable" status="active" access="protected" location="ilocatorfilter.h" filepath="C:/Users/qt/work/build/qt-creator/src/plugins\coreplugin/locator/ilocatorfilter.h" lineno="184" documented="true" meta="plain" virtual="non" const="false" static="false" final="false" override="false" type="void" signature="void setConfigurable(bool configurable)">
                    <parameter type="bool" name="configurable" default=""/>
                </function>
                <function name="setDefaultIncludedByDefault" fullname="Core::ILocatorFilter::setDefaultIncludedByDefault" href="core-ilocatorfilter.html#setDefaultIncludedByDefault" status="active" access="public" location="ilocatorfilter.h" filepath="C:/Users/qt/work/build/qt-creator/src/plugins\coreplugin/locator/ilocatorfilter.h" lineno="158" documented="true" meta="plain" virtual="non" const="false" static="false" final="false" override="false" type="void" signature="void setDefaultIncludedByDefault(bool includedByDefault)">
                    <parameter type="bool" name="includedByDefault" default=""/>
                </function>
                <function name="setDefaultShortcutString" fullname="Core::ILocatorFilter::setDefaultShortcutString" href="core-ilocatorfilter.html#setDefaultShortcutString" status="active" access="public" location="ilocatorfilter.h" filepath="C:/Users/qt/work/build/qt-creator/src/plugins\coreplugin/locator/ilocatorfilter.h" lineno="139" documented="true" meta="plain" virtual="non" const="false" static="false" final="false" override="false" type="void" signature="void setDefaultShortcutString(const QString &amp;shortcut)">
                    <parameter type="const QString &amp;" name="shortcut" default=""/>
                </function>
                <function name="setDescription" fullname="Core::ILocatorFilter::setDescription" href="core-ilocatorfilter.html#setDescription" status="active" access="public" location="ilocatorfilter.h" filepath="C:/Users/qt/work/build/qt-creator/src/plugins\coreplugin/locator/ilocatorfilter.h" lineno="134" documented="true" meta="plain" virtual="non" const="false" static="false" final="false" override="false" type="void" signature="void setDescription(const QString &amp;description)">
                    <parameter type="const QString &amp;" name="description" default=""/>
                </function>
                <function name="setDisplayName" fullname="Core::ILocatorFilter::setDisplayName" href="core-ilocatorfilter.html#setDisplayName" status="active" access="public" location="ilocatorfilter.h" filepath="C:/Users/qt/work/build/qt-creator/src/plugins\coreplugin/locator/ilocatorfilter.h" lineno="131" documented="true" meta="plain" virtual="non" const="false" static="false" final="false" override="false" type="void" signature="void setDisplayName(const QString &amp;displayString)">
                    <parameter type="const QString &amp;" name="displayString" default=""/>
                </function>
                <function name="setEnabled" fullname="Core::ILocatorFilter::setEnabled" href="core-ilocatorfilter.html#setEnabled" status="active" access="public" location="ilocatorfilter.h" filepath="C:/Users/qt/work/build/qt-creator/src/plugins\coreplugin/locator/ilocatorfilter.h" lineno="178" documented="true" meta="slot" virtual="non" const="false" static="false" final="false" override="false" type="void" signature="void setEnabled(bool enabled)">
                    <parameter type="bool" name="enabled" default=""/>
                </function>
                <function name="setHidden" fullname="Core::ILocatorFilter::setHidden" href="core-ilocatorfilter.html#setHidden" status="active" access="protected" location="ilocatorfilter.h" filepath="C:/Users/qt/work/build/qt-creator/src/plugins\coreplugin/locator/ilocatorfilter.h" lineno="181" documented="true" meta="plain" virtual="non" const="false" static="false" final="false" override="false" type="void" signature="void setHidden(bool hidden)">
                    <parameter type="bool" name="hidden" default=""/>
                </function>
                <function name="setId" fullname="Core::ILocatorFilter::setId" href="core-ilocatorfilter.html#setId" status="active" access="protected" location="ilocatorfilter.h" filepath="C:/Users/qt/work/build/qt-creator/src/plugins\coreplugin/locator/ilocatorfilter.h" lineno="182" documented="true" meta="plain" virtual="non" const="false" static="false" final="false" override="false" type="void" signature="void setId(Utils::Id id)">
                    <parameter type="Utils::Id" name="id" default=""/>
                </function>
                <function name="setIncludedByDefault" fullname="Core::ILocatorFilter::setIncludedByDefault" href="core-ilocatorfilter.html#setIncludedByDefault" status="active" access="public" location="ilocatorfilter.h" filepath="C:/Users/qt/work/build/qt-creator/src/plugins\coreplugin/locator/ilocatorfilter.h" lineno="159" documented="true" meta="plain" virtual="non" const="false" static="false" final="false" override="false" type="void" signature="void setIncludedByDefault(bool includedByDefault)">
                    <parameter type="bool" name="includedByDefault" default=""/>
                </function>
                <function name="setPriority" fullname="Core::ILocatorFilter::setPriority" href="core-ilocatorfilter.html#setPriority" status="active" access="protected" location="ilocatorfilter.h" filepath="C:/Users/qt/work/build/qt-creator/src/plugins\coreplugin/locator/ilocatorfilter.h" lineno="183" documented="true" meta="plain" virtual="non" const="false" static="false" final="false" override="false" type="void" signature="void setPriority(Core::ILocatorFilter::Priority priority)">
                    <parameter type="Core::ILocatorFilter::Priority" name="priority" default=""/>
                </function>
                <function name="setShortcutString" fullname="Core::ILocatorFilter::setShortcutString" href="core-ilocatorfilter.html#setShortcutString" status="active" access="public" location="ilocatorfilter.h" filepath="C:/Users/qt/work/build/qt-creator/src/plugins\coreplugin/locator/ilocatorfilter.h" lineno="140" documented="true" meta="plain" virtual="non" const="false" static="false" final="false" override="false" type="void" signature="void setShortcutString(const QString &amp;shortcut)">
                    <parameter type="const QString &amp;" name="shortcut" default=""/>
                </function>
                <function name="shortcutString" fullname="Core::ILocatorFilter::shortcutString" href="core-ilocatorfilter.html#shortcutString" status="active" access="public" location="ilocatorfilter.h" filepath="C:/Users/qt/work/build/qt-creator/src/plugins\coreplugin/locator/ilocatorfilter.h" lineno="138" documented="true" meta="plain" virtual="non" const="true" static="false" final="false" override="false" type="QString" signature="QString shortcutString() const"/>
                <enum name="MatchLevel" fullname="Core::ILocatorFilter::MatchLevel" href="core-ilocatorfilter.html#MatchLevel-enum" status="active" access="public" location="ilocatorfilter.h" filepath="C:/Users/qt/work/build/qt-creator/src/plugins\coreplugin/locator/ilocatorfilter.h" lineno="112" documented="true" scoped="true">
                    <value name="Best" value="0"/>
                    <value name="Better" value="1"/>
                    <value name="Good" value="2"/>
                    <value name="Normal" value="3"/>
                    <value name="Count" value="4"/>
                </enum>
                <enum name="Priority" fullname="Core::ILocatorFilter::Priority" href="core-ilocatorfilter.html#Priority-enum" status="active" access="public" location="ilocatorfilter.h" filepath="C:/Users/qt/work/build/qt-creator/src/plugins\coreplugin/locator/ilocatorfilter.h" lineno="120" documented="true">
                    <value name="Highest" value="0"/>
                    <value name="High" value="1"/>
                    <value name="Medium" value="2"/>
                    <value name="Low" value="3"/>
                </enum>
            </class>
            <class name="IMode" fullname="Core::IMode" href="core-imode.html" status="active" access="public" location="imode.h" filepath="C:/Users/qt/work/build/qt-creator/src/plugins/coreplugin/imode.h" lineno="37" documented="true" groups="mainclasses" bases="Core::IContext" module="QtCreator" brief="Represents a mode in Qt Creator">
                <function name="IMode" fullname="Core::IMode::IMode" href="core-imode.html#IMode" status="active" access="public" location="imode.h" filepath="C:/Users/qt/work/build/qt-creator/src/plugins/coreplugin/imode.h" lineno="48" documented="true" meta="constructor" virtual="non" const="false" static="false" final="false" override="false" type="" signature="IMode(QObject *parent)">
                    <parameter type="QObject *" name="parent" default="nullptr"/>
                </function>
                <function name="displayName" fullname="Core::IMode::displayName" href="core-imode.html#displayName-prop" status="active" access="public" location="imode.h" filepath="C:/Users/qt/work/build/qt-creator/src/plugins/coreplugin/imode.h" lineno="50" meta="plain" virtual="non" const="true" static="false" final="false" override="false" associated-property="displayName" type="QString" signature="QString displayName() const"/>
                <function name="enabledStateChanged" fullname="Core::IMode::enabledStateChanged" href="core-imode.html#enabled-prop" status="active" access="public" location="imode.h" filepath="C:/Users/qt/work/build/qt-creator/src/plugins/coreplugin/imode.h" lineno="65" meta="signal" virtual="non" const="false" static="false" final="false" override="false" associated-property="enabled" type="void" signature="void enabledStateChanged(bool enabled)">
                    <parameter type="bool" name="enabled" default=""/>
                </function>
                <function name="icon" fullname="Core::IMode::icon" href="core-imode.html#icon-prop" status="active" access="public" location="imode.h" filepath="C:/Users/qt/work/build/qt-creator/src/plugins/coreplugin/imode.h" lineno="51" meta="plain" virtual="non" const="true" static="false" final="false" override="false" associated-property="icon" type="QIcon" signature="QIcon icon() const"/>
                <function name="id" fullname="Core::IMode::id" href="core-imode.html#id-prop" status="active" access="public" location="imode.h" filepath="C:/Users/qt/work/build/qt-creator/src/plugins/coreplugin/imode.h" lineno="53" meta="plain" virtual="non" const="true" static="false" final="false" override="false" associated-property="id" type="Utils::Id" signature="Utils::Id id() const"/>
                <function name="isEnabled" fullname="Core::IMode::isEnabled" href="core-imode.html#enabled-prop" status="active" access="public" location="imode.h" filepath="C:/Users/qt/work/build/qt-creator/src/plugins/coreplugin/imode.h" lineno="54" meta="plain" virtual="non" const="true" static="false" final="false" override="false" associated-property="enabled" type="bool" signature="bool isEnabled() const"/>
                <function name="menu" fullname="Core::IMode::menu" href="core-imode.html#menu-prop" status="active" access="public" location="imode.h" filepath="C:/Users/qt/work/build/qt-creator/src/plugins/coreplugin/imode.h" lineno="55" meta="plain" virtual="non" const="true" static="false" final="false" override="false" associated-property="menu" type="QMenu *" signature="QMenu * menu() const"/>
                <function name="priority" fullname="Core::IMode::priority" href="core-imode.html#priority-prop" status="active" access="public" location="imode.h" filepath="C:/Users/qt/work/build/qt-creator/src/plugins/coreplugin/imode.h" lineno="52" meta="plain" virtual="non" const="true" static="false" final="false" override="false" associated-property="priority" type="int" signature="int priority() const"/>
                <function name="setDisplayName" fullname="Core::IMode::setDisplayName" href="core-imode.html#displayName-prop" status="active" access="public" location="imode.h" filepath="C:/Users/qt/work/build/qt-creator/src/plugins/coreplugin/imode.h" lineno="58" meta="plain" virtual="non" const="false" static="false" final="false" override="false" associated-property="displayName" type="void" signature="void setDisplayName(const QString &amp;displayName)">
                    <parameter type="const QString &amp;" name="displayName" default=""/>
                </function>
                <function name="setEnabled" fullname="Core::IMode::setEnabled" href="core-imode.html#enabled-prop" status="active" access="public" location="imode.h" filepath="C:/Users/qt/work/build/qt-creator/src/plugins/coreplugin/imode.h" lineno="57" meta="plain" virtual="non" const="false" static="false" final="false" override="false" associated-property="enabled" type="void" signature="void setEnabled(bool enabled)">
                    <parameter type="bool" name="enabled" default=""/>
                </function>
                <function name="setIcon" fullname="Core::IMode::setIcon" href="core-imode.html#icon-prop" status="active" access="public" location="imode.h" filepath="C:/Users/qt/work/build/qt-creator/src/plugins/coreplugin/imode.h" lineno="59" meta="plain" virtual="non" const="false" static="false" final="false" override="false" associated-property="icon" type="void" signature="void setIcon(const QIcon &amp;icon)">
                    <parameter type="const QIcon &amp;" name="icon" default=""/>
                </function>
                <function name="setId" fullname="Core::IMode::setId" href="core-imode.html#id-prop" status="active" access="public" location="imode.h" filepath="C:/Users/qt/work/build/qt-creator/src/plugins/coreplugin/imode.h" lineno="61" meta="plain" virtual="non" const="false" static="false" final="false" override="false" associated-property="id" type="void" signature="void setId(Utils::Id id)">
                    <parameter type="Utils::Id" name="id" default=""/>
                </function>
                <function name="setMenu" fullname="Core::IMode::setMenu" href="core-imode.html#menu-prop" status="active" access="public" location="imode.h" filepath="C:/Users/qt/work/build/qt-creator/src/plugins/coreplugin/imode.h" lineno="62" meta="plain" virtual="non" const="false" static="false" final="false" override="false" associated-property="menu" type="void" signature="void setMenu(QMenu *menu)">
                    <parameter type="QMenu *" name="menu" default=""/>
                </function>
                <function name="setPriority" fullname="Core::IMode::setPriority" href="core-imode.html#priority-prop" status="active" access="public" location="imode.h" filepath="C:/Users/qt/work/build/qt-creator/src/plugins/coreplugin/imode.h" lineno="60" meta="plain" virtual="non" const="false" static="false" final="false" override="false" associated-property="priority" type="void" signature="void setPriority(int priority)">
                    <parameter type="int" name="priority" default=""/>
                </function>
                <property name="displayName" fullname="Core::IMode::displayName" href="core-imode.html#displayName-prop" status="active" access="public" location="imode.h" filepath="C:/Users/qt/work/build/qt-creator/src/plugins/coreplugin/imode.h" lineno="40" documented="true">
                    <getter name="displayName"/>
                    <setter name="setDisplayName"/>
                </property>
                <property name="enabled" fullname="Core::IMode::enabled" href="core-imode.html#enabled-prop" status="active" access="public" location="imode.h" filepath="C:/Users/qt/work/build/qt-creator/src/plugins/coreplugin/imode.h" lineno="45" documented="true">
                    <getter name="isEnabled"/>
                    <setter name="setEnabled"/>
                    <notifier name="enabledStateChanged"/>
                </property>
                <property name="icon" fullname="Core::IMode::icon" href="core-imode.html#icon-prop" status="active" access="public" location="imode.h" filepath="C:/Users/qt/work/build/qt-creator/src/plugins/coreplugin/imode.h" lineno="41" documented="true">
                    <getter name="icon"/>
                    <setter name="setIcon"/>
                </property>
                <property name="id" fullname="Core::IMode::id" href="core-imode.html#id-prop" status="active" access="public" location="imode.h" filepath="C:/Users/qt/work/build/qt-creator/src/plugins/coreplugin/imode.h" lineno="43" documented="true">
                    <getter name="id"/>
                    <setter name="setId"/>
                </property>
                <property name="menu" fullname="Core::IMode::menu" href="core-imode.html#menu-prop" status="active" access="public" location="imode.h" filepath="C:/Users/qt/work/build/qt-creator/src/plugins/coreplugin/imode.h" lineno="44" documented="true">
                    <getter name="menu"/>
                    <setter name="setMenu"/>
                </property>
                <property name="priority" fullname="Core::IMode::priority" href="core-imode.html#priority-prop" status="active" access="public" location="imode.h" filepath="C:/Users/qt/work/build/qt-creator/src/plugins/coreplugin/imode.h" lineno="42" documented="true">
                    <getter name="priority"/>
                    <setter name="setPriority"/>
                </property>
            </class>
            <class name="INavigationWidgetFactory" fullname="Core::INavigationWidgetFactory" href="core-inavigationwidgetfactory.html" status="active" access="public" location="inavigationwidgetfactory.h" filepath="C:/Users/qt/work/build/qt-creator/src/plugins/coreplugin/inavigationwidgetfactory.h" lineno="54" documented="true" groups="mainclasses" bases="QObject" module="QtCreator" brief="New instances of navigation widgets">
                <function name="INavigationWidgetFactory" fullname="Core::INavigationWidgetFactory::INavigationWidgetFactory" href="core-inavigationwidgetfactory.html#INavigationWidgetFactory" status="active" access="public" location="inavigationwidgetfactory.h" filepath="C:/Users/qt/work/build/qt-creator/src/plugins/coreplugin/inavigationwidgetfactory.h" lineno="59" documented="true" meta="constructor" virtual="non" const="false" static="false" final="false" override="false" type="" signature="INavigationWidgetFactory()"/>
                <function name="activationSequence" fullname="Core::INavigationWidgetFactory::activationSequence" href="core-inavigationwidgetfactory.html#activationSequence" status="active" access="public" location="inavigationwidgetfactory.h" filepath="C:/Users/qt/work/build/qt-creator/src/plugins/coreplugin/inavigationwidgetfactory.h" lineno="72" documented="true" meta="plain" virtual="non" const="true" static="false" final="false" override="false" type="QKeySequence" signature="QKeySequence activationSequence() const"/>
                <function name="createWidget" fullname="Core::INavigationWidgetFactory::createWidget" href="core-inavigationwidgetfactory.html#createWidget" status="active" access="public" location="inavigationwidgetfactory.h" filepath="C:/Users/qt/work/build/qt-creator/src/plugins/coreplugin/inavigationwidgetfactory.h" lineno="78" documented="true" meta="plain" virtual="pure" const="false" static="false" final="false" override="false" type="Core::NavigationView" signature="Core::NavigationView createWidget() = 0"/>
                <function name="displayName" fullname="Core::INavigationWidgetFactory::displayName" href="core-inavigationwidgetfactory.html#displayName" status="active" access="public" location="inavigationwidgetfactory.h" filepath="C:/Users/qt/work/build/qt-creator/src/plugins/coreplugin/inavigationwidgetfactory.h" lineno="69" documented="true" meta="plain" virtual="non" const="true" static="false" final="false" override="false" type="QString" signature="QString displayName() const"/>
                <function name="id" fullname="Core::INavigationWidgetFactory::id" href="core-inavigationwidgetfactory.html#id" status="active" access="public" location="inavigationwidgetfactory.h" filepath="C:/Users/qt/work/build/qt-creator/src/plugins/coreplugin/inavigationwidgetfactory.h" lineno="71" documented="true" meta="plain" virtual="non" const="true" static="false" final="false" override="false" type="Utils::Id" signature="Utils::Id id() const"/>
                <function name="priority" fullname="Core::INavigationWidgetFactory::priority" href="core-inavigationwidgetfactory.html#priority" status="active" access="public" location="inavigationwidgetfactory.h" filepath="C:/Users/qt/work/build/qt-creator/src/plugins/coreplugin/inavigationwidgetfactory.h" lineno="70" documented="true" meta="plain" virtual="non" const="true" static="false" final="false" override="false" type="int" signature="int priority() const"/>
                <function name="restoreSettings" fullname="Core::INavigationWidgetFactory::restoreSettings" href="core-inavigationwidgetfactory.html#restoreSettings" status="active" access="public" location="inavigationwidgetfactory.h" filepath="C:/Users/qt/work/build/qt-creator/src/plugins/coreplugin/inavigationwidgetfactory.h" lineno="81" documented="true" meta="plain" virtual="virtual" const="false" static="false" final="false" override="false" type="void" signature="void restoreSettings(QSettings *settings, int position, QWidget *widget)">
                    <parameter type="QSettings *" name="settings" default=""/>
                    <parameter type="int" name="position" default=""/>
                    <parameter type="QWidget *" name="widget" default=""/>
                </function>
                <function name="saveSettings" fullname="Core::INavigationWidgetFactory::saveSettings" href="core-inavigationwidgetfactory.html#saveSettings" status="active" access="public" location="inavigationwidgetfactory.h" filepath="C:/Users/qt/work/build/qt-creator/src/plugins/coreplugin/inavigationwidgetfactory.h" lineno="80" documented="true" meta="plain" virtual="virtual" const="false" static="false" final="false" override="false" type="void" signature="void saveSettings(Utils::QtcSettings *settings, int position, QWidget *widget)">
                    <parameter type="Utils::QtcSettings *" name="settings" default=""/>
                    <parameter type="int" name="position" default=""/>
                    <parameter type="QWidget *" name="widget" default=""/>
                </function>
                <function name="setActivationSequence" fullname="Core::INavigationWidgetFactory::setActivationSequence" href="core-inavigationwidgetfactory.html#setActivationSequence" status="active" access="public" location="inavigationwidgetfactory.h" filepath="C:/Users/qt/work/build/qt-creator/src/plugins/coreplugin/inavigationwidgetfactory.h" lineno="67" documented="true" meta="plain" virtual="non" const="false" static="false" final="false" override="false" type="void" signature="void setActivationSequence(const QKeySequence &amp;keys)">
                    <parameter type="const QKeySequence &amp;" name="keys" default=""/>
                </function>
                <function name="setDisplayName" fullname="Core::INavigationWidgetFactory::setDisplayName" href="core-inavigationwidgetfactory.html#setDisplayName" status="active" access="public" location="inavigationwidgetfactory.h" filepath="C:/Users/qt/work/build/qt-creator/src/plugins/coreplugin/inavigationwidgetfactory.h" lineno="64" documented="true" meta="plain" virtual="non" const="false" static="false" final="false" override="false" type="void" signature="void setDisplayName(const QString &amp;displayName)">
                    <parameter type="const QString &amp;" name="displayName" default=""/>
                </function>
                <function name="setId" fullname="Core::INavigationWidgetFactory::setId" href="core-inavigationwidgetfactory.html#setId" status="active" access="public" location="inavigationwidgetfactory.h" filepath="C:/Users/qt/work/build/qt-creator/src/plugins/coreplugin/inavigationwidgetfactory.h" lineno="66" documented="true" meta="plain" virtual="non" const="false" static="false" final="false" override="false" type="void" signature="void setId(Utils::Id id)">
                    <parameter type="Utils::Id" name="id" default=""/>
                </function>
                <function name="setPriority" fullname="Core::INavigationWidgetFactory::setPriority" href="core-inavigationwidgetfactory.html#setPriority" status="active" access="public" location="inavigationwidgetfactory.h" filepath="C:/Users/qt/work/build/qt-creator/src/plugins/coreplugin/inavigationwidgetfactory.h" lineno="65" documented="true" meta="plain" virtual="non" const="false" static="false" final="false" override="false" type="void" signature="void setPriority(int priority)">
                    <parameter type="int" name="priority" default=""/>
                </function>
            </class>
            <class name="IOptionsPage" fullname="Core::IOptionsPage" href="core-ioptionspage.html" status="active" access="public" location="ioptionspage.h" filepath="C:/Users/qt/work/build/qt-creator/src/plugins/coreplugin/dialogs/ioptionspage.h" lineno="52" documented="true" groups="mainclasses" bases="QObject" module="QtCreator" brief="Interface for providing pages for the Options dialog (called Preferences on macOS)">
                <function name="IOptionsPage" fullname="Core::IOptionsPage::IOptionsPage" href="core-ioptionspage.html#IOptionsPage" status="active" access="public" location="ioptionspage.h" filepath="C:/Users/qt/work/build/qt-creator/src/plugins/coreplugin/dialogs/ioptionspage.h" lineno="57" documented="true" meta="constructor" virtual="non" const="false" static="false" final="false" override="false" type="" signature="IOptionsPage(QObject *parent, bool registerGlobally)">
                    <parameter type="QObject *" name="parent" default="nullptr"/>
                    <parameter type="bool" name="registerGlobally" default="true"/>
                </function>
                <function name="allOptionsPages" fullname="Core::IOptionsPage::allOptionsPages" href="core-ioptionspage.html#allOptionsPages" status="active" access="public" location="ioptionspage.h" filepath="C:/Users/qt/work/build/qt-creator/src/plugins/coreplugin/dialogs/ioptionspage.h" lineno="60" documented="true" meta="plain" virtual="non" const="false" static="true" final="false" override="false" type="const QList&lt;Core::IOptionsPage *&gt;" signature="const QList&lt;Core::IOptionsPage *&gt; allOptionsPages()"/>
                <function name="apply" fullname="Core::IOptionsPage::apply" href="core-ioptionspage.html#apply" status="active" access="public" location="ioptionspage.h" filepath="C:/Users/qt/work/build/qt-creator/src/plugins/coreplugin/dialogs/ioptionspage.h" lineno="73" documented="true" meta="plain" virtual="virtual" const="false" static="false" final="false" override="false" type="void" signature="void apply()"/>
                <function name="category" fullname="Core::IOptionsPage::category" href="core-ioptionspage.html#category" status="active" access="public" location="ioptionspage.h" filepath="C:/Users/qt/work/build/qt-creator/src/plugins/coreplugin/dialogs/ioptionspage.h" lineno="64" documented="true" meta="plain" virtual="non" const="true" static="false" final="false" override="false" type="Utils::Id" signature="Utils::Id category() const"/>
                <function name="categoryIcon" fullname="Core::IOptionsPage::categoryIcon" href="core-ioptionspage.html#categoryIcon" status="active" access="public" location="ioptionspage.h" filepath="C:/Users/qt/work/build/qt-creator/src/plugins/coreplugin/dialogs/ioptionspage.h" lineno="66" documented="true" meta="plain" virtual="non" const="true" static="false" final="false" override="false" type="QIcon" signature="QIcon categoryIcon() const"/>
                <function name="displayCategory" fullname="Core::IOptionsPage::displayCategory" href="core-ioptionspage.html#displayCategory" status="active" access="public" location="ioptionspage.h" filepath="C:/Users/qt/work/build/qt-creator/src/plugins/coreplugin/dialogs/ioptionspage.h" lineno="65" documented="true" meta="plain" virtual="non" const="true" static="false" final="false" override="false" type="QString" signature="QString displayCategory() const"/>
                <function name="displayName" fullname="Core::IOptionsPage::displayName" href="core-ioptionspage.html#displayName" status="active" access="public" location="ioptionspage.h" filepath="C:/Users/qt/work/build/qt-creator/src/plugins/coreplugin/dialogs/ioptionspage.h" lineno="63" documented="true" meta="plain" virtual="non" const="true" static="false" final="false" override="false" type="QString" signature="QString displayName() const"/>
                <function name="finish" fullname="Core::IOptionsPage::finish" href="core-ioptionspage.html#finish" status="active" access="public" location="ioptionspage.h" filepath="C:/Users/qt/work/build/qt-creator/src/plugins/coreplugin/dialogs/ioptionspage.h" lineno="74" documented="true" meta="plain" virtual="virtual" const="false" static="false" final="false" override="false" type="void" signature="void finish()"/>
                <function name="id" fullname="Core::IOptionsPage::id" href="core-ioptionspage.html#id" status="active" access="public" location="ioptionspage.h" filepath="C:/Users/qt/work/build/qt-creator/src/plugins/coreplugin/dialogs/ioptionspage.h" lineno="62" documented="true" meta="plain" virtual="non" const="true" static="false" final="false" override="false" type="Utils::Id" signature="Utils::Id id() const"/>
                <function name="matches" fullname="Core::IOptionsPage::matches" href="core-ioptionspage.html#matches" status="active" access="public" location="ioptionspage.h" filepath="C:/Users/qt/work/build/qt-creator/src/plugins/coreplugin/dialogs/ioptionspage.h" lineno="71" documented="true" meta="plain" virtual="virtual" const="true" static="false" final="false" override="false" type="bool" signature="bool matches(const QRegularExpression &amp;regexp) const">
                    <parameter type="const QRegularExpression &amp;" name="regexp" default=""/>
                </function>
                <function name="setCategory" fullname="Core::IOptionsPage::setCategory" href="core-ioptionspage.html#setCategory" status="active" access="protected" location="ioptionspage.h" filepath="C:/Users/qt/work/build/qt-creator/src/plugins/coreplugin/dialogs/ioptionspage.h" lineno="79" documented="true" meta="plain" virtual="non" const="false" static="false" final="false" override="false" type="void" signature="void setCategory(Utils::Id category)">
                    <parameter type="Utils::Id" name="category" default=""/>
                </function>
                <function name="setCategoryIcon" fullname="Core::IOptionsPage::setCategoryIcon" href="core-ioptionspage.html#setCategoryIcon" status="active" access="protected" location="ioptionspage.h" filepath="C:/Users/qt/work/build/qt-creator/src/plugins/coreplugin/dialogs/ioptionspage.h" lineno="81" documented="true" meta="plain" virtual="non" const="false" static="false" final="false" override="false" type="void" signature="void setCategoryIcon(const Utils::Icon &amp;categoryIcon)">
                    <parameter type="const Utils::Icon &amp;" name="categoryIcon" default=""/>
                </function>
                <function name="setCategoryIconPath" fullname="Core::IOptionsPage::setCategoryIconPath" href="core-ioptionspage.html#setCategoryIconPath" status="active" access="protected" location="ioptionspage.h" filepath="C:/Users/qt/work/build/qt-creator/src/plugins/coreplugin/dialogs/ioptionspage.h" lineno="82" documented="true" meta="plain" virtual="non" const="false" static="false" final="false" override="false" type="void" signature="void setCategoryIconPath(const Utils::FilePath &amp;categoryIconPath)">
                    <parameter type="const Utils::FilePath &amp;" name="categoryIconPath" default=""/>
                </function>
                <function name="setDisplayCategory" fullname="Core::IOptionsPage::setDisplayCategory" href="core-ioptionspage.html#setDisplayCategory" status="active" access="protected" location="ioptionspage.h" filepath="C:/Users/qt/work/build/qt-creator/src/plugins/coreplugin/dialogs/ioptionspage.h" lineno="80" documented="true" meta="plain" virtual="non" const="false" static="false" final="false" override="false" type="void" signature="void setDisplayCategory(const QString &amp;displayCategory)">
                    <parameter type="const QString &amp;" name="displayCategory" default=""/>
                </function>
                <function name="setDisplayName" fullname="Core::IOptionsPage::setDisplayName" href="core-ioptionspage.html#setDisplayName" status="active" access="protected" location="ioptionspage.h" filepath="C:/Users/qt/work/build/qt-creator/src/plugins/coreplugin/dialogs/ioptionspage.h" lineno="78" documented="true" meta="plain" virtual="non" const="false" static="false" final="false" override="false" type="void" signature="void setDisplayName(const QString &amp;displayName)">
                    <parameter type="const QString &amp;" name="displayName" default=""/>
                </function>
                <function name="setId" fullname="Core::IOptionsPage::setId" href="core-ioptionspage.html#setId" status="active" access="protected" location="ioptionspage.h" filepath="C:/Users/qt/work/build/qt-creator/src/plugins/coreplugin/dialogs/ioptionspage.h" lineno="77" documented="true" meta="plain" virtual="non" const="false" static="false" final="false" override="false" type="void" signature="void setId(Utils::Id id)">
                    <parameter type="Utils::Id" name="id" default=""/>
                </function>
                <function name="setWidgetCreator" fullname="Core::IOptionsPage::setWidgetCreator" href="core-ioptionspage.html#setWidgetCreator" status="active" access="public" location="ioptionspage.h" filepath="C:/Users/qt/work/build/qt-creator/src/plugins/coreplugin/dialogs/ioptionspage.h" lineno="69" documented="true" meta="plain" virtual="non" const="false" static="false" final="false" override="false" type="void" signature="void setWidgetCreator(const Core::IOptionsPage::WidgetCreator &amp;widgetCreator)">
                    <parameter type="const Core::IOptionsPage::WidgetCreator &amp;" name="widgetCreator" default=""/>
                </function>
                <function name="widget" fullname="Core::IOptionsPage::widget" href="core-ioptionspage.html#widget" status="active" access="public" location="ioptionspage.h" filepath="C:/Users/qt/work/build/qt-creator/src/plugins/coreplugin/dialogs/ioptionspage.h" lineno="72" documented="true" meta="plain" virtual="virtual" const="false" static="false" final="false" override="false" type="QWidget *" signature="QWidget * widget()"/>
            </class>
            <class name="IOutputPane" fullname="Core::IOutputPane" href="core-ioutputpane.html" status="active" access="public" location="ioutputpane.h" filepath="C:/Users/qt/work/build/qt-creator/src/plugins\coreplugin/ioutputpane.h" lineno="46" documented="true" groups="mainclasses" bases="QObject" module="QtCreator" brief="Interface for providing Output panes">
                <function name="IOutputPane" fullname="Core::IOutputPane::IOutputPane" href="core-ioutputpane.html#IOutputPane" status="active" access="public" location="ioutputpane.h" filepath="C:/Users/qt/work/build/qt-creator/src/plugins\coreplugin/ioutputpane.h" lineno="51" documented="true" meta="constructor" virtual="non" const="false" static="false" final="false" override="false" type="" signature="IOutputPane(QObject *parent)">
                    <parameter type="QObject *" name="parent" default="nullptr"/>
                </function>
                <function name="canFocus" fullname="Core::IOutputPane::canFocus" href="core-ioutputpane.html#canFocus" status="active" access="public" location="ioutputpane.h" filepath="C:/Users/qt/work/build/qt-creator/src/plugins\coreplugin/ioutputpane.h" lineno="65" documented="true" meta="plain" virtual="pure" const="true" static="false" final="false" override="false" type="bool" signature="bool canFocus() const = 0"/>
                <function name="canNavigate" fullname="Core::IOutputPane::canNavigate" href="core-ioutputpane.html#canNavigate" status="active" access="public" location="ioutputpane.h" filepath="C:/Users/qt/work/build/qt-creator/src/plugins\coreplugin/ioutputpane.h" lineno="67" documented="true" meta="plain" virtual="pure" const="true" static="false" final="false" override="false" type="bool" signature="bool canNavigate() const = 0"/>
                <function name="canNext" fullname="Core::IOutputPane::canNext" href="core-ioutputpane.html#canNext" status="active" access="public" location="ioutputpane.h" filepath="C:/Users/qt/work/build/qt-creator/src/plugins\coreplugin/ioutputpane.h" lineno="68" documented="true" meta="plain" virtual="pure" const="true" static="false" final="false" override="false" type="bool" signature="bool canNext() const = 0"/>
                <function name="canPrevious" fullname="Core::IOutputPane::canPrevious" href="core-ioutputpane.html#canPrevious" status="active" access="public" location="ioutputpane.h" filepath="C:/Users/qt/work/build/qt-creator/src/plugins\coreplugin/ioutputpane.h" lineno="69" documented="true" meta="plain" virtual="pure" const="true" static="false" final="false" override="false" type="bool" signature="bool canPrevious() const = 0"/>
                <function name="clearContents" fullname="Core::IOutputPane::clearContents" href="core-ioutputpane.html#clearContents" status="active" access="public" location="ioutputpane.h" filepath="C:/Users/qt/work/build/qt-creator/src/plugins\coreplugin/ioutputpane.h" lineno="60" documented="true" meta="plain" virtual="pure" const="false" static="false" final="false" override="false" type="void" signature="void clearContents() = 0"/>
                <function name="displayName" fullname="Core::IOutputPane::displayName" href="core-ioutputpane.html#displayName" status="active" access="public" location="ioutputpane.h" filepath="C:/Users/qt/work/build/qt-creator/src/plugins\coreplugin/ioutputpane.h" lineno="56" documented="true" meta="plain" virtual="pure" const="true" static="false" final="false" override="false" type="QString" signature="QString displayName() const = 0"/>
                <function name="flash" fullname="Core::IOutputPane::flash" href="core-ioutputpane.html#flash" status="active" access="public" location="ioutputpane.h" filepath="C:/Users/qt/work/build/qt-creator/src/plugins\coreplugin/ioutputpane.h" lineno="85" documented="true" meta="slot" virtual="non" const="false" static="false" final="false" override="false" type="void" signature="void flash()"/>
                <function name="flashButton" fullname="Core::IOutputPane::flashButton" href="core-ioutputpane.html#flashButton" status="active" access="public" location="ioutputpane.h" filepath="C:/Users/qt/work/build/qt-creator/src/plugins\coreplugin/ioutputpane.h" lineno="93" documented="true" meta="signal" virtual="non" const="false" static="false" final="false" override="false" type="void" signature="void flashButton()"/>
                <function name="goToNext" fullname="Core::IOutputPane::goToNext" href="core-ioutputpane.html#goToNext" status="active" access="public" location="ioutputpane.h" filepath="C:/Users/qt/work/build/qt-creator/src/plugins\coreplugin/ioutputpane.h" lineno="70" documented="true" meta="plain" virtual="pure" const="false" static="false" final="false" override="false" type="void" signature="void goToNext() = 0"/>
                <function name="goToPrev" fullname="Core::IOutputPane::goToPrev" href="core-ioutputpane.html#goToPrev" status="active" access="public" location="ioutputpane.h" filepath="C:/Users/qt/work/build/qt-creator/src/plugins\coreplugin/ioutputpane.h" lineno="71" documented="true" meta="plain" virtual="pure" const="false" static="false" final="false" override="false" type="void" signature="void goToPrev() = 0"/>
                <function name="hasFocus" fullname="Core::IOutputPane::hasFocus" href="core-ioutputpane.html#hasFocus" status="active" access="public" location="ioutputpane.h" filepath="C:/Users/qt/work/build/qt-creator/src/plugins\coreplugin/ioutputpane.h" lineno="64" documented="true" meta="plain" virtual="pure" const="true" static="false" final="false" override="false" type="bool" signature="bool hasFocus() const = 0"/>
                <function name="hide" fullname="Core::IOutputPane::hide" href="core-ioutputpane.html#hide" status="active" access="public" location="ioutputpane.h" filepath="C:/Users/qt/work/build/qt-creator/src/plugins\coreplugin/ioutputpane.h" lineno="82" documented="true" meta="slot" virtual="non" const="false" static="false" final="false" override="false" type="void" signature="void hide()"/>
                <function name="hidePage" fullname="Core::IOutputPane::hidePage" href="core-ioutputpane.html#hidePage" status="active" access="public" location="ioutputpane.h" filepath="C:/Users/qt/work/build/qt-creator/src/plugins\coreplugin/ioutputpane.h" lineno="90" documented="true" meta="signal" virtual="non" const="false" static="false" final="false" override="false" type="void" signature="void hidePage()"/>
                <function name="navigateStateChanged" fullname="Core::IOutputPane::navigateStateChanged" href="core-ioutputpane.html#navigateStateChanged" status="active" access="public" location="ioutputpane.h" filepath="C:/Users/qt/work/build/qt-creator/src/plugins\coreplugin/ioutputpane.h" lineno="84" documented="true" meta="slot" virtual="non" const="false" static="false" final="false" override="false" type="void" signature="void navigateStateChanged()"/>
                <function name="navigateStateUpdate" fullname="Core::IOutputPane::navigateStateUpdate" href="core-ioutputpane.html#navigateStateUpdate" status="active" access="public" location="ioutputpane.h" filepath="C:/Users/qt/work/build/qt-creator/src/plugins\coreplugin/ioutputpane.h" lineno="92" documented="true" meta="signal" virtual="non" const="false" static="false" final="false" override="false" type="void" signature="void navigateStateUpdate()"/>
                <function name="outputWidget" fullname="Core::IOutputPane::outputWidget" href="core-ioutputpane.html#outputWidget" status="active" access="public" location="ioutputpane.h" filepath="C:/Users/qt/work/build/qt-creator/src/plugins\coreplugin/ioutputpane.h" lineno="54" documented="true" meta="plain" virtual="pure" const="false" static="false" final="false" override="false" type="QWidget *" signature="QWidget * outputWidget(QWidget *parent) = 0">
                    <parameter type="QWidget *" name="parent" default=""/>
                </function>
                <function name="popup" fullname="Core::IOutputPane::popup" href="core-ioutputpane.html#popup" status="active" access="public" location="ioutputpane.h" filepath="C:/Users/qt/work/build/qt-creator/src/plugins\coreplugin/ioutputpane.h" lineno="80" documented="true" meta="slot" virtual="non" const="false" static="false" final="false" override="false" type="void" signature="void popup(int flags)">
                    <parameter type="int" name="flags" default=""/>
                </function>
                <function name="priorityInStatusBar" fullname="Core::IOutputPane::priorityInStatusBar" href="core-ioutputpane.html#priorityInStatusBar" status="active" access="public" location="ioutputpane.h" filepath="C:/Users/qt/work/build/qt-creator/src/plugins\coreplugin/ioutputpane.h" lineno="58" documented="true" meta="plain" virtual="pure" const="true" static="false" final="false" override="false" type="int" signature="int priorityInStatusBar() const = 0"/>
                <function name="setBadgeNumber" fullname="Core::IOutputPane::setBadgeNumber" href="core-ioutputpane.html#setBadgeNumber" status="active" access="public" location="ioutputpane.h" filepath="C:/Users/qt/work/build/qt-creator/src/plugins\coreplugin/ioutputpane.h" lineno="94" documented="true" meta="signal" virtual="non" const="false" static="false" final="false" override="false" type="void" signature="void setBadgeNumber(int number)">
                    <parameter type="int" name="number" default=""/>
                </function>
                <function name="setFocus" fullname="Core::IOutputPane::setFocus" href="core-ioutputpane.html#setFocus" status="active" access="public" location="ioutputpane.h" filepath="C:/Users/qt/work/build/qt-creator/src/plugins\coreplugin/ioutputpane.h" lineno="63" documented="true" meta="plain" virtual="pure" const="false" static="false" final="false" override="false" type="void" signature="void setFocus() = 0"/>
                <function name="setIconBadgeNumber" fullname="Core::IOutputPane::setIconBadgeNumber" href="core-ioutputpane.html#setIconBadgeNumber" status="active" access="public" location="ioutputpane.h" filepath="C:/Users/qt/work/build/qt-creator/src/plugins\coreplugin/ioutputpane.h" lineno="86" documented="true" meta="slot" virtual="non" const="false" static="false" final="false" override="false" type="void" signature="void setIconBadgeNumber(int number)">
                    <parameter type="int" name="number" default=""/>
                </function>
                <function name="showPage" fullname="Core::IOutputPane::showPage" href="core-ioutputpane.html#showPage" status="active" access="public" location="ioutputpane.h" filepath="C:/Users/qt/work/build/qt-creator/src/plugins\coreplugin/ioutputpane.h" lineno="89" documented="true" meta="signal" virtual="non" const="false" static="false" final="false" override="false" type="void" signature="void showPage(int flags)">
                    <parameter type="int" name="flags" default=""/>
                </function>
                <function name="toggle" fullname="Core::IOutputPane::toggle" href="core-ioutputpane.html#toggle" status="active" access="public" location="ioutputpane.h" filepath="C:/Users/qt/work/build/qt-creator/src/plugins\coreplugin/ioutputpane.h" lineno="83" documented="true" meta="slot" virtual="non" const="false" static="false" final="false" override="false" type="void" signature="void toggle(int flags)">
                    <parameter type="int" name="flags" default=""/>
                </function>
                <function name="togglePage" fullname="Core::IOutputPane::togglePage" href="core-ioutputpane.html#togglePage" status="active" access="public" location="ioutputpane.h" filepath="C:/Users/qt/work/build/qt-creator/src/plugins\coreplugin/ioutputpane.h" lineno="91" documented="true" meta="signal" virtual="non" const="false" static="false" final="false" override="false" type="void" signature="void togglePage(int flags)">
                    <parameter type="int" name="flags" default=""/>
                </function>
                <function name="toolBarWidgets" fullname="Core::IOutputPane::toolBarWidgets" href="core-ioutputpane.html#toolBarWidgets" status="active" access="public" location="ioutputpane.h" filepath="C:/Users/qt/work/build/qt-creator/src/plugins\coreplugin/ioutputpane.h" lineno="55" documented="true" meta="plain" virtual="virtual" const="true" static="false" final="false" override="false" type="QList&lt;QWidget *&gt;" signature="QList&lt;QWidget *&gt; toolBarWidgets() const"/>
                <function name="visibilityChanged" fullname="Core::IOutputPane::visibilityChanged" href="core-ioutputpane.html#visibilityChanged" status="active" access="public" location="ioutputpane.h" filepath="C:/Users/qt/work/build/qt-creator/src/plugins\coreplugin/ioutputpane.h" lineno="61" documented="true" meta="plain" virtual="virtual" const="false" static="false" final="false" override="false" type="void" signature="void visibilityChanged(bool visible)">
                    <parameter type="bool" name="visible" default=""/>
                </function>
                <enum name="Flag" fullname="Core::IOutputPane::Flag" href="core-ioutputpane.html#Flag-enum" status="active" access="public" location="ioutputpane.h" filepath="C:/Users/qt/work/build/qt-creator/src/plugins\coreplugin/ioutputpane.h" lineno="76" documented="true" typedef="Core::IOutputPane::Flags">
                    <value name="NoModeSwitch" value="0"/>
                    <value name="ModeSwitch" value="1"/>
                    <value name="WithFocus" value="2"/>
                    <value name="EnsureSizeHint" value="4"/>
                </enum>
                <typedef name="Flags" fullname="Core::IOutputPane::Flags" href="core-ioutputpane.html#Flag-enum" status="active" access="public" location="ioutputpane.h" filepath="C:/Users/qt/work/build/qt-creator/src/plugins\coreplugin/ioutputpane.h" lineno="77" enum="Core::IOutputPane::Flag"/>
            </class>
            <class name="IWizardFactory" fullname="Core::IWizardFactory" href="core-iwizardfactory.html" status="active" access="public" location="iwizardfactory.h" filepath="C:/Users/qt/work/build/qt-creator/src/plugins\coreplugin/iwizardfactory.h" lineno="49" documented="true" groups="mainclasses" bases="QObject" module="QtCreator" brief="The base class for all wizard factories">
                <function name="category" fullname="Core::IWizardFactory::category" href="core-iwizardfactory.html#category" status="active" access="public" location="iwizardfactory.h" filepath="C:/Users/qt/work/build/qt-creator/src/plugins\coreplugin/iwizardfactory.h" lineno="70" documented="true" meta="plain" virtual="non" const="true" static="false" final="false" override="false" type="QString" signature="QString category() const"/>
                <function name="description" fullname="Core::IWizardFactory::description" href="core-iwizardfactory.html#description" status="active" access="public" location="iwizardfactory.h" filepath="C:/Users/qt/work/build/qt-creator/src/plugins\coreplugin/iwizardfactory.h" lineno="68" documented="true" meta="plain" virtual="non" const="true" static="false" final="false" override="false" type="QString" signature="QString description() const"/>
                <function name="displayCategory" fullname="Core::IWizardFactory::displayCategory" href="core-iwizardfactory.html#displayCategory" status="active" access="public" location="iwizardfactory.h" filepath="C:/Users/qt/work/build/qt-creator/src/plugins\coreplugin/iwizardfactory.h" lineno="71" documented="true" meta="plain" virtual="non" const="true" static="false" final="false" override="false" type="QString" signature="QString displayCategory() const"/>
                <function name="displayName" fullname="Core::IWizardFactory::displayName" href="core-iwizardfactory.html#displayName" status="active" access="public" location="iwizardfactory.h" filepath="C:/Users/qt/work/build/qt-creator/src/plugins\coreplugin/iwizardfactory.h" lineno="69" documented="true" meta="plain" virtual="non" const="true" static="false" final="false" override="false" type="QString" signature="QString displayName() const"/>
                <function name="icon" fullname="Core::IWizardFactory::icon" href="core-iwizardfactory.html#icon" status="active" access="public" location="iwizardfactory.h" filepath="C:/Users/qt/work/build/qt-creator/src/plugins\coreplugin/iwizardfactory.h" lineno="66" documented="true" meta="plain" virtual="non" const="true" static="false" final="false" override="false" type="QIcon" signature="QIcon icon() const"/>
                <function name="id" fullname="Core::IWizardFactory::id" href="core-iwizardfactory.html#id" status="active" access="public" location="iwizardfactory.h" filepath="C:/Users/qt/work/build/qt-creator/src/plugins\coreplugin/iwizardfactory.h" lineno="64" documented="true" meta="plain" virtual="non" const="true" static="false" final="false" override="false" type="Utils::Id" signature="Utils::Id id() const"/>
                <function name="kind" fullname="Core::IWizardFactory::kind" href="core-iwizardfactory.html#kind" status="active" access="public" location="iwizardfactory.h" filepath="C:/Users/qt/work/build/qt-creator/src/plugins\coreplugin/iwizardfactory.h" lineno="65" documented="true" meta="plain" virtual="non" const="true" static="false" final="false" override="false" type="Core::IWizardFactory::WizardKind" signature="Core::IWizardFactory::WizardKind kind() const"/>
                <function name="runWizard" fullname="Core::IWizardFactory::runWizard" href="core-iwizardfactory.html#runWizard" status="active" access="public" location="iwizardfactory.h" filepath="C:/Users/qt/work/build/qt-creator/src/plugins\coreplugin/iwizardfactory.h" lineno="96" documented="true" meta="plain" virtual="non" const="false" static="false" final="false" override="false" type="Utils::Wizard *" signature="Utils::Wizard * runWizard(const Utils::FilePath &amp;path, QWidget *parent, Utils::Id platform, const QVariantMap &amp;variables, bool showWizard)">
                    <parameter type="const Utils::FilePath &amp;" name="path" default=""/>
                    <parameter type="QWidget *" name="parent" default=""/>
                    <parameter type="Utils::Id" name="platform" default=""/>
                    <parameter type="const QVariantMap &amp;" name="variables" default=""/>
                    <parameter type="bool" name="showWizard" default="true"/>
                </function>
                <enum name="WizardKind" fullname="Core::IWizardFactory::WizardKind" href="core-iwizardfactory.html#WizardKind-enum" status="active" access="public" location="iwizardfactory.h" filepath="C:/Users/qt/work/build/qt-creator/src/plugins\coreplugin/iwizardfactory.h" lineno="54" documented="true">
                    <value name="FileWizard" value="0x01"/>
                    <value name="ProjectWizard" value="0x02"/>
                </enum>
                <typedef name="WizardFlags" fullname="Core::IWizardFactory::WizardFlags" href="core-iwizardfactory.html#WizardFlag-enum" status="active" access="public" location="iwizardfactory.h" filepath="C:/Users/qt/work/build/qt-creator/src/plugins\coreplugin/iwizardfactory.h" lineno="62" enum="Core::IWizardFactory::WizardFlag"/>
            </class>
            <class name="MessageManager" fullname="Core::MessageManager" href="core-messagemanager.html" status="active" access="public" location="messagemanager.h" filepath="C:/Users/qt/work/build/qt-creator/src/plugins/coreplugin/messagemanager.h" lineno="42" documented="true" groups="mainclasses" bases="QObject" module="QtCreator" brief="Used to post messages in the General Messages pane">
                <function name="writeDisrupting" fullname="Core::MessageManager::writeDisrupting" href="core-messagemanager.html#writeDisrupting" status="active" access="public" location="messagemanager.h" filepath="C:/Users/qt/work/build/qt-creator/src/plugins/coreplugin/messagemanager.h" lineno="54" documented="true" meta="plain" virtual="non" const="false" static="true" final="false" override="false" type="void" signature="void writeDisrupting(const QString &amp;message)">
                    <parameter type="const QString &amp;" name="message" default=""/>
                </function>
                <function name="writeDisrupting" fullname="Core::MessageManager::writeDisrupting" href="core-messagemanager.html#writeDisrupting-1" status="active" access="public" location="messagemanager.h" filepath="C:/Users/qt/work/build/qt-creator/src/plugins/coreplugin/messagemanager.h" lineno="58" documented="true" meta="plain" virtual="non" const="false" static="true" final="false" override="false" overload="true" overload-number="1" type="void" signature="void writeDisrupting(const QStringList &amp;messages)">
                    <parameter type="const QStringList &amp;" name="messages" default=""/>
                </function>
                <function name="writeFlashing" fullname="Core::MessageManager::writeFlashing" href="core-messagemanager.html#writeFlashing" status="active" access="public" location="messagemanager.h" filepath="C:/Users/qt/work/build/qt-creator/src/plugins/coreplugin/messagemanager.h" lineno="53" documented="true" meta="plain" virtual="non" const="false" static="true" final="false" override="false" type="void" signature="void writeFlashing(const QString &amp;message)">
                    <parameter type="const QString &amp;" name="message" default=""/>
                </function>
                <function name="writeFlashing" fullname="Core::MessageManager::writeFlashing" href="core-messagemanager.html#writeFlashing-1" status="active" access="public" location="messagemanager.h" filepath="C:/Users/qt/work/build/qt-creator/src/plugins/coreplugin/messagemanager.h" lineno="57" documented="true" meta="plain" virtual="non" const="false" static="true" final="false" override="false" overload="true" overload-number="1" type="void" signature="void writeFlashing(const QStringList &amp;messages)">
                    <parameter type="const QStringList &amp;" name="messages" default=""/>
                </function>
                <function name="writeSilently" fullname="Core::MessageManager::writeSilently" href="core-messagemanager.html#writeSilently" status="active" access="public" location="messagemanager.h" filepath="C:/Users/qt/work/build/qt-creator/src/plugins/coreplugin/messagemanager.h" lineno="52" documented="true" meta="plain" virtual="non" const="false" static="true" final="false" override="false" type="void" signature="void writeSilently(const QString &amp;message)">
                    <parameter type="const QString &amp;" name="message" default=""/>
                </function>
                <function name="writeSilently" fullname="Core::MessageManager::writeSilently" href="core-messagemanager.html#writeSilently-1" status="active" access="public" location="messagemanager.h" filepath="C:/Users/qt/work/build/qt-creator/src/plugins/coreplugin/messagemanager.h" lineno="56" documented="true" meta="plain" virtual="non" const="false" static="true" final="false" override="false" overload="true" overload-number="1" type="void" signature="void writeSilently(const QStringList &amp;messages)">
                    <parameter type="const QStringList &amp;" name="messages" default=""/>
                </function>
            </class>
            <class name="MiniSplitter" fullname="Core::MiniSplitter" href="core-minisplitter.html" status="active" access="public" location="minisplitter.h" filepath="C:/Users/qt/work/build/qt-creator/src/plugins/coreplugin/minisplitter.h" lineno="39" documented="true" bases="QSplitter" module="QtCreator" brief="Simple helper-class to obtain macOS style 1-pixel wide splitters">
                <enum name="SplitterStyle" fullname="Core::MiniSplitter::SplitterStyle" href="core-minisplitter.html#SplitterStyle-enum" status="active" access="public" location="minisplitter.h" filepath="C:/Users/qt/work/build/qt-creator/src/plugins/coreplugin/minisplitter.h" lineno="42" documented="true">
                    <value name="Dark" value="0"/>
                    <value name="Light" value="1"/>
                </enum>
            </class>
            <class name="ModeManager" fullname="Core::ModeManager" href="core-modemanager.html" status="active" access="public" location="modemanager.h" filepath="C:/Users/qt/work/build/qt-creator/src/plugins/coreplugin/modemanager.h" lineno="47" documented="true" groups="mainclasses" bases="QObject" module="QtCreator" brief="Manages the activation of modes and the actions in the mode selector's tool bar">
                <function name="activateMode" fullname="Core::ModeManager::activateMode" href="core-modemanager.html#activateMode" status="active" access="public" location="modemanager.h" filepath="C:/Users/qt/work/build/qt-creator/src/plugins/coreplugin/modemanager.h" lineno="66" documented="true" meta="plain" virtual="non" const="false" static="true" final="false" override="false" type="void" signature="void activateMode(Utils::Id id)">
                    <parameter type="Utils::Id" name="id" default=""/>
                </function>
                <function name="addAction" fullname="Core::ModeManager::addAction" href="core-modemanager.html#addAction" status="active" access="public" location="modemanager.h" filepath="C:/Users/qt/work/build/qt-creator/src/plugins/coreplugin/modemanager.h" lineno="63" documented="true" meta="plain" virtual="non" const="false" static="true" final="false" override="false" type="void" signature="void addAction(QAction *action, int priority)">
                    <parameter type="QAction *" name="action" default=""/>
                    <parameter type="int" name="priority" default=""/>
                </function>
                <function name="currentMode" fullname="Core::ModeManager::currentMode" href="core-modemanager.html#currentMode" status="active" access="public" location="modemanager.h" filepath="C:/Users/qt/work/build/qt-creator/src/plugins/coreplugin/modemanager.h" lineno="60" documented="true" meta="plain" virtual="non" const="false" static="true" final="false" override="false" type="Core::IMode *" signature="Core::IMode * currentMode()"/>
                <function name="currentModeAboutToChange" fullname="Core::ModeManager::currentModeAboutToChange" href="core-modemanager.html#currentModeAboutToChange" status="active" access="public" location="modemanager.h" filepath="C:/Users/qt/work/build/qt-creator/src/plugins/coreplugin/modemanager.h" lineno="77" documented="true" meta="signal" virtual="non" const="false" static="false" final="false" override="false" type="void" signature="void currentModeAboutToChange(Utils::Id mode)">
                    <parameter type="Utils::Id" name="mode" default=""/>
                </function>
                <function name="currentModeChanged" fullname="Core::ModeManager::currentModeChanged" href="core-modemanager.html#currentModeChanged" status="active" access="public" location="modemanager.h" filepath="C:/Users/qt/work/build/qt-creator/src/plugins/coreplugin/modemanager.h" lineno="80" documented="true" meta="signal" virtual="non" const="false" static="false" final="false" override="false" type="void" signature="void currentModeChanged(Utils::Id mode, Utils::Id oldMode)">
                    <parameter type="Utils::Id" name="mode" default=""/>
                    <parameter type="Utils::Id" name="oldMode" default="{}"/>
                </function>
                <function name="currentModeId" fullname="Core::ModeManager::currentModeId" href="core-modemanager.html#currentModeId" status="active" access="public" location="modemanager.h" filepath="C:/Users/qt/work/build/qt-creator/src/plugins/coreplugin/modemanager.h" lineno="61" documented="true" meta="plain" virtual="non" const="false" static="true" final="false" override="false" type="Utils::Id" signature="Utils::Id currentModeId()"/>
                <function name="instance" fullname="Core::ModeManager::instance" href="core-modemanager.html#instance" status="active" access="public" location="modemanager.h" filepath="C:/Users/qt/work/build/qt-creator/src/plugins/coreplugin/modemanager.h" lineno="58" documented="true" meta="plain" virtual="non" const="false" static="true" final="false" override="false" type="Core::ModeManager *" signature="Core::ModeManager * instance()"/>
            </class>
            <struct name="NavigationView" fullname="Core::NavigationView" href="core-navigationview.html" status="active" access="public" location="inavigationwidgetfactory.h" filepath="C:/Users/qt/work/build/qt-creator/src/plugins/coreplugin/inavigationwidgetfactory.h" lineno="48" documented="true" module="Qt Creator" brief="C struct for wrapping a widget and a list of tool buttons. Wrapping the widget that is shown in the content area of the navigation widget and a list of tool buttons that is shown in the header above it"/>
            <class name="NonResizingSplitter" fullname="Core::NonResizingSplitter" href="core-nonresizingsplitter.html" status="active" access="public" location="minisplitter.h" filepath="C:/Users/qt/work/build/qt-creator/src/plugins/coreplugin/minisplitter.h" lineno="54" documented="true" bases="Core::MiniSplitter" module="QtCreator" brief="MiniSplitter that keeps its first widget's size fixed when it is resized">
                <function name="NonResizingSplitter" fullname="Core::NonResizingSplitter::NonResizingSplitter" href="core-nonresizingsplitter.html#NonResizingSplitter" status="active" access="public" location="minisplitter.h" filepath="C:/Users/qt/work/build/qt-creator/src/plugins/coreplugin/minisplitter.h" lineno="57" documented="true" meta="constructor" virtual="non" const="false" static="false" final="false" override="false" type="" signature="NonResizingSplitter(QWidget *parent, Core::MiniSplitter::SplitterStyle style)">
                    <parameter type="QWidget *" name="parent" default=""/>
                    <parameter type="Core::MiniSplitter::SplitterStyle" name="style" default="Light"/>
                </function>
            </class>
            <class name="ProgressManager" fullname="Core::ProgressManager" href="core-progressmanager.html" status="active" access="public" location="progressmanager.h" filepath="C:/Users/qt/work/build/qt-creator/src/plugins/coreplugin/progressmanager/progressmanager.h" lineno="43" documented="true" groups="mainclasses" bases="QObject" module="QtCreator" brief="Used to show a user interface for running tasks in Qt Creator">
                <contents name="registering-a-task" title="Registering a task" level="1"/>
                <contents name="create-a-threaded-task-with-qtconcurrent" title="Create a threaded task with QtConcurrent" level="2"/>
                <contents name="manually-create-qtconcurrent-objects-for-your-thread" title="Manually create QtConcurrent objects for your thread" level="2"/>
                <contents name="customizing-progress-appearance" title="Customizing progress appearance" level="1"/>
                <function name="addTask" fullname="Core::ProgressManager::addTask" href="core-progressmanager.html#addTask-1" status="active" access="public" location="progressmanager.h" filepath="C:/Users/qt/work/build/qt-creator/src/plugins/coreplugin/progressmanager/progressmanager.h" lineno="61" documented="true" meta="plain" virtual="non" const="false" static="true" final="false" override="false" overload="true" overload-number="1" type="Core::FutureProgress *" signature="Core::FutureProgress * addTask(const QFuture&lt;void&gt; &amp;future, const QString &amp;title, Utils::Id type, Core::ProgressManager::ProgressFlags flags)">
                    <parameter type="const QFuture&lt;void&gt; &amp;" name="future" default=""/>
                    <parameter type="const QString &amp;" name="title" default=""/>
                    <parameter type="Utils::Id" name="type" default=""/>
                    <parameter type="Core::ProgressManager::ProgressFlags" name="flags" default="{}"/>
                </function>
                <function name="addTimedTask" fullname="Core::ProgressManager::addTimedTask" href="core-progressmanager.html#addTimedTask" status="active" access="public" location="progressmanager.h" filepath="C:/Users/qt/work/build/qt-creator/src/plugins/coreplugin/progressmanager/progressmanager.h" lineno="63" documented="true" meta="plain" virtual="non" const="false" static="true" final="false" override="false" type="Core::FutureProgress *" signature="Core::FutureProgress * addTimedTask(const QFutureInterface&lt;void&gt; &amp;futureInterface, const QString &amp;title, Utils::Id type, int expectedSeconds, Core::ProgressManager::ProgressFlags flags)">
                    <parameter type="const QFutureInterface&lt;void&gt; &amp;" name="futureInterface" default=""/>
                    <parameter type="const QString &amp;" name="title" default=""/>
                    <parameter type="Utils::Id" name="type" default=""/>
                    <parameter type="int" name="expectedSeconds" default=""/>
                    <parameter type="Core::ProgressManager::ProgressFlags" name="flags" default="{}"/>
                </function>
                <function name="allTasksFinished" fullname="Core::ProgressManager::allTasksFinished" href="core-progressmanager.html#allTasksFinished" status="active" access="public" location="progressmanager.h" filepath="C:/Users/qt/work/build/qt-creator/src/plugins/coreplugin/progressmanager/progressmanager.h" lineno="72" documented="true" meta="signal" virtual="non" const="false" static="false" final="false" override="false" type="void" signature="void allTasksFinished(Utils::Id type)">
                    <parameter type="Utils::Id" name="type" default=""/>
                </function>
                <function name="cancelTasks" fullname="Core::ProgressManager::cancelTasks" href="core-progressmanager.html#cancelTasks" status="active" access="public" location="progressmanager.h" filepath="C:/Users/qt/work/build/qt-creator/src/plugins/coreplugin/progressmanager/progressmanager.h" lineno="68" documented="true" meta="slot" virtual="non" const="false" static="true" final="false" override="false" type="void" signature="void cancelTasks(Utils::Id type)">
                    <parameter type="Utils::Id" name="type" default=""/>
                </function>
                <function name="instance" fullname="Core::ProgressManager::instance" href="core-progressmanager.html#instance" status="active" access="public" location="progressmanager.h" filepath="C:/Users/qt/work/build/qt-creator/src/plugins/coreplugin/progressmanager/progressmanager.h" lineno="53" documented="true" meta="plain" virtual="non" const="false" static="true" final="false" override="false" type="Core::ProgressManager *" signature="Core::ProgressManager * instance()"/>
                <function name="setApplicationLabel" fullname="Core::ProgressManager::setApplicationLabel" href="core-progressmanager.html#setApplicationLabel" status="active" access="public" location="progressmanager.h" filepath="C:/Users/qt/work/build/qt-creator/src/plugins/coreplugin/progressmanager/progressmanager.h" lineno="65" documented="true" meta="plain" virtual="non" const="false" static="true" final="false" override="false" type="void" signature="void setApplicationLabel(const QString &amp;text)">
                    <parameter type="const QString &amp;" name="text" default=""/>
                </function>
                <function name="taskStarted" fullname="Core::ProgressManager::taskStarted" href="core-progressmanager.html#taskStarted" status="active" access="public" location="progressmanager.h" filepath="C:/Users/qt/work/build/qt-creator/src/plugins/coreplugin/progressmanager/progressmanager.h" lineno="71" documented="true" meta="signal" virtual="non" const="false" static="false" final="false" override="false" type="void" signature="void taskStarted(Utils::Id type)">
                    <parameter type="Utils::Id" name="type" default=""/>
                </function>
                <enum name="ProgressFlag" fullname="Core::ProgressManager::ProgressFlag" href="core-progressmanager.html#ProgressFlag-enum" status="active" access="public" location="progressmanager.h" filepath="C:/Users/qt/work/build/qt-creator/src/plugins/coreplugin/progressmanager/progressmanager.h" lineno="47" documented="true" typedef="Core::ProgressManager::ProgressFlags">
                    <value name="KeepOnFinish" value="0x01"/>
                    <value name="ShowInApplicationIcon" value="0x02"/>
                </enum>
                <typedef name="ProgressFlags" fullname="Core::ProgressManager::ProgressFlags" href="core-progressmanager.html#ProgressFlag-enum" status="active" access="public" location="progressmanager.h" filepath="C:/Users/qt/work/build/qt-creator/src/plugins/coreplugin/progressmanager/progressmanager.h" lineno="51" enum="Core::ProgressManager::ProgressFlag"/>
            </class>
            <class name="SearchResult" fullname="Core::SearchResult" href="core-searchresult.html" status="active" access="public" location="searchresultwindow.h" filepath="C:/Users/qt/work/build/qt-creator/src/plugins/coreplugin/find/searchresultwindow.h" lineno="60" documented="true" bases="QObject" module="QtCreator" brief="Reports user interaction, such as the activation of a search result item">
                <function name="activated" fullname="Core::SearchResult::activated" href="core-searchresult.html#activated" status="active" access="public" location="searchresultwindow.h" filepath="C:/Users/qt/work/build/qt-creator/src/plugins/coreplugin/find/searchresultwindow.h" lineno="91" documented="true" meta="signal" virtual="non" const="false" static="false" final="false" override="false" type="void" signature="void activated(const Core::SearchResultItem &amp;item)">
                    <parameter type="const Core::SearchResultItem &amp;" name="item" default=""/>
                </function>
                <function name="addResult" fullname="Core::SearchResult::addResult" href="core-searchresult.html#addResult" status="active" access="public" location="searchresultwindow.h" filepath="C:/Users/qt/work/build/qt-creator/src/plugins/coreplugin/find/searchresultwindow.h" lineno="80" documented="true" meta="slot" virtual="non" const="false" static="false" final="false" override="false" type="void" signature="void addResult(const Core::SearchResultItem &amp;item)">
                    <parameter type="const Core::SearchResultItem &amp;" name="item" default=""/>
                </function>
                <function name="addResults" fullname="Core::SearchResult::addResults" href="core-searchresult.html#addResults" status="active" access="public" location="searchresultwindow.h" filepath="C:/Users/qt/work/build/qt-creator/src/plugins/coreplugin/find/searchresultwindow.h" lineno="81" documented="true" meta="slot" virtual="non" const="false" static="false" final="false" override="false" type="void" signature="void addResults(const QList&lt;Core::SearchResultItem&gt; &amp;items, Core::SearchResult::AddMode mode)">
                    <parameter type="const QList&lt;Core::SearchResultItem&gt; &amp;" name="items" default=""/>
                    <parameter type="Core::SearchResult::AddMode" name="mode" default=""/>
                </function>
                <function name="additionalReplaceWidget" fullname="Core::SearchResult::additionalReplaceWidget" href="core-searchresult.html#additionalReplaceWidget" status="active" access="public" location="searchresultwindow.h" filepath="C:/Users/qt/work/build/qt-creator/src/plugins/coreplugin/find/searchresultwindow.h" lineno="76" documented="true" meta="plain" virtual="non" const="true" static="false" final="false" override="false" type="QWidget *" signature="QWidget * additionalReplaceWidget() const"/>
                <function name="cancelled" fullname="Core::SearchResult::cancelled" href="core-searchresult.html#cancelled" status="active" access="public" location="searchresultwindow.h" filepath="C:/Users/qt/work/build/qt-creator/src/plugins/coreplugin/find/searchresultwindow.h" lineno="94" documented="true" meta="signal" virtual="non" const="false" static="false" final="false" override="false" type="void" signature="void cancelled()"/>
                <function name="count" fullname="Core::SearchResult::count" href="core-searchresult.html#count" status="active" access="public" location="searchresultwindow.h" filepath="C:/Users/qt/work/build/qt-creator/src/plugins/coreplugin/find/searchresultwindow.h" lineno="74" documented="true" meta="plain" virtual="non" const="true" static="false" final="false" override="false" type="int" signature="int count() const"/>
                <function name="countChanged" fullname="Core::SearchResult::countChanged" href="core-searchresult.html#countChanged" status="active" access="public" location="searchresultwindow.h" filepath="C:/Users/qt/work/build/qt-creator/src/plugins/coreplugin/find/searchresultwindow.h" lineno="97" documented="true" meta="signal" virtual="non" const="false" static="false" final="false" override="false" type="void" signature="void countChanged(int count)">
                    <parameter type="int" name="count" default=""/>
                </function>
                <function name="finishSearch" fullname="Core::SearchResult::finishSearch" href="core-searchresult.html#finishSearch" status="active" access="public" location="searchresultwindow.h" filepath="C:/Users/qt/work/build/qt-creator/src/plugins/coreplugin/find/searchresultwindow.h" lineno="83" documented="true" meta="slot" virtual="non" const="false" static="false" final="false" override="false" type="void" signature="void finishSearch(bool canceled)">
                    <parameter type="bool" name="canceled" default=""/>
                </function>
                <function name="paused" fullname="Core::SearchResult::paused" href="core-searchresult.html#paused" status="active" access="public" location="searchresultwindow.h" filepath="C:/Users/qt/work/build/qt-creator/src/plugins/coreplugin/find/searchresultwindow.h" lineno="95" documented="true" meta="signal" virtual="non" const="false" static="false" final="false" override="false" type="void" signature="void paused(bool paused)">
                    <parameter type="bool" name="paused" default=""/>
                </function>
                <function name="popup" fullname="Core::SearchResult::popup" href="core-searchresult.html#popup" status="active" access="public" location="searchresultwindow.h" filepath="C:/Users/qt/work/build/qt-creator/src/plugins/coreplugin/find/searchresultwindow.h" lineno="88" documented="true" meta="slot" virtual="non" const="false" static="false" final="false" override="false" type="void" signature="void popup()"/>
                <function name="replaceButtonClicked" fullname="Core::SearchResult::replaceButtonClicked" href="core-searchresult.html#replaceButtonClicked" status="active" access="public" location="searchresultwindow.h" filepath="C:/Users/qt/work/build/qt-creator/src/plugins/coreplugin/find/searchresultwindow.h" lineno="92" documented="true" meta="signal" virtual="non" const="false" static="false" final="false" override="false" type="void" signature="void replaceButtonClicked(const QString &amp;replaceText, const QList&lt;Core::SearchResultItem&gt; &amp;checkedItems, bool preserveCase)">
                    <parameter type="const QString &amp;" name="replaceText" default=""/>
                    <parameter type="const QList&lt;Core::SearchResultItem&gt; &amp;" name="checkedItems" default=""/>
                    <parameter type="bool" name="preserveCase" default=""/>
                </function>
                <function name="requestEnabledCheck" fullname="Core::SearchResult::requestEnabledCheck" href="core-searchresult.html#requestEnabledCheck" status="active" access="public" location="searchresultwindow.h" filepath="C:/Users/qt/work/build/qt-creator/src/plugins/coreplugin/find/searchresultwindow.h" lineno="99" documented="true" meta="signal" virtual="non" const="false" static="false" final="false" override="false" type="void" signature="void requestEnabledCheck()"/>
                <function name="restart" fullname="Core::SearchResult::restart" href="core-searchresult.html#restart" status="active" access="public" location="searchresultwindow.h" filepath="C:/Users/qt/work/build/qt-creator/src/plugins/coreplugin/find/searchresultwindow.h" lineno="85" documented="true" meta="slot" virtual="non" const="false" static="false" final="false" override="false" type="void" signature="void restart()"/>
                <function name="searchAgainRequested" fullname="Core::SearchResult::searchAgainRequested" href="core-searchresult.html#searchAgainRequested" status="active" access="public" location="searchresultwindow.h" filepath="C:/Users/qt/work/build/qt-creator/src/plugins/coreplugin/find/searchresultwindow.h" lineno="98" documented="true" meta="signal" virtual="non" const="false" static="false" final="false" override="false" type="void" signature="void searchAgainRequested()"/>
                <function name="setAdditionalReplaceWidget" fullname="Core::SearchResult::setAdditionalReplaceWidget" href="core-searchresult.html#setAdditionalReplaceWidget" status="active" access="public" location="searchresultwindow.h" filepath="C:/Users/qt/work/build/qt-creator/src/plugins/coreplugin/find/searchresultwindow.h" lineno="77" documented="true" meta="plain" virtual="non" const="false" static="false" final="false" override="false" type="void" signature="void setAdditionalReplaceWidget(QWidget *widget)">
                    <parameter type="QWidget *" name="widget" default=""/>
                </function>
                <function name="setReplaceEnabled" fullname="Core::SearchResult::setReplaceEnabled" href="core-searchresult.html#setReplaceEnabled" status="active" access="public" location="searchresultwindow.h" filepath="C:/Users/qt/work/build/qt-creator/src/plugins/coreplugin/find/searchresultwindow.h" lineno="86" documented="true" meta="slot" virtual="non" const="false" static="false" final="false" override="false" type="void" signature="void setReplaceEnabled(bool enabled)">
                    <parameter type="bool" name="enabled" default=""/>
                </function>
                <function name="setSearchAgainEnabled" fullname="Core::SearchResult::setSearchAgainEnabled" href="core-searchresult.html#setSearchAgainEnabled" status="active" access="public" location="searchresultwindow.h" filepath="C:/Users/qt/work/build/qt-creator/src/plugins/coreplugin/find/searchresultwindow.h" lineno="87" documented="true" meta="slot" virtual="non" const="false" static="false" final="false" override="false" type="void" signature="void setSearchAgainEnabled(bool enabled)">
                    <parameter type="bool" name="enabled" default=""/>
                </function>
                <function name="setSearchAgainSupported" fullname="Core::SearchResult::setSearchAgainSupported" href="core-searchresult.html#setSearchAgainSupported" status="active" access="public" location="searchresultwindow.h" filepath="C:/Users/qt/work/build/qt-creator/src/plugins/coreplugin/find/searchresultwindow.h" lineno="75" documented="true" meta="plain" virtual="non" const="false" static="false" final="false" override="false" type="void" signature="void setSearchAgainSupported(bool supported)">
                    <parameter type="bool" name="supported" default=""/>
                </function>
                <function name="setTextToReplace" fullname="Core::SearchResult::setTextToReplace" href="core-searchresult.html#setTextToReplace" status="active" access="public" location="searchresultwindow.h" filepath="C:/Users/qt/work/build/qt-creator/src/plugins/coreplugin/find/searchresultwindow.h" lineno="84" documented="true" meta="slot" virtual="non" const="false" static="false" final="false" override="false" type="void" signature="void setTextToReplace(const QString &amp;textToReplace)">
                    <parameter type="const QString &amp;" name="textToReplace" default=""/>
                </function>
                <function name="setUserData" fullname="Core::SearchResult::setUserData" href="core-searchresult.html#setUserData" status="active" access="public" location="searchresultwindow.h" filepath="C:/Users/qt/work/build/qt-creator/src/plugins/coreplugin/find/searchresultwindow.h" lineno="70" documented="true" meta="plain" virtual="non" const="false" static="false" final="false" override="false" type="void" signature="void setUserData(const QVariant &amp;data)">
                    <parameter type="const QVariant &amp;" name="data" default=""/>
                </function>
                <function name="textToReplace" fullname="Core::SearchResult::textToReplace" href="core-searchresult.html#textToReplace" status="active" access="public" location="searchresultwindow.h" filepath="C:/Users/qt/work/build/qt-creator/src/plugins/coreplugin/find/searchresultwindow.h" lineno="73" documented="true" meta="plain" virtual="non" const="true" static="false" final="false" override="false" type="QString" signature="QString textToReplace() const"/>
                <function name="userData" fullname="Core::SearchResult::userData" href="core-searchresult.html#userData" status="active" access="public" location="searchresultwindow.h" filepath="C:/Users/qt/work/build/qt-creator/src/plugins/coreplugin/find/searchresultwindow.h" lineno="71" documented="true" meta="plain" virtual="non" const="true" static="false" final="false" override="false" type="QVariant" signature="QVariant userData() const"/>
                <function name="visibilityChanged" fullname="Core::SearchResult::visibilityChanged" href="core-searchresult.html#visibilityChanged" status="active" access="public" location="searchresultwindow.h" filepath="C:/Users/qt/work/build/qt-creator/src/plugins/coreplugin/find/searchresultwindow.h" lineno="96" documented="true" meta="signal" virtual="non" const="false" static="false" final="false" override="false" type="void" signature="void visibilityChanged(bool visible)">
                    <parameter type="bool" name="visible" default=""/>
                </function>
                <enum name="AddMode" fullname="Core::SearchResult::AddMode" href="core-searchresult.html#AddMode-enum" status="active" access="public" location="searchresultwindow.h" filepath="C:/Users/qt/work/build/qt-creator/src/plugins/coreplugin/find/searchresultwindow.h" lineno="65" documented="true">
                    <value name="AddSorted" value="0"/>
                    <value name="AddOrdered" value="1"/>
                </enum>
            </class>
            <class name="SearchResultWindow" fullname="Core::SearchResultWindow" href="core-searchresultwindow.html" status="active" access="public" location="searchresultwindow.h" filepath="C:/Users/qt/work/build/qt-creator/src/plugins/coreplugin/find/searchresultwindow.h" lineno="110" documented="true" bases="Core::IOutputPane" module="QtCreator" brief="The implementation of a commonly shared Search Results output pane">
                <function name="clearContents" fullname="Core::SearchResultWindow::clearContents" href="core-searchresultwindow.html#clearContents" status="active" access="public" location="searchresultwindow.h" filepath="C:/Users/qt/work/build/qt-creator/src/plugins/coreplugin/find/searchresultwindow.h" lineno="162" documented="true" meta="slot" virtual="virtual" const="false" static="false" final="false" override="true" type="void" signature="void clearContents() override"/>
                <function name="instance" fullname="Core::SearchResultWindow::instance" href="core-searchresultwindow.html#instance" status="active" access="public" location="searchresultwindow.h" filepath="C:/Users/qt/work/build/qt-creator/src/plugins/coreplugin/find/searchresultwindow.h" lineno="128" documented="true" meta="plain" virtual="non" const="false" static="true" final="false" override="false" type="Core::SearchResultWindow *" signature="Core::SearchResultWindow * instance()"/>
                <function name="openNewSearchPanel" fullname="Core::SearchResultWindow::openNewSearchPanel" href="core-searchresultwindow.html#openNewSearchPanel" status="active" access="public" location="searchresultwindow.h" filepath="C:/Users/qt/work/build/qt-creator/src/plugins/coreplugin/find/searchresultwindow.h" lineno="148" documented="true" meta="plain" virtual="non" const="false" static="false" final="false" override="false" type="void" signature="void openNewSearchPanel()"/>
                <function name="setTabWidth" fullname="Core::SearchResultWindow::setTabWidth" href="core-searchresultwindow.html#setTabWidth" status="active" access="public" location="searchresultwindow.h" filepath="C:/Users/qt/work/build/qt-creator/src/plugins/coreplugin/find/searchresultwindow.h" lineno="147" documented="true" meta="plain" virtual="non" const="false" static="false" final="false" override="false" type="void" signature="void setTabWidth(int tabWidth)">
                    <parameter type="int" name="tabWidth" default=""/>
                </function>
                <function name="startNewSearch" fullname="Core::SearchResultWindow::startNewSearch" href="core-searchresultwindow.html#startNewSearch" status="active" access="public" location="searchresultwindow.h" filepath="C:/Users/qt/work/build/qt-creator/src/plugins/coreplugin/find/searchresultwindow.h" lineno="154" documented="true" meta="plain" virtual="non" const="false" static="false" final="false" override="false" type="Core::SearchResult *" signature="Core::SearchResult * startNewSearch(const QString &amp;label, const QString &amp;toolTip, const QString &amp;searchTerm, Core::SearchResultWindow::SearchMode searchOrSearchAndReplace, Core::SearchResultWindow::PreserveCaseMode preserveCaseMode, const QString &amp;cfgGroup)">
                    <parameter type="const QString &amp;" name="label" default=""/>
                    <parameter type="const QString &amp;" name="toolTip" default=""/>
                    <parameter type="const QString &amp;" name="searchTerm" default=""/>
                    <parameter type="Core::SearchResultWindow::SearchMode" name="searchOrSearchAndReplace" default="SearchOnly"/>
                    <parameter type="Core::SearchResultWindow::PreserveCaseMode" name="preserveCaseMode" default="PreserveCaseEnabled"/>
                    <parameter type="const QString &amp;" name="cfgGroup" default="QString()"/>
                </function>
                <enum name="PreserveCaseMode" fullname="Core::SearchResultWindow::PreserveCaseMode" href="core-searchresultwindow.html#PreserveCaseMode-enum" status="active" access="public" location="searchresultwindow.h" filepath="C:/Users/qt/work/build/qt-creator/src/plugins/coreplugin/find/searchresultwindow.h" lineno="120" documented="true">
                    <value name="PreserveCaseEnabled" value="0"/>
                    <value name="PreserveCaseDisabled" value="1"/>
                </enum>
                <enum name="SearchMode" fullname="Core::SearchResultWindow::SearchMode" href="core-searchresultwindow.html#SearchMode-enum" status="active" access="public" location="searchresultwindow.h" filepath="C:/Users/qt/work/build/qt-creator/src/plugins/coreplugin/find/searchresultwindow.h" lineno="115" documented="true">
                    <value name="SearchOnly" value="0"/>
                    <value name="SearchAndReplace" value="1"/>
                </enum>
            </class>
            <class name="SettingsDatabase" fullname="Core::SettingsDatabase" href="core-settingsdatabase.html" status="active" access="public" location="settingsdatabase.h" filepath="C:/Users/qt/work/build/qt-creator/src/plugins/coreplugin/settingsdatabase.h" lineno="39" documented="true" bases="QObject" module="QtCreator" brief="Offers an alternative to the application-wide QSettings that is more suitable for storing large amounts of data"/>
            <class name="WizardDialogParameters" fullname="Core::WizardDialogParameters" href="core-wizarddialogparameters.html" status="active" access="public" location="basefilewizardfactory.h" filepath="C:/Users/qt/work/build/qt-creator/src/plugins/coreplugin/basefilewizardfactory.h" lineno="49" documented="true" module="QtCreator" brief="Holds parameters for the new file wizard dialog">
                <enum name="DialogParameterEnum" fullname="Core::WizardDialogParameters::DialogParameterEnum" href="core-wizarddialogparameters.html#DialogParameterEnum-enum" status="active" access="public" location="basefilewizardfactory.h" filepath="C:/Users/qt/work/build/qt-creator/src/plugins/coreplugin/basefilewizardfactory.h" lineno="54" documented="true" typedef="Core::WizardDialogParameters::DialogParameterFlags">
                    <value name="ForceCapitalLetterForFileName" value="0x01"/>
                </enum>
                <typedef name="DialogParameterFlags" fullname="Core::WizardDialogParameters::DialogParameterFlags" href="core-wizarddialogparameters.html#DialogParameterEnum-enum" status="active" access="public" location="basefilewizardfactory.h" filepath="C:/Users/qt/work/build/qt-creator/src/plugins/coreplugin/basefilewizardfactory.h" lineno="57" enum="Core::WizardDialogParameters::DialogParameterEnum"/>
            </class>
            <enum name="FindFlag" fullname="Core::FindFlag" href="core.html#FindFlag-enum" status="active" access="public" location="textfindconstants.h" filepath="C:/Users/qt/work/build/qt-creator/src/plugins/coreplugin/find/textfindconstants.h" lineno="64" documented="true" typedef="Core::FindFlags">
                <value name="FindBackward" value="0x01"/>
                <value name="FindCaseSensitively" value="0x02"/>
                <value name="FindWholeWords" value="0x04"/>
                <value name="FindRegularExpression" value="0x08"/>
                <value name="FindPreserveCase" value="0x10"/>
            </enum>
            <typedef name="FindFlags" fullname="Core::FindFlags" href="core.html#FindFlag-enum" status="active" access="public" location="textfindconstants.h" filepath="C:/Users/qt/work/build/qt-creator/src/plugins/coreplugin/find/textfindconstants.h" lineno="71" enum="Core::FindFlag"/>
        </namespace>
        <page name="creating-plugins.html" href="creating-plugins.html" status="active" location="creating-plugins.qdoc" filepath="C:/Users/qt/work/build/qt-creator/doc/qtcreatordev/src/creating-plugins.qdoc" lineno="26" documented="true" subtype="page" title="Creating Plugins" fulltitle="Creating Plugins" subtitle="">
            <contents name="basics" title="Basics" level="1"/>
            <contents name="design-principles" title="Design Principles" level="1"/>
        </page>
        <page name="qtcreator-dev-wizards.html" href="qtcreator-dev-wizards.html" status="active" location="qtcreator-dev-wizards.qdoc" filepath="C:/Users/qt/work/build/qt-creator/doc/qtcreatordev/src/qtcreator-dev-wizards.qdoc" lineno="26" documented="true" subtype="page" title="Creating Wizards in Code" fulltitle="Creating Wizards in Code" subtitle="">
            <contents name="introduction" title="Introduction" level="1"/>
            <contents name="relevant-classes" title="Relevant Classes" level="2"/>
            <contents name="setters-and-getters-of-iwizardfactory" title="Setters and Getters of IWizardFactory" level="2"/>
        </page>
        <page name="first-plugin.html" href="first-plugin.html" status="active" location="first-plugin.qdoc" filepath="C:/Users/qt/work/build/qt-creator/doc/qtcreatordev/src/first-plugin.qdoc" lineno="26" documented="true" subtype="page" title="Creating Your First Plugin" fulltitle="Creating Your First Plugin" subtitle="">
            <contents name="creating-a-plugin-project" title="Creating a Plugin Project" level="1"/>
            <contents name="building-and-running-the-plugin" title="Building and Running the Plugin" level="1"/>
            <contents name="file-structure" title="File Structure" level="1"/>
            <contents name="cmake-project" title="CMake Project" level="1"/>
            <contents name="plugin-meta-data-template" title="Plugin Meta Data Template" level="1"/>
            <contents name="plugin-class" title="Plugin Class" level="1"/>
            <contents name="header-file" title="Header File" level="2"/>
            <contents name="source-file" title="Source File" level="2"/>
        </page>
        <page name="distributing-plugins.html" href="distributing-plugins.html" status="active" location="distributing-plugins.qdoc" filepath="C:/Users/qt/work/build/qt-creator/doc/qtcreatordev/src/distributing-plugins.qdoc" lineno="26" documented="true" subtype="page" title="Distributing Plugins" fulltitle="Distributing Plugins" subtitle="">
            <contents name="creating-binaries" title="Creating Binaries" level="1"/>
            <contents name="packaging" title="Packaging" level="1"/>
            <contents name="single-library" title="Single Library" level="2"/>
            <contents name="summary" title="Summary" level="3"/>
            <contents name="multiple-files-following-qt-creator-s-filesystem-layout" title="Multiple Files Following Qt Creator's Filesystem Layout" level="2"/>
            <contents name="summary" title="Summary" level="3"/>
        </page>
        <page name="extending-index.html" href="extending-index.html" status="active" location="qtcreator-dev.qdoc" filepath="C:/Users/qt/work/build/qt-creator/doc/qtcreatordev/src/qtcreator-dev.qdoc" lineno="26" documented="true" subtype="page" title="Extending Qt Creator Manual" fulltitle="Extending Qt Creator Manual" subtitle="">
            <contents name="generating-domain-specific-code-and-templates" title="Generating Domain Specific Code and Templates" level="1"/>
            <contents name="snippets" title="Snippets" level="2"/>
            <contents name="file-and-project-templates" title="File and Project Templates" level="2"/>
            <contents name="custom-wizards" title="Custom Wizards" level="2"/>
            <contents name="supporting-additional-file-types" title="Supporting Additional File Types" level="1"/>
            <contents name="mime-types" title="MIME Types" level="2"/>
            <contents name="text-highlighting-and-indentation" title="Text Highlighting and Indentation" level="2"/>
            <contents name="custom-text-editors" title="Custom Text Editors" level="2"/>
            <contents name="other-custom-editors" title="Other Custom Editors" level="2"/>
            <contents name="running-external-tools" title="Running External Tools" level="1"/>
            <contents name="simple-external-tools" title="Simple External Tools" level="2"/>
            <contents name="complex-external-tools" title="Complex External Tools" level="2"/>
            <contents name="loosely-integrating-tools" title="Loosely Integrating Tools" level="3"/>
            <contents name="interacting-with-tool-output" title="Interacting with Tool Output" level="3"/>
            <contents name="all-topics" title="All Topics" level="1"/>
        </page>
        <namespace name="ExtensionSystem" href="extensionsystem.html" status="active" access="public" location="pluginmanager.h" filepath="C:/Users/qt/work/build/qt-creator/src/libs/extensionsystem/pluginmanager.h" lineno="40" documented="true" module="QtCreator" brief="Classes that belong to the core plugin system">
            <function name="invoke" fullname="ExtensionSystem::invoke" href="extensionsystem.html#invoke" status="active" access="public" location="invoker.h" filepath="C:/Users/qt/work/build/qt-creator/src/libs/extensionsystem/invoker.h" lineno="171" documented="true" meta="plain" virtual="non" const="false" static="false" final="false" override="false" type="Result" signature="Result invoke(QObject *target, const char *slot)">
                <parameter type="QObject *" name="target" default=""/>
                <parameter type="const char *" name="slot" default=""/>
            </function>
            <function name="invoke" fullname="ExtensionSystem::invoke" href="extensionsystem.html#invoke-1" status="active" access="public" location="invoker.h" filepath="C:/Users/qt/work/build/qt-creator/src/libs/extensionsystem/invoker.h" lineno="178" documented="true" meta="plain" virtual="non" const="false" static="false" final="false" override="false" overload="true" overload-number="1" type="Result" signature="Result invoke(QObject *target, const char *slot, const T0 &amp;t0)">
                <parameter type="QObject *" name="target" default=""/>
                <parameter type="const char *" name="slot" default=""/>
                <parameter type="const T0 &amp;" name="t0" default=""/>
            </function>
            <function name="invoke" fullname="ExtensionSystem::invoke" href="extensionsystem.html#invoke-2" status="active" access="public" location="invoker.h" filepath="C:/Users/qt/work/build/qt-creator/src/libs/extensionsystem/invoker.h" lineno="186" documented="true" meta="plain" virtual="non" const="false" static="false" final="false" override="false" overload="true" overload-number="2" type="Result" signature="Result invoke(QObject *target, const char *slot, const T0 &amp;t0, const T1 &amp;t1)">
                <parameter type="QObject *" name="target" default=""/>
                <parameter type="const char *" name="slot" default=""/>
                <parameter type="const T0 &amp;" name="t0" default=""/>
                <parameter type="const T1 &amp;" name="t1" default=""/>
            </function>
            <function name="invoke" fullname="ExtensionSystem::invoke" href="extensionsystem.html#invoke-3" status="active" access="public" location="invoker.h" filepath="C:/Users/qt/work/build/qt-creator/src/libs/extensionsystem/invoker.h" lineno="195" documented="true" meta="plain" virtual="non" const="false" static="false" final="false" override="false" overload="true" overload-number="3" type="Result" signature="Result invoke(QObject *target, const char *slot, const T0 &amp;t0, const T1 &amp;t1, const T2 &amp;t2)">
                <parameter type="QObject *" name="target" default=""/>
                <parameter type="const char *" name="slot" default=""/>
                <parameter type="const T0 &amp;" name="t0" default=""/>
                <parameter type="const T1 &amp;" name="t1" default=""/>
                <parameter type="const T2 &amp;" name="t2" default=""/>
            </function>
            <class name="IPlugin" fullname="ExtensionSystem::IPlugin" href="extensionsystem-iplugin.html" status="active" access="public" location="iplugin.h" filepath="C:/Users/qt/work/build/qt-creator/src/libs/extensionsystem/iplugin.h" lineno="42" documented="true" groups="mainclasses" bases="QObject" module="QtCreator" brief="Abstract base class that must be implemented once for each plugin">
                <function name="aboutToShutdown" fullname="ExtensionSystem::IPlugin::aboutToShutdown" href="extensionsystem-iplugin.html#aboutToShutdown" status="active" access="public" location="iplugin.h" filepath="C:/Users/qt/work/build/qt-creator/src/libs/extensionsystem/iplugin.h" lineno="58" documented="true" meta="plain" virtual="virtual" const="false" static="false" final="false" override="false" type="ExtensionSystem::IPlugin::ShutdownFlag" signature="ExtensionSystem::IPlugin::ShutdownFlag aboutToShutdown()"/>
                <function name="asynchronousShutdownFinished" fullname="ExtensionSystem::IPlugin::asynchronousShutdownFinished" href="extensionsystem-iplugin.html#asynchronousShutdownFinished" status="active" access="public" location="iplugin.h" filepath="C:/Users/qt/work/build/qt-creator/src/libs/extensionsystem/iplugin.h" lineno="67" documented="true" meta="signal" virtual="non" const="false" static="false" final="false" override="false" type="void" signature="void asynchronousShutdownFinished()"/>
                <function name="createTestObjects" fullname="ExtensionSystem::IPlugin::createTestObjects" href="extensionsystem-iplugin.html#createTestObjects" status="active" access="public" location="iplugin.h" filepath="C:/Users/qt/work/build/qt-creator/src/libs/extensionsystem/iplugin.h" lineno="62" documented="true" meta="plain" virtual="virtual" const="true" static="false" final="false" override="false" type="QVector&lt;QObject *&gt;" signature="QVector&lt;QObject *&gt; createTestObjects() const"/>
                <function name="delayedInitialize" fullname="ExtensionSystem::IPlugin::delayedInitialize" href="extensionsystem-iplugin.html#delayedInitialize" status="active" access="public" location="iplugin.h" filepath="C:/Users/qt/work/build/qt-creator/src/libs/extensionsystem/iplugin.h" lineno="57" documented="true" meta="plain" virtual="virtual" const="false" static="false" final="false" override="false" type="bool" signature="bool delayedInitialize()"/>
                <function name="extensionsInitialized" fullname="ExtensionSystem::IPlugin::extensionsInitialized" href="extensionsystem-iplugin.html#extensionsInitialized" status="active" access="public" location="iplugin.h" filepath="C:/Users/qt/work/build/qt-creator/src/libs/extensionsystem/iplugin.h" lineno="56" documented="true" meta="plain" virtual="virtual" const="false" static="false" final="false" override="false" type="void" signature="void extensionsInitialized()"/>
                <function name="initialize" fullname="ExtensionSystem::IPlugin::initialize" href="extensionsystem-iplugin.html#initialize" status="active" access="public" location="iplugin.h" filepath="C:/Users/qt/work/build/qt-creator/src/libs/extensionsystem/iplugin.h" lineno="55" documented="true" meta="plain" virtual="pure" const="false" static="false" final="false" override="false" type="bool" signature="bool initialize(const QStringList &amp;arguments, QString *errorString) = 0">
                    <parameter type="const QStringList &amp;" name="arguments" default=""/>
                    <parameter type="QString *" name="errorString" default=""/>
                </function>
                <function name="pluginSpec" fullname="ExtensionSystem::IPlugin::pluginSpec" href="extensionsystem-iplugin.html#pluginSpec" status="active" access="public" location="iplugin.h" filepath="C:/Users/qt/work/build/qt-creator/src/libs/extensionsystem/iplugin.h" lineno="64" documented="true" meta="plain" virtual="non" const="true" static="false" final="false" override="false" type="ExtensionSystem::PluginSpec *" signature="ExtensionSystem::PluginSpec * pluginSpec() const"/>
                <function name="remoteCommand" fullname="ExtensionSystem::IPlugin::remoteCommand" href="extensionsystem-iplugin.html#remoteCommand" status="active" access="public" location="iplugin.h" filepath="C:/Users/qt/work/build/qt-creator/src/libs/extensionsystem/iplugin.h" lineno="59" documented="true" meta="plain" virtual="virtual" const="false" static="false" final="false" override="false" type="QObject *" signature="QObject * remoteCommand(const QStringList &amp;options, const QString &amp;workingDirectory, const QStringList &amp;arguments)">
                    <parameter type="const QStringList &amp;" name="options" default=""/>
                    <parameter type="const QString &amp;" name="workingDirectory" default=""/>
                    <parameter type="const QStringList &amp;" name="arguments" default=""/>
                </function>
                <enum name="ShutdownFlag" fullname="ExtensionSystem::IPlugin::ShutdownFlag" href="extensionsystem-iplugin.html#ShutdownFlag-enum" status="active" access="public" location="iplugin.h" filepath="C:/Users/qt/work/build/qt-creator/src/libs/extensionsystem/iplugin.h" lineno="47" documented="true">
                    <value name="SynchronousShutdown" value="0"/>
                    <value name="AsynchronousShutdown" value="1"/>
                </enum>
            </class>
            <struct name="PluginArgumentDescription" fullname="ExtensionSystem::PluginArgumentDescription" href="extensionsystem-pluginargumentdescription.html" status="active" access="public" location="pluginspec.h" filepath="C:/Users/qt/work/build/qt-creator/src/libs/extensionsystem/pluginspec.h" lineno="72" documented="true" module="QtCreator" brief="PluginArgumentDescriptions class holds a list of descriptions of command line arguments that a plugin processes"/>
            <struct name="PluginDependency" fullname="ExtensionSystem::PluginDependency" href="extensionsystem-plugindependency.html" status="active" access="public" location="pluginspec.h" filepath="C:/Users/qt/work/build/qt-creator/src/libs/extensionsystem/pluginspec.h" lineno="53" documented="true" module="QtCreator" brief="Contains the name and required compatible version number of a plugin's dependency">
                <enum name="Type" fullname="ExtensionSystem::PluginDependency::Type" href="extensionsystem-plugindependency.html#Type-enum" status="active" access="public" location="pluginspec.h" filepath="C:/Users/qt/work/build/qt-creator/src/libs/extensionsystem/pluginspec.h" lineno="55" documented="true">
                    <value name="Required" value="0"/>
                    <value name="Optional" value="1"/>
                    <value name="Test" value="2"/>
                </enum>
                <variable name="name" fullname="ExtensionSystem::PluginDependency::name" href="extensionsystem-plugindependency.html#name-var" status="active" access="public" location="pluginspec.h" filepath="C:/Users/qt/work/build/qt-creator/src/libs/extensionsystem/pluginspec.h" lineno="63" documented="true" type="QString" static="false"/>
                <variable name="type" fullname="ExtensionSystem::PluginDependency::type" href="extensionsystem-plugindependency.html#type-var" status="active" access="public" location="pluginspec.h" filepath="C:/Users/qt/work/build/qt-creator/src/libs/extensionsystem/pluginspec.h" lineno="65" documented="true" type="ExtensionSystem::PluginDependency::Type" static="false"/>
                <variable name="version" fullname="ExtensionSystem::PluginDependency::version" href="extensionsystem-plugindependency.html#version-var" status="active" access="public" location="pluginspec.h" filepath="C:/Users/qt/work/build/qt-creator/src/libs/extensionsystem/pluginspec.h" lineno="64" documented="true" type="QString" static="false"/>
            </struct>
            <class name="PluginDetailsView" fullname="ExtensionSystem::PluginDetailsView" href="extensionsystem-plugindetailsview.html" status="active" access="public" location="plugindetailsview.h" filepath="C:/Users/qt/work/build/qt-creator/src/libs/extensionsystem/plugindetailsview.h" lineno="41" documented="true" bases="QWidget" module="QtCreator" brief="Implements a widget that displays the contents of a PluginSpec">
                <function name="PluginDetailsView" fullname="ExtensionSystem::PluginDetailsView::PluginDetailsView" href="extensionsystem-plugindetailsview.html#PluginDetailsView" status="active" access="public" location="plugindetailsview.h" filepath="C:/Users/qt/work/build/qt-creator/src/libs/extensionsystem/plugindetailsview.h" lineno="46" documented="true" meta="constructor" virtual="non" const="false" static="false" final="false" override="false" type="" signature="PluginDetailsView(QWidget *parent)">
                    <parameter type="QWidget *" name="parent" default="nullptr"/>
                </function>
                <function name="update" fullname="ExtensionSystem::PluginDetailsView::update" href="extensionsystem-plugindetailsview.html#update" status="active" access="public" location="plugindetailsview.h" filepath="C:/Users/qt/work/build/qt-creator/src/libs/extensionsystem/plugindetailsview.h" lineno="49" documented="true" meta="plain" virtual="non" const="false" static="false" final="false" override="false" type="void" signature="void update(ExtensionSystem::PluginSpec *spec)">
                    <parameter type="ExtensionSystem::PluginSpec *" name="spec" default=""/>
                </function>
            </class>
            <class name="PluginErrorView" fullname="ExtensionSystem::PluginErrorView" href="extensionsystem-pluginerrorview.html" status="active" access="public" location="pluginerrorview.h" filepath="C:/Users/qt/work/build/qt-creator/src/libs/extensionsystem/pluginerrorview.h" lineno="39" documented="true" bases="QWidget" module="QtCreator" brief="Implements a widget that displays the state and error message of a PluginSpec">
                <function name="PluginErrorView" fullname="ExtensionSystem::PluginErrorView::PluginErrorView" href="extensionsystem-pluginerrorview.html#PluginErrorView" status="active" access="public" location="pluginerrorview.h" filepath="C:/Users/qt/work/build/qt-creator/src/libs/extensionsystem/pluginerrorview.h" lineno="44" documented="true" meta="constructor" virtual="non" const="false" static="false" final="false" override="false" type="" signature="PluginErrorView(QWidget *parent)">
                    <parameter type="QWidget *" name="parent" default="nullptr"/>
                </function>
                <function name="update" fullname="ExtensionSystem::PluginErrorView::update" href="extensionsystem-pluginerrorview.html#update" status="active" access="public" location="pluginerrorview.h" filepath="C:/Users/qt/work/build/qt-creator/src/libs/extensionsystem/pluginerrorview.h" lineno="47" documented="true" meta="plain" virtual="non" const="false" static="false" final="false" override="false" type="void" signature="void update(ExtensionSystem::PluginSpec *spec)">
                    <parameter type="ExtensionSystem::PluginSpec *" name="spec" default=""/>
                </function>
            </class>
            <class name="PluginManager" fullname="ExtensionSystem::PluginManager" href="extensionsystem-pluginmanager.html" status="active" access="public" location="pluginmanager.h" filepath="C:/Users/qt/work/build/qt-creator/src/libs/extensionsystem/pluginmanager.h" lineno="46" documented="true" groups="mainclasses" bases="QObject" module="QtCreator" brief="Implements the core plugin system that manages the plugins, their life cycle, and their registered objects">
                <contents name="plugins" title="Plugins" level="1"/>
                <contents name="object-pool" title="Object Pool" level="1"/>
                <function name="PluginManager" fullname="ExtensionSystem::PluginManager::PluginManager" href="extensionsystem-pluginmanager.html#PluginManager" status="active" access="public" location="pluginmanager.h" filepath="C:/Users/qt/work/build/qt-creator/src/libs/extensionsystem/pluginmanager.h" lineno="53" documented="true" meta="constructor" virtual="non" const="false" static="false" final="false" override="false" type="" signature="PluginManager()"/>
                <function name="addObject" fullname="ExtensionSystem::PluginManager::addObject" href="extensionsystem-pluginmanager.html#addObject" status="active" access="public" location="pluginmanager.h" filepath="C:/Users/qt/work/build/qt-creator/src/libs/extensionsystem/pluginmanager.h" lineno="57" documented="true" meta="plain" virtual="non" const="false" static="true" final="false" override="false" type="void" signature="void addObject(QObject *obj)">
                    <parameter type="QObject *" name="obj" default=""/>
                </function>
                <function name="allObjects" fullname="ExtensionSystem::PluginManager::allObjects" href="extensionsystem-pluginmanager.html#allObjects" status="active" access="public" location="pluginmanager.h" filepath="C:/Users/qt/work/build/qt-creator/src/libs/extensionsystem/pluginmanager.h" lineno="59" documented="true" meta="plain" virtual="non" const="false" static="true" final="false" override="false" type="QVector&lt;QObject *&gt;" signature="QVector&lt;QObject *&gt; allObjects()"/>
                <function name="arguments" fullname="ExtensionSystem::PluginManager::arguments" href="extensionsystem-pluginmanager.html#arguments" status="active" access="public" location="pluginmanager.h" filepath="C:/Users/qt/work/build/qt-creator/src/libs/extensionsystem/pluginmanager.h" lineno="110" documented="true" meta="plain" virtual="non" const="false" static="true" final="false" override="false" type="QStringList" signature="QStringList arguments()"/>
                <function name="argumentsForRestart" fullname="ExtensionSystem::PluginManager::argumentsForRestart" href="extensionsystem-pluginmanager.html#argumentsForRestart" status="active" access="public" location="pluginmanager.h" filepath="C:/Users/qt/work/build/qt-creator/src/libs/extensionsystem/pluginmanager.h" lineno="111" documented="true" meta="plain" virtual="non" const="false" static="true" final="false" override="false" type="QStringList" signature="QStringList argumentsForRestart()"/>
                <function name="formatOptions" fullname="ExtensionSystem::PluginManager::formatOptions" href="extensionsystem-pluginmanager.html#formatOptions" status="active" access="public" location="pluginmanager.h" filepath="C:/Users/qt/work/build/qt-creator/src/libs/extensionsystem/pluginmanager.h" lineno="116" documented="true" meta="plain" virtual="non" const="false" static="true" final="false" override="false" type="void" signature="void formatOptions(QTextStream &amp;str, int optionIndentation, int descriptionIndentation)">
                    <parameter type="QTextStream &amp;" name="str" default=""/>
                    <parameter type="int" name="optionIndentation" default=""/>
                    <parameter type="int" name="descriptionIndentation" default=""/>
                </function>
                <function name="formatPluginOptions" fullname="ExtensionSystem::PluginManager::formatPluginOptions" href="extensionsystem-pluginmanager.html#formatPluginOptions" status="active" access="public" location="pluginmanager.h" filepath="C:/Users/qt/work/build/qt-creator/src/libs/extensionsystem/pluginmanager.h" lineno="117" documented="true" meta="plain" virtual="non" const="false" static="true" final="false" override="false" type="void" signature="void formatPluginOptions(QTextStream &amp;str, int optionIndentation, int descriptionIndentation)">
                    <parameter type="QTextStream &amp;" name="str" default=""/>
                    <parameter type="int" name="optionIndentation" default=""/>
                    <parameter type="int" name="descriptionIndentation" default=""/>
                </function>
                <function name="formatPluginVersions" fullname="ExtensionSystem::PluginManager::formatPluginVersions" href="extensionsystem-pluginmanager.html#formatPluginVersions" status="active" access="public" location="pluginmanager.h" filepath="C:/Users/qt/work/build/qt-creator/src/libs/extensionsystem/pluginmanager.h" lineno="118" documented="true" meta="plain" virtual="non" const="false" static="true" final="false" override="false" type="void" signature="void formatPluginVersions(QTextStream &amp;str)">
                    <parameter type="QTextStream &amp;" name="str" default=""/>
                </function>
                <function name="getObject" fullname="ExtensionSystem::PluginManager::getObject" href="extensionsystem-pluginmanager.html#getObject" status="active" access="public" location="pluginmanager.h" filepath="C:/Users/qt/work/build/qt-creator/src/libs/extensionsystem/pluginmanager.h" lineno="63" documented="true" meta="plain" virtual="non" const="false" static="true" final="false" override="false" type="T *" signature="T * getObject()"/>
                <function name="getObject" fullname="ExtensionSystem::PluginManager::getObject" href="extensionsystem-pluginmanager.html#getObject-1" status="active" access="public" location="pluginmanager.h" filepath="C:/Users/qt/work/build/qt-creator/src/libs/extensionsystem/pluginmanager.h" lineno="73" documented="true" meta="plain" virtual="non" const="false" static="true" final="false" override="false" overload="true" overload-number="1" type="T *" signature="T * getObject(Predicate predicate)">
                    <parameter type="Predicate" name="predicate" default=""/>
                </function>
                <function name="getObjectByName" fullname="ExtensionSystem::PluginManager::getObjectByName" href="extensionsystem-pluginmanager.html#getObjectByName" status="active" access="public" location="pluginmanager.h" filepath="C:/Users/qt/work/build/qt-creator/src/libs/extensionsystem/pluginmanager.h" lineno="85" documented="true" meta="plain" virtual="non" const="false" static="true" final="false" override="false" type="QObject *" signature="QObject * getObjectByName(const QString &amp;name)">
                    <parameter type="const QString &amp;" name="name" default=""/>
                </function>
                <function name="globalSettings" fullname="ExtensionSystem::PluginManager::globalSettings" href="extensionsystem-pluginmanager.html#globalSettings" status="active" access="public" location="pluginmanager.h" filepath="C:/Users/qt/work/build/qt-creator/src/libs/extensionsystem/pluginmanager.h" lineno="106" documented="true" meta="plain" virtual="non" const="false" static="true" final="false" override="false" type="Utils::QtcSettings *" signature="Utils::QtcSettings * globalSettings()"/>
                <function name="hasError" fullname="ExtensionSystem::PluginManager::hasError" href="extensionsystem-pluginmanager.html#hasError" status="active" access="public" location="pluginmanager.h" filepath="C:/Users/qt/work/build/qt-creator/src/libs/extensionsystem/pluginmanager.h" lineno="96" documented="true" meta="plain" virtual="non" const="false" static="true" final="false" override="false" type="bool" signature="bool hasError()"/>
                <function name="instance" fullname="ExtensionSystem::PluginManager::instance" href="extensionsystem-pluginmanager.html#instance" status="active" access="public" location="pluginmanager.h" filepath="C:/Users/qt/work/build/qt-creator/src/libs/extensionsystem/pluginmanager.h" lineno="51" documented="true" meta="plain" virtual="non" const="false" static="true" final="false" override="false" type="ExtensionSystem::PluginManager *" signature="ExtensionSystem::PluginManager * instance()"/>
                <function name="loadPlugins" fullname="ExtensionSystem::PluginManager::loadPlugins" href="extensionsystem-pluginmanager.html#loadPlugins" status="active" access="public" location="pluginmanager.h" filepath="C:/Users/qt/work/build/qt-creator/src/libs/extensionsystem/pluginmanager.h" lineno="89" documented="true" meta="plain" virtual="non" const="false" static="true" final="false" override="false" type="void" signature="void loadPlugins()"/>
                <function name="loadQueue" fullname="ExtensionSystem::PluginManager::loadQueue" href="extensionsystem-pluginmanager.html#loadQueue" status="active" access="public" location="pluginmanager.h" filepath="C:/Users/qt/work/build/qt-creator/src/libs/extensionsystem/pluginmanager.h" lineno="88" documented="true" meta="plain" virtual="non" const="false" static="true" final="false" override="false" type="QVector&lt;ExtensionSystem::PluginSpec *&gt;" signature="QVector&lt;ExtensionSystem::PluginSpec *&gt; loadQueue()"/>
                <function name="parseOptions" fullname="ExtensionSystem::PluginManager::parseOptions" href="extensionsystem-pluginmanager.html#parseOptions" status="active" access="public" location="pluginmanager.h" filepath="C:/Users/qt/work/build/qt-creator/src/libs/extensionsystem/pluginmanager.h" lineno="112" documented="true" meta="plain" virtual="non" const="false" static="true" final="false" override="false" type="bool" signature="bool parseOptions(const QStringList &amp;args, const QMap&lt;QString, bool&gt; &amp;appOptions, QMap&lt;QString, QString&gt; *foundAppOptions, QString *errorString)">
                    <parameter type="const QStringList &amp;" name="args" default=""/>
                    <parameter type="const QMap&lt;QString, bool&gt; &amp;" name="appOptions" default=""/>
                    <parameter type="QMap&lt;QString, QString&gt; *" name="foundAppOptions" default=""/>
                    <parameter type="QString *" name="errorString" default=""/>
                </function>
                <function name="pluginIID" fullname="ExtensionSystem::PluginManager::pluginIID" href="extensionsystem-pluginmanager.html#pluginIID" status="active" access="public" location="pluginmanager.h" filepath="C:/Users/qt/work/build/qt-creator/src/libs/extensionsystem/pluginmanager.h" lineno="92" documented="true" meta="plain" virtual="non" const="false" static="true" final="false" override="false" type="QString" signature="QString pluginIID()"/>
                <function name="pluginPaths" fullname="ExtensionSystem::PluginManager::pluginPaths" href="extensionsystem-pluginmanager.html#pluginPaths" status="active" access="public" location="pluginmanager.h" filepath="C:/Users/qt/work/build/qt-creator/src/libs/extensionsystem/pluginmanager.h" lineno="90" documented="true" meta="plain" virtual="non" const="false" static="true" final="false" override="false" type="QStringList" signature="QStringList pluginPaths()"/>
                <function name="plugins" fullname="ExtensionSystem::PluginManager::plugins" href="extensionsystem-pluginmanager.html#plugins" status="active" access="public" location="pluginmanager.h" filepath="C:/Users/qt/work/build/qt-creator/src/libs/extensionsystem/pluginmanager.h" lineno="94" documented="true" meta="plain" virtual="non" const="false" static="true" final="false" override="false" type="const QVector&lt;ExtensionSystem::PluginSpec *&gt;" signature="const QVector&lt;ExtensionSystem::PluginSpec *&gt; plugins()"/>
                <function name="pluginsRequiredByPlugin" fullname="ExtensionSystem::PluginManager::pluginsRequiredByPlugin" href="extensionsystem-pluginmanager.html#pluginsRequiredByPlugin" status="active" access="public" location="pluginmanager.h" filepath="C:/Users/qt/work/build/qt-creator/src/libs/extensionsystem/pluginmanager.h" lineno="99" documented="true" meta="plain" virtual="non" const="false" static="true" final="false" override="false" type="const QSet&lt;ExtensionSystem::PluginSpec *&gt;" signature="const QSet&lt;ExtensionSystem::PluginSpec *&gt; pluginsRequiredByPlugin(ExtensionSystem::PluginSpec *spec)">
                    <parameter type="ExtensionSystem::PluginSpec *" name="spec" default=""/>
                </function>
                <function name="pluginsRequiringPlugin" fullname="ExtensionSystem::PluginManager::pluginsRequiringPlugin" href="extensionsystem-pluginmanager.html#pluginsRequiringPlugin" status="active" access="public" location="pluginmanager.h" filepath="C:/Users/qt/work/build/qt-creator/src/libs/extensionsystem/pluginmanager.h" lineno="98" documented="true" meta="plain" virtual="non" const="false" static="true" final="false" override="false" type="const QSet&lt;ExtensionSystem::PluginSpec *&gt;" signature="const QSet&lt;ExtensionSystem::PluginSpec *&gt; pluginsRequiringPlugin(ExtensionSystem::PluginSpec *spec)">
                    <parameter type="ExtensionSystem::PluginSpec *" name="spec" default=""/>
                </function>
                <function name="remoteArguments" fullname="ExtensionSystem::PluginManager::remoteArguments" href="extensionsystem-pluginmanager.html#remoteArguments" status="active" access="public" location="pluginmanager.h" filepath="C:/Users/qt/work/build/qt-creator/src/libs/extensionsystem/pluginmanager.h" lineno="152" documented="true" meta="plain" virtual="non" const="false" static="true" final="false" override="false" type="void" signature="void remoteArguments(const QString &amp;serializedArgument, QObject *socket)">
                    <parameter type="const QString &amp;" name="serializedArgument" default=""/>
                    <parameter type="QObject *" name="socket" default=""/>
                </function>
                <function name="removeObject" fullname="ExtensionSystem::PluginManager::removeObject" href="extensionsystem-pluginmanager.html#removeObject" status="active" access="public" location="pluginmanager.h" filepath="C:/Users/qt/work/build/qt-creator/src/libs/extensionsystem/pluginmanager.h" lineno="58" documented="true" meta="plain" virtual="non" const="false" static="true" final="false" override="false" type="void" signature="void removeObject(QObject *obj)">
                    <parameter type="QObject *" name="obj" default=""/>
                </function>
                <function name="serializedArguments" fullname="ExtensionSystem::PluginManager::serializedArguments" href="extensionsystem-pluginmanager.html#serializedArguments" status="active" access="public" location="pluginmanager.h" filepath="C:/Users/qt/work/build/qt-creator/src/libs/extensionsystem/pluginmanager.h" lineno="120" documented="true" meta="plain" virtual="non" const="false" static="true" final="false" override="false" type="QString" signature="QString serializedArguments()"/>
                <function name="setGlobalSettings" fullname="ExtensionSystem::PluginManager::setGlobalSettings" href="extensionsystem-pluginmanager.html#setGlobalSettings" status="active" access="public" location="pluginmanager.h" filepath="C:/Users/qt/work/build/qt-creator/src/libs/extensionsystem/pluginmanager.h" lineno="105" documented="true" meta="plain" virtual="non" const="false" static="true" final="false" override="false" type="void" signature="void setGlobalSettings(Utils::QtcSettings *settings)">
                    <parameter type="Utils::QtcSettings *" name="settings" default=""/>
                </function>
                <function name="setPluginIID" fullname="ExtensionSystem::PluginManager::setPluginIID" href="extensionsystem-pluginmanager.html#setPluginIID" status="active" access="public" location="pluginmanager.h" filepath="C:/Users/qt/work/build/qt-creator/src/libs/extensionsystem/pluginmanager.h" lineno="93" documented="true" meta="plain" virtual="non" const="false" static="true" final="false" override="false" type="void" signature="void setPluginIID(const QString &amp;iid)">
                    <parameter type="const QString &amp;" name="iid" default=""/>
                </function>
                <function name="setPluginPaths" fullname="ExtensionSystem::PluginManager::setPluginPaths" href="extensionsystem-pluginmanager.html#setPluginPaths" status="active" access="public" location="pluginmanager.h" filepath="C:/Users/qt/work/build/qt-creator/src/libs/extensionsystem/pluginmanager.h" lineno="91" documented="true" meta="plain" virtual="non" const="false" static="true" final="false" override="false" type="void" signature="void setPluginPaths(const QStringList &amp;paths)">
                    <parameter type="const QStringList &amp;" name="paths" default=""/>
                </function>
                <function name="setSettings" fullname="ExtensionSystem::PluginManager::setSettings" href="extensionsystem-pluginmanager.html#setSettings" status="active" access="public" location="pluginmanager.h" filepath="C:/Users/qt/work/build/qt-creator/src/libs/extensionsystem/pluginmanager.h" lineno="103" documented="true" meta="plain" virtual="non" const="false" static="true" final="false" override="false" type="void" signature="void setSettings(Utils::QtcSettings *settings)">
                    <parameter type="Utils::QtcSettings *" name="settings" default=""/>
                </function>
                <function name="settings" fullname="ExtensionSystem::PluginManager::settings" href="extensionsystem-pluginmanager.html#settings" status="active" access="public" location="pluginmanager.h" filepath="C:/Users/qt/work/build/qt-creator/src/libs/extensionsystem/pluginmanager.h" lineno="104" documented="true" meta="plain" virtual="non" const="false" static="true" final="false" override="false" type="Utils::QtcSettings *" signature="Utils::QtcSettings * settings()"/>
                <function name="shutdown" fullname="ExtensionSystem::PluginManager::shutdown" href="extensionsystem-pluginmanager.html#shutdown" status="active" access="public" location="pluginmanager.h" filepath="C:/Users/qt/work/build/qt-creator/src/libs/extensionsystem/pluginmanager.h" lineno="153" documented="true" meta="plain" virtual="non" const="false" static="true" final="false" override="false" type="void" signature="void shutdown()"/>
            </class>
            <class name="PluginSpec" fullname="ExtensionSystem::PluginSpec" href="extensionsystem-pluginspec.html" status="active" access="public" location="pluginspec.h" filepath="C:/Users/qt/work/build/qt-creator/src/libs/extensionsystem/pluginspec.h" lineno="79" documented="true" module="QtCreator" brief="Contains the information of the plugin's embedded meta data and information about the plugin's current state">
                <function name="addArgument" fullname="ExtensionSystem::PluginSpec::addArgument" href="extensionsystem-pluginspec.html#addArgument" status="active" access="public" location="pluginspec.h" filepath="C:/Users/qt/work/build/qt-creator/src/libs/extensionsystem/pluginspec.h" lineno="119" documented="true" meta="plain" virtual="non" const="false" static="false" final="false" override="false" type="void" signature="void addArgument(const QString &amp;argument)">
                    <parameter type="const QString &amp;" name="argument" default=""/>
                </function>
                <function name="argumentDescriptions" fullname="ExtensionSystem::PluginSpec::argumentDescriptions" href="extensionsystem-pluginspec.html#argumentDescriptions" status="active" access="public" location="pluginspec.h" filepath="C:/Users/qt/work/build/qt-creator/src/libs/extensionsystem/pluginspec.h" lineno="111" documented="true" meta="plain" virtual="non" const="true" static="false" final="false" override="false" type="ExtensionSystem::PluginSpec::PluginArgumentDescriptions" signature="ExtensionSystem::PluginSpec::PluginArgumentDescriptions argumentDescriptions() const"/>
                <function name="arguments" fullname="ExtensionSystem::PluginSpec::arguments" href="extensionsystem-pluginspec.html#arguments" status="active" access="public" location="pluginspec.h" filepath="C:/Users/qt/work/build/qt-creator/src/libs/extensionsystem/pluginspec.h" lineno="117" documented="true" meta="plain" virtual="non" const="true" static="false" final="false" override="false" type="QStringList" signature="QStringList arguments() const"/>
                <function name="category" fullname="ExtensionSystem::PluginSpec::category" href="extensionsystem-pluginspec.html#category" status="active" access="public" location="pluginspec.h" filepath="C:/Users/qt/work/build/qt-creator/src/libs/extensionsystem/pluginspec.h" lineno="95" documented="true" meta="plain" virtual="non" const="true" static="false" final="false" override="false" type="QString" signature="QString category() const"/>
                <function name="compatVersion" fullname="ExtensionSystem::PluginSpec::compatVersion" href="extensionsystem-pluginspec.html#compatVersion" status="active" access="public" location="pluginspec.h" filepath="C:/Users/qt/work/build/qt-creator/src/libs/extensionsystem/pluginspec.h" lineno="89" documented="true" meta="plain" virtual="non" const="true" static="false" final="false" override="false" type="QString" signature="QString compatVersion() const"/>
                <function name="copyright" fullname="ExtensionSystem::PluginSpec::copyright" href="extensionsystem-pluginspec.html#copyright" status="active" access="public" location="pluginspec.h" filepath="C:/Users/qt/work/build/qt-creator/src/libs/extensionsystem/pluginspec.h" lineno="91" documented="true" meta="plain" virtual="non" const="true" static="false" final="false" override="false" type="QString" signature="QString copyright() const"/>
                <function name="dependencies" fullname="ExtensionSystem::PluginSpec::dependencies" href="extensionsystem-pluginspec.html#dependencies" status="active" access="public" location="pluginspec.h" filepath="C:/Users/qt/work/build/qt-creator/src/libs/extensionsystem/pluginspec.h" lineno="107" documented="true" meta="plain" virtual="non" const="true" static="false" final="false" override="false" type="QVector&lt;ExtensionSystem::PluginDependency&gt;" signature="QVector&lt;ExtensionSystem::PluginDependency&gt; dependencies() const"/>
                <function name="dependencySpecs" fullname="ExtensionSystem::PluginSpec::dependencySpecs" href="extensionsystem-pluginspec.html#dependencySpecs" status="active" access="public" location="pluginspec.h" filepath="C:/Users/qt/work/build/qt-creator/src/libs/extensionsystem/pluginspec.h" lineno="124" documented="true" meta="plain" virtual="non" const="true" static="false" final="false" override="false" type="QHash&lt;ExtensionSystem::PluginDependency, ExtensionSystem::PluginSpec *&gt;" signature="QHash&lt;ExtensionSystem::PluginDependency, ExtensionSystem::PluginSpec *&gt; dependencySpecs() const"/>
                <function name="description" fullname="ExtensionSystem::PluginSpec::description" href="extensionsystem-pluginspec.html#description" status="active" access="public" location="pluginspec.h" filepath="C:/Users/qt/work/build/qt-creator/src/libs/extensionsystem/pluginspec.h" lineno="93" documented="true" meta="plain" virtual="non" const="true" static="false" final="false" override="false" type="QString" signature="QString description() const"/>
                <function name="errorString" fullname="ExtensionSystem::PluginSpec::errorString" href="extensionsystem-pluginspec.html#errorString" status="active" access="public" location="pluginspec.h" filepath="C:/Users/qt/work/build/qt-creator/src/libs/extensionsystem/pluginspec.h" lineno="133" documented="true" meta="plain" virtual="non" const="true" static="false" final="false" override="false" type="QString" signature="QString errorString() const"/>
                <function name="filePath" fullname="ExtensionSystem::PluginSpec::filePath" href="extensionsystem-pluginspec.html#filePath" status="active" access="public" location="pluginspec.h" filepath="C:/Users/qt/work/build/qt-creator/src/libs/extensionsystem/pluginspec.h" lineno="115" documented="true" meta="plain" virtual="non" const="true" static="false" final="false" override="false" type="QString" signature="QString filePath() const"/>
                <function name="hasError" fullname="ExtensionSystem::PluginSpec::hasError" href="extensionsystem-pluginspec.html#hasError" status="active" access="public" location="pluginspec.h" filepath="C:/Users/qt/work/build/qt-creator/src/libs/extensionsystem/pluginspec.h" lineno="132" documented="true" meta="plain" virtual="non" const="true" static="false" final="false" override="false" type="bool" signature="bool hasError() const"/>
                <function name="isAvailableForHostPlatform" fullname="ExtensionSystem::PluginSpec::isAvailableForHostPlatform" href="extensionsystem-pluginspec.html#isAvailableForHostPlatform" status="active" access="public" location="pluginspec.h" filepath="C:/Users/qt/work/build/qt-creator/src/libs/extensionsystem/pluginspec.h" lineno="98" documented="true" meta="plain" virtual="non" const="true" static="false" final="false" override="false" type="bool" signature="bool isAvailableForHostPlatform() const"/>
                <function name="isEffectivelyEnabled" fullname="ExtensionSystem::PluginSpec::isEffectivelyEnabled" href="extensionsystem-pluginspec.html#isEffectivelyEnabled" status="active" access="public" location="pluginspec.h" filepath="C:/Users/qt/work/build/qt-creator/src/libs/extensionsystem/pluginspec.h" lineno="103" documented="true" meta="plain" virtual="non" const="true" static="false" final="false" override="false" type="bool" signature="bool isEffectivelyEnabled() const"/>
                <function name="isEnabledByDefault" fullname="ExtensionSystem::PluginSpec::isEnabledByDefault" href="extensionsystem-pluginspec.html#isEnabledByDefault" status="active" access="public" location="pluginspec.h" filepath="C:/Users/qt/work/build/qt-creator/src/libs/extensionsystem/pluginspec.h" lineno="101" documented="true" meta="plain" virtual="non" const="true" static="false" final="false" override="false" type="bool" signature="bool isEnabledByDefault() const"/>
                <function name="isEnabledBySettings" fullname="ExtensionSystem::PluginSpec::isEnabledBySettings" href="extensionsystem-pluginspec.html#isEnabledBySettings" status="active" access="public" location="pluginspec.h" filepath="C:/Users/qt/work/build/qt-creator/src/libs/extensionsystem/pluginspec.h" lineno="102" documented="true" meta="plain" virtual="non" const="true" static="false" final="false" override="false" type="bool" signature="bool isEnabledBySettings() const"/>
                <function name="isEnabledIndirectly" fullname="ExtensionSystem::PluginSpec::isEnabledIndirectly" href="extensionsystem-pluginspec.html#isEnabledIndirectly" status="active" access="public" location="pluginspec.h" filepath="C:/Users/qt/work/build/qt-creator/src/libs/extensionsystem/pluginspec.h" lineno="104" documented="true" meta="plain" virtual="non" const="true" static="false" final="false" override="false" type="bool" signature="bool isEnabledIndirectly() const"/>
                <function name="isExperimental" fullname="ExtensionSystem::PluginSpec::isExperimental" href="extensionsystem-pluginspec.html#isExperimental" status="active" access="public" location="pluginspec.h" filepath="C:/Users/qt/work/build/qt-creator/src/libs/extensionsystem/pluginspec.h" lineno="100" documented="true" meta="plain" virtual="non" const="true" static="false" final="false" override="false" type="bool" signature="bool isExperimental() const"/>
                <function name="isForceDisabled" fullname="ExtensionSystem::PluginSpec::isForceDisabled" href="extensionsystem-pluginspec.html#isForceDisabled" status="active" access="public" location="pluginspec.h" filepath="C:/Users/qt/work/build/qt-creator/src/libs/extensionsystem/pluginspec.h" lineno="106" documented="true" meta="plain" virtual="non" const="true" static="false" final="false" override="false" type="bool" signature="bool isForceDisabled() const"/>
                <function name="isForceEnabled" fullname="ExtensionSystem::PluginSpec::isForceEnabled" href="extensionsystem-pluginspec.html#isForceEnabled" status="active" access="public" location="pluginspec.h" filepath="C:/Users/qt/work/build/qt-creator/src/libs/extensionsystem/pluginspec.h" lineno="105" documented="true" meta="plain" virtual="non" const="true" static="false" final="false" override="false" type="bool" signature="bool isForceEnabled() const"/>
                <function name="isRequired" fullname="ExtensionSystem::PluginSpec::isRequired" href="extensionsystem-pluginspec.html#isRequired" status="active" access="public" location="pluginspec.h" filepath="C:/Users/qt/work/build/qt-creator/src/libs/extensionsystem/pluginspec.h" lineno="99" documented="true" meta="plain" virtual="non" const="true" static="false" final="false" override="false" type="bool" signature="bool isRequired() const"/>
                <function name="license" fullname="ExtensionSystem::PluginSpec::license" href="extensionsystem-pluginspec.html#license" status="active" access="public" location="pluginspec.h" filepath="C:/Users/qt/work/build/qt-creator/src/libs/extensionsystem/pluginspec.h" lineno="92" documented="true" meta="plain" virtual="non" const="true" static="false" final="false" override="false" type="QString" signature="QString license() const"/>
                <function name="location" fullname="ExtensionSystem::PluginSpec::location" href="extensionsystem-pluginspec.html#location" status="active" access="public" location="pluginspec.h" filepath="C:/Users/qt/work/build/qt-creator/src/libs/extensionsystem/pluginspec.h" lineno="114" documented="true" meta="plain" virtual="non" const="true" static="false" final="false" override="false" type="QString" signature="QString location() const"/>
                <function name="metaData" fullname="ExtensionSystem::PluginSpec::metaData" href="extensionsystem-pluginspec.html#metaData" status="active" access="public" location="pluginspec.h" filepath="C:/Users/qt/work/build/qt-creator/src/libs/extensionsystem/pluginspec.h" lineno="108" documented="true" meta="plain" virtual="non" const="true" static="false" final="false" override="false" type="QJsonObject" signature="QJsonObject metaData() const"/>
                <function name="name" fullname="ExtensionSystem::PluginSpec::name" href="extensionsystem-pluginspec.html#name" status="active" access="public" location="pluginspec.h" filepath="C:/Users/qt/work/build/qt-creator/src/libs/extensionsystem/pluginspec.h" lineno="87" documented="true" meta="plain" virtual="non" const="true" static="false" final="false" override="false" type="QString" signature="QString name() const"/>
                <function name="platformSpecification" fullname="ExtensionSystem::PluginSpec::platformSpecification" href="extensionsystem-pluginspec.html#platformSpecification" status="active" access="public" location="pluginspec.h" filepath="C:/Users/qt/work/build/qt-creator/src/libs/extensionsystem/pluginspec.h" lineno="97" documented="true" since="3.0" meta="plain" virtual="non" const="true" static="false" final="false" override="false" type="QRegularExpression" signature="QRegularExpression platformSpecification() const"/>
                <function name="plugin" fullname="ExtensionSystem::PluginSpec::plugin" href="extensionsystem-pluginspec.html#plugin" status="active" access="public" location="pluginspec.h" filepath="C:/Users/qt/work/build/qt-creator/src/libs/extensionsystem/pluginspec.h" lineno="128" documented="true" meta="plain" virtual="non" const="true" static="false" final="false" override="false" type="ExtensionSystem::IPlugin *" signature="ExtensionSystem::IPlugin * plugin() const"/>
                <function name="provides" fullname="ExtensionSystem::PluginSpec::provides" href="extensionsystem-pluginspec.html#provides" status="active" access="public" location="pluginspec.h" filepath="C:/Users/qt/work/build/qt-creator/src/libs/extensionsystem/pluginspec.h" lineno="121" documented="true" meta="plain" virtual="non" const="true" static="false" final="false" override="false" type="bool" signature="bool provides(const QString &amp;pluginName, const QString &amp;version) const">
                    <parameter type="const QString &amp;" name="pluginName" default=""/>
                    <parameter type="const QString &amp;" name="version" default=""/>
                </function>
                <function name="requiresAny" fullname="ExtensionSystem::PluginSpec::requiresAny" href="extensionsystem-pluginspec.html#requiresAny" status="active" access="public" location="pluginspec.h" filepath="C:/Users/qt/work/build/qt-creator/src/libs/extensionsystem/pluginspec.h" lineno="125" documented="true" meta="plain" virtual="non" const="true" static="false" final="false" override="false" type="bool" signature="bool requiresAny(const QSet&lt;ExtensionSystem::PluginSpec *&gt; &amp;plugins) const">
                    <parameter type="const QSet&lt;ExtensionSystem::PluginSpec *&gt; &amp;" name="plugins" default=""/>
                </function>
                <function name="setArguments" fullname="ExtensionSystem::PluginSpec::setArguments" href="extensionsystem-pluginspec.html#setArguments" status="active" access="public" location="pluginspec.h" filepath="C:/Users/qt/work/build/qt-creator/src/libs/extensionsystem/pluginspec.h" lineno="118" documented="true" meta="plain" virtual="non" const="false" static="false" final="false" override="false" type="void" signature="void setArguments(const QStringList &amp;arguments)">
                    <parameter type="const QStringList &amp;" name="arguments" default=""/>
                </function>
                <function name="setEnabledBySettings" fullname="ExtensionSystem::PluginSpec::setEnabledBySettings" href="extensionsystem-pluginspec.html#setEnabledBySettings" status="active" access="public" location="pluginspec.h" filepath="C:/Users/qt/work/build/qt-creator/src/libs/extensionsystem/pluginspec.h" lineno="135" documented="true" meta="plain" virtual="non" const="false" static="false" final="false" override="false" type="void" signature="void setEnabledBySettings(bool value)">
                    <parameter type="bool" name="value" default=""/>
                </function>
                <function name="state" fullname="ExtensionSystem::PluginSpec::state" href="extensionsystem-pluginspec.html#state" status="active" access="public" location="pluginspec.h" filepath="C:/Users/qt/work/build/qt-creator/src/libs/extensionsystem/pluginspec.h" lineno="131" documented="true" meta="plain" virtual="non" const="true" static="false" final="false" override="false" type="ExtensionSystem::PluginSpec::State" signature="ExtensionSystem::PluginSpec::State state() const"/>
                <function name="url" fullname="ExtensionSystem::PluginSpec::url" href="extensionsystem-pluginspec.html#url" status="active" access="public" location="pluginspec.h" filepath="C:/Users/qt/work/build/qt-creator/src/libs/extensionsystem/pluginspec.h" lineno="94" documented="true" meta="plain" virtual="non" const="true" static="false" final="false" override="false" type="QString" signature="QString url() const"/>
                <function name="vendor" fullname="ExtensionSystem::PluginSpec::vendor" href="extensionsystem-pluginspec.html#vendor" status="active" access="public" location="pluginspec.h" filepath="C:/Users/qt/work/build/qt-creator/src/libs/extensionsystem/pluginspec.h" lineno="90" documented="true" meta="plain" virtual="non" const="true" static="false" final="false" override="false" type="QString" signature="QString vendor() const"/>
                <function name="version" fullname="ExtensionSystem::PluginSpec::version" href="extensionsystem-pluginspec.html#version" status="active" access="public" location="pluginspec.h" filepath="C:/Users/qt/work/build/qt-creator/src/libs/extensionsystem/pluginspec.h" lineno="88" documented="true" meta="plain" virtual="non" const="true" static="false" final="false" override="false" type="QString" signature="QString version() const"/>
                <enum name="State" fullname="ExtensionSystem::PluginSpec::State" href="extensionsystem-pluginspec.html#State-enum" status="active" access="public" location="pluginspec.h" filepath="C:/Users/qt/work/build/qt-creator/src/libs/extensionsystem/pluginspec.h" lineno="82" documented="true">
                    <value name="Invalid" value="0"/>
                    <value name="Read" value="1"/>
                    <value name="Resolved" value="2"/>
                    <value name="Loaded" value="3"/>
                    <value name="Initialized" value="4"/>
                    <value name="Running" value="5"/>
                    <value name="Stopped" value="6"/>
                    <value name="Deleted" value="7"/>
                </enum>
            </class>
            <class name="PluginView" fullname="ExtensionSystem::PluginView" href="extensionsystem-pluginview.html" status="active" access="public" location="pluginview.h" filepath="C:/Users/qt/work/build/qt-creator/src/libs/extensionsystem/pluginview.h" lineno="48" documented="true" bases="QWidget" module="QtCreator" brief="Implements a widget that shows a list of all plugins and their state">
                <function name="PluginView" fullname="ExtensionSystem::PluginView::PluginView" href="extensionsystem-pluginview.html#PluginView" status="active" access="public" location="pluginview.h" filepath="C:/Users/qt/work/build/qt-creator/src/libs/extensionsystem/pluginview.h" lineno="53" documented="true" meta="constructor" virtual="non" const="false" static="false" final="false" override="false" type="" signature="PluginView(QWidget *parent)">
                    <parameter type="QWidget *" name="parent" default="nullptr"/>
                </function>
                <function name="currentPlugin" fullname="ExtensionSystem::PluginView::currentPlugin" href="extensionsystem-pluginview.html#currentPlugin" status="active" access="public" location="pluginview.h" filepath="C:/Users/qt/work/build/qt-creator/src/libs/extensionsystem/pluginview.h" lineno="56" documented="true" meta="plain" virtual="non" const="true" static="false" final="false" override="false" type="ExtensionSystem::PluginSpec *" signature="ExtensionSystem::PluginSpec * currentPlugin() const"/>
                <function name="currentPluginChanged" fullname="ExtensionSystem::PluginView::currentPluginChanged" href="extensionsystem-pluginview.html#currentPluginChanged" status="active" access="public" location="pluginview.h" filepath="C:/Users/qt/work/build/qt-creator/src/libs/extensionsystem/pluginview.h" lineno="60" documented="true" meta="signal" virtual="non" const="false" static="false" final="false" override="false" type="void" signature="void currentPluginChanged(ExtensionSystem::PluginSpec *spec)">
                    <parameter type="ExtensionSystem::PluginSpec *" name="spec" default=""/>
                </function>
                <function name="pluginActivated" fullname="ExtensionSystem::PluginView::pluginActivated" href="extensionsystem-pluginview.html#pluginActivated" status="active" access="public" location="pluginview.h" filepath="C:/Users/qt/work/build/qt-creator/src/libs/extensionsystem/pluginview.h" lineno="61" documented="true" meta="signal" virtual="non" const="false" static="false" final="false" override="false" type="void" signature="void pluginActivated(ExtensionSystem::PluginSpec *spec)">
                    <parameter type="ExtensionSystem::PluginSpec *" name="spec" default=""/>
                </function>
                <function name="pluginSettingsChanged" fullname="ExtensionSystem::PluginView::pluginSettingsChanged" href="extensionsystem-pluginview.html#pluginSettingsChanged" status="active" access="public" location="pluginview.h" filepath="C:/Users/qt/work/build/qt-creator/src/libs/extensionsystem/pluginview.h" lineno="62" documented="true" meta="signal" virtual="non" const="false" static="false" final="false" override="false" type="void" signature="void pluginSettingsChanged(ExtensionSystem::PluginSpec *spec)">
                    <parameter type="ExtensionSystem::PluginSpec *" name="spec" default=""/>
                </function>
                <function name="setFilter" fullname="ExtensionSystem::PluginView::setFilter" href="extensionsystem-pluginview.html#setFilter" status="active" access="public" location="pluginview.h" filepath="C:/Users/qt/work/build/qt-creator/src/libs/extensionsystem/pluginview.h" lineno="57" documented="true" meta="plain" virtual="non" const="false" static="false" final="false" override="false" type="void" signature="void setFilter(const QString &amp;filter)">
                    <parameter type="const QString &amp;" name="filter" default=""/>
                </function>
            </class>
        </namespace>
        <page name="external-tool-spec.html" href="external-tool-spec.html" status="active" location="external-tool-spec.qdoc" filepath="C:/Users/qt/work/build/qt-creator/doc/qtcreatordev/src/external-tool-spec.qdoc" lineno="26" documented="true" subtype="page" title="External Tool Specification Files" fulltitle="External Tool Specification Files" subtitle="">
            <contents name="file-name" title="File Name" level="1"/>
            <contents name="location" title="Location" level="1"/>
            <contents name="file-format" title="File Format" level="1"/>
            <contents name="main-tag" title="Main Tag" level="2"/>
            <contents name="description-tags" title="Description Tags" level="2"/>
            <contents name="executable-specification-tag" title="Executable Specification Tag" level="2"/>
            <contents name="example" title="Example" level="1"/>
        </page>
        <page name="getting-and-building.html" href="getting-and-building.html" status="active" location="getting-and-building.qdoc" filepath="C:/Users/qt/work/build/qt-creator/doc/qtcreatordev/src/getting-and-building.qdoc" lineno="26" documented="true" subtype="page" title="Getting and Building Qt Creator" fulltitle="Getting and Building Qt Creator" subtitle="">
            <contents name="getting-qt" title="Getting Qt" level="1"/>
            <contents name="getting-and-building-qt-creator" title="Getting and Building Qt Creator" level="1"/>
        </page>
        <page name="plugin-lifecycle.html" href="plugin-lifecycle.html" status="active" location="plugin-lifecycle.qdoc" filepath="C:/Users/qt/work/build/qt-creator/doc/qtcreatordev/src/plugin-lifecycle.qdoc" lineno="26" documented="true" subtype="page" title="Plugin Life Cycle" fulltitle="Plugin Life Cycle" subtitle=""/>
        <page name="plugin-meta-data.html" href="plugin-meta-data.html" status="active" location="plugin-metadata.qdoc" filepath="C:/Users/qt/work/build/qt-creator/doc/qtcreatordev/src/plugin-metadata.qdoc" lineno="26" documented="true" subtype="page" title="Plugin Meta Data" fulltitle="Plugin Meta Data" subtitle="">
            <contents name="main-keys" title="Main Keys" level="2"/>
            <contents name="plugin-describing-keys" title="Plugin-describing Keys" level="2"/>
            <contents name="dependencies" title="Dependencies" level="2"/>
            <contents name="optional-dependencies" title="Optional Dependencies" level="3"/>
            <contents name="test-dependencies" title="Test Dependencies" level="3"/>
            <contents name="command-line-arguments" title="Command Line Arguments" level="2"/>
            <contents name="example-test-op-op-json" title="Example Test&lt;@op&gt;.&lt;/@op&gt;json" level="2"/>
            <contents name="a-note-on-plugin-versions" title="A Note on Plugin Versions" level="2"/>
        </page>
        <page name="qtcreator-api.html" href="qtcreator-api.html" status="active" location="qtcreator-module.qdoc" filepath="C:/Users/qt/work/build/qt-creator/doc/qtcreatordev/src/qtcreator-module.qdoc" lineno="26" documented="true" subtype="page" title="Qt Creator API Reference" fulltitle="Qt Creator API Reference" subtitle="">
            <contents name="libraries" title="Libraries" level="1"/>
            <contents name="core-libraries" title="Core Libraries" level="2"/>
            <contents name="plugins" title="Plugins" level="1"/>
            <contents name="reference" title="Reference" level="1"/>
        </page>
        <page name="coding-style.html" href="coding-style.html" status="active" location="coding-style.qdoc" filepath="C:/Users/qt/work/build/qt-creator/doc/qtcreatordev/src/coding-style.qdoc" lineno="26" documented="true" subtype="page" title="Qt Creator Coding Rules" fulltitle="Qt Creator Coding Rules" subtitle="">
            <target name="coding-rules-namespacing"/>
            <contents name="submitting-code" title="Submitting Code" level="1"/>
            <contents name="binary-and-source-compatibility" title="Binary and Source Compatibility" level="1"/>
            <contents name="code-constructs" title="Code Constructs" level="1"/>
            <contents name="formatting" title="Formatting" level="1"/>
            <contents name="capitalizing-identifiers" title="Capitalizing Identifiers" level="2"/>
            <contents name="whitespace" title="Whitespace" level="2"/>
            <contents name="pointers-and-references" title="Pointers and References" level="3"/>
            <contents name="operator-names-and-parentheses" title="Operator Names and Parentheses" level="3"/>
            <contents name="function-names-and-parentheses" title="Function Names and Parentheses" level="3"/>
            <contents name="keywords" title="Keywords" level="3"/>
            <contents name="comments" title="Comments" level="3"/>
            <contents name="braces" title="Braces" level="2"/>
            <contents name="parentheses" title="Parentheses" level="2"/>
            <contents name="line-breaks" title="Line Breaks" level="2"/>
            <contents name="declarations" title="Declarations" level="2"/>
            <contents name="declaring-variables" title="Declaring Variables" level="3"/>
            <contents name="namespaces" title="Namespaces" level="2"/>
            <contents name="patterns-and-practices" title="Patterns and Practices" level="1"/>
            <contents name="namespacing" title="Namespacing" level="2"/>
            <contents name="passing-file-names" title="Passing File Names" level="2"/>
            <contents name="classes-to-use-and-classes-not-to-use" title="Classes to Use and Classes Not to Use" level="2"/>
            <contents name="plugin-extension-points" title="Plugin Extension Points" level="2"/>
            <contents name="using-the-global-object-pool" title="Using the Global Object Pool" level="2"/>
            <contents name="c-features" title="C++ Features" level="2"/>
            <contents name="null-pointers" title="Null Pointers" level="3"/>
            <contents name="c-11-and-c-14-features" title="C++11 and C++14 Features" level="2"/>
            <contents name="lambdas" title="Lambdas" level="3"/>
            <contents name="keyword-auto-keyword-keyword" title="&lt;@keyword&gt;auto&lt;/@keyword&gt; Keyword" level="3"/>
            <contents name="scoped-enums" title="Scoped enums" level="3"/>
            <contents name="delegating-constructors" title="Delegating constructors" level="3"/>
            <contents name="initializer-list" title="Initializer list" level="3"/>
            <contents name="initialization-with-curly-brackets" title="Initialization with Curly Brackets" level="3"/>
            <contents name="non-static-data-member-initialization" title="Non-Static Data Member Initialization" level="3"/>
            <contents name="defaulted-and-deleted-functions" title="Defaulted and Deleted Functions" level="3"/>
            <contents name="override" title="Override" level="3"/>
            <contents name="nullptr" title="Nullptr" level="3"/>
            <contents name="range-based-for-loop" title="Range-Based for-Loop" level="3"/>
            <contents name="using-qobject" title="Using QObject" level="2"/>
            <contents name="file-headers" title="File Headers" level="2"/>
            <contents name="including-headers" title="Including Headers" level="2"/>
            <contents name="casting" title="Casting" level="2"/>
            <contents name="compiler-and-platform-specific-issues" title="Compiler and Platform-specific Issues" level="2"/>
            <contents name="esthetics" title="Esthetics" level="2"/>
            <contents name="inheriting-from-template-or-tool-classes" title="Inheriting from Template or Tool Classes" level="2"/>
            <contents name="inheritance-versus-aggregation" title="Inheritance Versus Aggregation" level="2"/>
            <contents name="conventions-for-public-header-files" title="Conventions for Public Header Files" level="2"/>
            <contents name="class-member-names" title="Class Member Names" level="1"/>
            <contents name="documentation" title="Documentation" level="1"/>
        </page>
        <page name="functions.html" href="functions.html" status="active" location="qtcreator-module.qdoc" filepath="C:/Users/qt/work/build/qt-creator/doc/qtcreatordev/src/qtcreator-module.qdoc" lineno="168" documented="true" subtype="page" title="Qt Creator Functions" fulltitle="Qt Creator Functions" subtitle=""/>
        <page name="mainclasses.html" href="mainclasses.html" status="active" location="qtcreator-module.qdoc" filepath="C:/Users/qt/work/build/qt-creator/doc/qtcreatordev/src/qtcreator-module.qdoc" lineno="159" documented="true" subtype="page" title="Qt Creator Main Classes" fulltitle="Qt Creator Main Classes" subtitle=""/>
        <page name="namespaces.html" href="namespaces.html" status="active" location="qtcreator-module.qdoc" filepath="C:/Users/qt/work/build/qt-creator/doc/qtcreatordev/src/qtcreator-module.qdoc" lineno="148" documented="true" subtype="page" title="Qt Creator Namespaces" fulltitle="Qt Creator Namespaces" subtitle=""/>
        <page name="actionmanager.html" href="actionmanager.html" status="active" location="actionmanager.qdoc" filepath="C:/Users/qt/work/build/qt-creator/doc/qtcreatordev/src/actionmanager.qdoc" lineno="26" documented="true" subtype="page" title="The Action Manager and Commands" fulltitle="The Action Manager and Commands" subtitle="">
            <contents name="command" title="Command" level="1"/>
            <contents name="contexts" title="Contexts" level="1"/>
            <contents name="using-icontext" title="Using IContext" level="2"/>
            <contents name="manually-managing-contexts" title="Manually Managing Contexts" level="2"/>
            <contents name="registering-actions" title="Registering Actions" level="1"/>
            <contents name="summary" title="Summary" level="1"/>
        </page>
        <page name="pluginmanager.html" href="pluginmanager.html" status="active" location="pluginmanager.qdoc" filepath="C:/Users/qt/work/build/qt-creator/doc/qtcreatordev/src/pluginmanager.qdoc" lineno="26" documented="true" subtype="page" title="The Plugin Manager, the Object Pool, and Registered Objects" fulltitle="The Plugin Manager, the Object Pool, and Registered Objects" subtitle="">
            <target name="object-pool" title="object pool"/>
            <contents name="plugin-manager" title="Plugin Manager" level="1"/>
            <contents name="object-pool-and-registered-objects" title="Object Pool and Registered Objects" level="1"/>
        </page>
        <page name="qtcreator-ui-text.html" href="qtcreator-ui-text.html" status="active" location="qtcreator-ui-text.qdoc" filepath="C:/Users/qt/work/build/qt-creator/doc/qtcreatordev/src/qtcreator-ui-text.qdoc" lineno="26" documented="true" subtype="page" title="User Interface Text Guidelines" fulltitle="User Interface Text Guidelines" subtitle="">
            <contents name="grammar-and-style" title="Grammar and Style" level="1"/>
            <contents name="punctuation" title="Punctuation" level="1"/>
            <contents name="writing-tooltips" title="Writing Tooltips" level="2"/>
            <contents name="writing-tooltips-in-design-mode" title="Writing Tooltips in Design Mode" level="3"/>
            <contents name="writing-messages" title="Writing Messages" level="2"/>
            <contents name="ui-text-capitalization" title="UI Text Capitalization" level="1"/>
            <contents name="using-book-style-capitalization" title="Using Book Style Capitalization" level="2"/>
            <contents name="checking-book-style-capitalization" title="Checking Book Style Capitalization" level="3"/>
            <contents name="using-sentence-style-capitalization" title="Using Sentence Style Capitalization" level="2"/>
            <contents name="preparing-for-localization" title="Preparing for Localization" level="1"/>
            <contents name="marking-ui-text-for-translation" title="Marking UI Text for Translation" level="2"/>
            <contents name="features-of-languages-or-writing-systems" title="Features of Languages or Writing Systems" level="2"/>
            <contents name="common-qt-creator-terms" title="Common Qt Creator Terms" level="1"/>
        </page>
        <page name="qtcreator-documentation.html" href="qtcreator-documentation.html" status="active" location="qtcreator-documentation.qdoc" filepath="C:/Users/qt/work/build/qt-creator/doc/qtcreatordev/src/qtcreator-documentation.qdoc" lineno="26" documented="true" subtype="page" title="Writing Documentation" fulltitle="Writing Documentation" subtitle="">
            <contents name="configuring-documentation-projects" title="Configuring Documentation Projects" level="1"/>
            <contents name="creating-folders-and-files" title="Creating Folders and Files" level="1"/>
            <contents name="integrating-topics-to-documentation" title="Integrating Topics to Documentation" level="1"/>
            <contents name="showing-and-hiding-information" title="Showing and Hiding Information" level="2"/>
            <contents name="excluding-source-files-from-qt-design-studio-manual-builds" title="Excluding Source Files from Qt Design Studio Manual Builds" level="3"/>
            <contents name="hiding-text-in-qt-creator-manual-sources" title="Hiding Text in Qt Creator Manual Sources" level="3"/>
            <contents name="writing-about-qt-design-studio-specific-features" title="Writing About Qt Design Studio Specific Features" level="3"/>
            <contents name="including-sections-in-qt-creator-manual-sources" title="Including Sections in Qt Creator Manual Sources" level="3"/>
            <contents name="updating-next-and-previous-links" title="Updating Next and Previous Links" level="2"/>
            <contents name="adding-documentation-for-independent-plugins" title="Adding Documentation for Independent Plugins" level="1"/>
            <contents name="writing-text" title="Writing Text" level="1"/>
            <contents name="capitalizing-headings" title="Capitalizing Headings" level="2"/>
            <contents name="using-images" title="Using Images" level="1"/>
            <contents name="taking-screen-shots" title="Taking Screen Shots" level="2"/>
            <contents name="hightlighting-parts-of-the-screen" title="Hightlighting Parts of the Screen" level="2"/>
            <contents name="optimizing-images" title="Optimizing Images" level="2"/>
            <contents name="using-riot" title="Using RIOT" level="3"/>
            <contents name="using-optipng" title="Using OptiPNG" level="3"/>
            <contents name="linking-to-youtube-videos" title="Linking to Youtube Videos" level="2"/>
            <contents name="building-documentation" title="Building Documentation" level="1"/>
            <contents name="setting-up-documentation-builds" title="Setting Up Documentation Builds" level="2"/>
            <contents name="using-cmake" title="Using CMake" level="3"/>
            <contents name="using-qmake" title="Using qmake" level="3"/>
            <contents name="additional-build-commands" title="Additional Build Commands" level="2"/>
        </page>
        <group name="mainclasses" href="mainclasses.html" status="internal" seen="false" title=""/>
        <module name="Qt Creator" href="qt-creator-module.html" status="internal" seen="false" title=""/>
        <module name="QtCreator" href="qtcreator-module.html" status="active" location="qtcreator-module.qdoc" filepath="C:/Users/qt/work/build/qt-creator/doc/qtcreatordev/src/qtcreator-module.qdoc" lineno="139" documented="true" seen="true" title="Qt Creator C++ Classes"/>
    </namespace>
</INDEX>
